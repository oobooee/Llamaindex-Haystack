Data ID,Iteration,Extracted text from Extractor Agent,Prompt used for Summarizer Agent,Generated About,ROUGE-1 score,ROUGE-2 score,ROUGE-L score,README,Ground truth description,Final Summarizer Prompt
0,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'\n\nReact components for efficiently rendering large lists and tabular data.\nCheck out  for some examples.\n\n### If you like this project, \xf0\x9f\x8e\x89  or \xe2\x98\x95 \n\n### Sponsors\n\nThe following wonderful companies have sponsored react-virtualized:\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n## A word about \n\nIf youre considering adding  to a project, take a look at  as a possible lighter-weight alternative. \n\n## Getting started\n\nInstall  using npm.\n\n\n\nES6, CommonJS, and UMD builds are available with each distribution.\nFor example:\n\n\n\nNote webpack 4 makes this optimization itself, see the .\n\nIf the above syntax looks too cumbersome, or you import react-virtualized components from a lot of places, you can also configure a Webpack alias. For example:\n\n\n\nThen you can just import like so:\n\n\n\nYou can also use a global-friendly UMD build:\n\n\n\nNow youre ready to start using the components.\nYou can learn more about which components react-virtualized has to offer .\n\n## Dependencies\n\nReact Virtualized has very few dependencies and most are managed by NPM automatically.\nHowever the following peer dependencies must be specified by your project in order to avoid version conflicts:\n,\n.\nNPM will not automatically install these for you but it will show you a warning message with instructions on how to install them.\n\n## Pure Components\n\nBy default all react-virtualized components use  to avoid re-rendering unless props or state has changed.\nThis occasionally confuses users when a collections data changes (eg  => ) but props do not (eg ).\n\nThe solution to this is to let react-virtualized know that something external has changed.\nThis can be done a couple of different ways.\n\n###### Pass-thru props\n\nThe  method will detect changes to any props, even if they arent declared as .\nThis means you can also pass through additional properties that affect cell rendering to ensure changes are detected.\nFor example, if youre using  to render a list of items that may be re-sorted after initial render- react-virtualized would not normally detect the sort operation because none of the properties it deals with change.\nHowever you can pass through the additional sort property to trigger a re-render.\nFor example:\n\n\n\n###### Public methods\n\n and  components can be forcefully re-rendered using .\nFor  and , youll need to call  to ensure that the inner  is also updated. For , youll need to call  to ensure that the inner s are updated.\n\n## Documentation\n\nAPI documentation available .\n\nThere are also a couple of how-to guides:\n\n- \n- \n- \n- \n- \n- \n\n## Examples\n\nExamples for each component can be seen in .\n\nHere are some online demos of each component:\n\n- \n- \n- \n- \n- \n- \n- \n- \n- \n- \n- \n- \n- \n\nAnd here are some ""recipe"" type demos:\n\n- \n- \n- \n- \n- \n\n## Supported Browsers\n\nreact-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).\n\nIf you find a browser-specific problem, please report it along with a repro case. The easiest way to do this is probably by forking .\n\n## Friends\n\nHere are some great components built on top of react-virtualized:\n\n- : Infinite scrolling date-picker with localization, themes, keyboard support, and more\n- : Higher-order components to turn any list into an animated, touch-friendly, sortable list\n- : Drag-and-drop sortable representation of hierarchical data\n- : Checkbox group component with virtualization for large number of options\n- : Drop-down menu for React with windowing to support large numbers of options.\n- : A reactive tree component that aims to render large sets of tree structured data in an elegant and performant way\n- : A calendar timeline component that is capable of displaying and interacting with a large number of items\n\n## Contributions\n\nUse  for requests.\n\nI actively welcome pull requests; learn how to .\n\n## Changelog\n\nChanges are tracked in the .\n\n## License\n\n_react-virtualized_ is available under the MIT License.\n'",React components for efficiently rendering large lists and tabular data
0,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
0,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
0,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
0,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
0,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
0,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
0,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
0,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
0,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
0,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
0,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
0,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
0,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
0,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
0,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
0,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
0,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
0,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
0,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
0,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
0,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
0,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
0,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
0,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
0,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
0,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
0,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
0,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
0,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
0,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
0,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
0,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
0,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
0,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
0,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
0,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
0,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
0,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
0,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
0,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
0,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
0,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
0,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
0,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
0,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
0,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
0,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
0,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
0,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
0,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
0,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
0,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
0,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
0,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
0,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
0,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
0,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
0,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
0,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
0,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
0,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
0,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
0,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
0,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
0,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
0,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
0,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
0,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
0,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
0,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
0,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
0,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
0,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
0,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
0,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
0,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
0,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
0,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
0,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
0,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
0,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
0,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
0,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
0,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
0,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
0,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
0,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
0,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
0,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
0,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
0,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
1,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'\n\n\n\n\n\n\n\n\n\n\n\n# \n\nKysely (pronounce \xe2\x80\x9cKey-Seh-Lee\xe2\x80\x9d) is a type-safe and autocompletion-friendly typescript SQL query builder.\nInspired by . Mainly developed for  but also \nruns on all other javascript environments like .\n\n\n\nKysely makes sure you only refer to tables and columns that are visible to the part of the query\nyoure writing. The result type only has the selected columns with correct types and aliases. As an\nadded bonus you get autocompletion for all that stuff.\n\nAs shown in the gif above, through the pure magic of modern typescript, Kysely is even able to parse\nthe alias given to  and add the  column to the result row type. Kysely is able to infer\ncolumn names, aliases and types from selected subqueries, joined subqueries,  statements and pretty\nmuch anything you can think of.\n\nOf course there are cases where things cannot be typed at compile time, and Kysely offers escape\nhatches for these situations. See the \nand the  for more info.\n\nAll API documentation is written in the typing files and you can simply hover over the module, class\nor method youre using to see it in your IDE. The same documentation is also hosted .\n\nIf you start using Kysely and cant find something youd want to use, please open an issue or join our\n.\n\n# Getting started\n\nPlease visit our documentation site  to get started. We also have a comprehensive\nAPI documentation hosted  but you can access the same\ndocumentation in your IDE by hovering over a class/method/property/whatever.\n\n# Contributors\n\n\n    \n        \n    \n    \n    Want to contribute? Check out our contribution guidelines.\n\n\n\n    \n        \n    \n\n'",A type-safe typescript SQL query builder
1,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
1,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
1,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
1,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
1,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
1,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
1,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
1,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
1,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
1,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
1,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
1,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
1,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
1,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
1,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
1,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
1,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
1,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
1,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
1,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
1,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
1,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
1,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
1,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
1,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
1,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
1,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
1,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
1,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
1,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
1,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
1,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
1,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
1,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
1,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
1,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
1,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
1,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
1,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
1,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
1,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
1,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
1,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
1,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
1,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
1,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
1,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
1,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
1,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
1,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
1,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
1,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
1,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
1,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
1,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
1,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
1,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
1,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
1,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
1,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
1,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
1,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
1,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
1,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
1,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
1,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
1,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
1,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
1,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
1,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
1,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
1,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
1,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
1,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
1,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
1,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
1,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
1,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
1,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
1,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
1,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
1,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
1,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
1,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
1,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
1,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
1,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
1,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
1,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
1,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
1,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
2,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'# TscanCode \r\n\r\n\r\n\r\n## A fast and accurate static analysis solution for C/C++, C#, Lua codes\r\n\r\nTencent is pleased to support the open source community by making TscanCode available.\r\n\r\nCopyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.\r\n\r\n## Introduction\r\n\r\nTscanCode is devoted to help programmers to find out code defects at the very beginning.  \r\n* TscanCode supports multi-language: ,  and  codes;\r\n* TscanCode is  and , The performance can be 200K lines per minute and  the accuracy rate is about 90%;   \r\n* TscanCode is , It doesnt require strict compiling enviroment and one single command can make it work; \r\n* TscanCode is , you can implement your own checks with TscanCode.\r\n\r\n## Highlights in v2.15.02 (2022-04-28)\r\n* lua crash fix and more useful checkers\r\n\r\n## Highlights in v2.15.01 (2022-01-19)\r\n* lua5.4 support\r\n* a lot of bugfixes and new features\r\n\r\n## Highlights in v2.14.24 (2018-02-24)\r\n*  was released on GUI, easier for rule customization;\r\n* GUI supports  now.\r\n\r\nFor other changes please refer to .\r\n\r\nQQ group:  \r\n\r\n\r\n\r\n## Compiling\r\n\r\nAny C++11 compiler should work. For compilers with partial C++11 support it may work. If your compiler has the C++11 features that are available in Visual Studio 2015 then it will work. If nullptr is not supported by your compiler then this can be emulated using the header lib/cxx11emu.h.\r\n\r\nThere are multiple compilation choices:\r\n* Windows: Visual Studio (Visual Studio 2015 and above)\r\n* Linux: g++ 4.6 (or later)\r\n* Mac: clang++\r\n\r\n### Visual Studio\r\n\r\nUse the tsancode.sln file. The file is configured for Visual Studio 2015, but the platform toolset can be changed easily to older or newer versions. The solution contains platform targets for both x86 and x64.\r\n\r\nSelect option  to build release version.\r\n\r\n### g++ or clang++\r\n\r\nSimple build (no dependencies):\r\n\r\n\r\n\r\n## Usage at a glance\r\n\r\nThis simple example contains a potential null pointer defect. Checking if p is null indicates that p might be null, so dereferencing p  is not safe outside the .\r\n\r\n~~~~~~~~~~cpp\r\n// func.cpp\r\nvoid func(int* p) {\r\n    if(p == NULL) {\r\n        printf(""p is null!"");\r\n    }\r\n\r\n    printf(""p is %d"", p);\r\n}\r\n~~~~~~~~~~\r\n\r\nRun TscanCode:\r\n ;\r\n* ;\r\n* ;\r\n\r\nFor now, codes under  are only for TscanCode  version,  and  version are in the internal review process. Sorry for the inconvenience.\r\n\r\n'","A static code analyzer for C++, C#, Lua"
2,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
2,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
2,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
2,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
2,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
2,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
2,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
2,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
2,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
2,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
2,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
2,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
2,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
2,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
2,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
2,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
2,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
2,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
2,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
2,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
2,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
2,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
2,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
2,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
2,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
2,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
2,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
2,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
2,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
2,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
2,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
2,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
2,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
2,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
2,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
2,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
2,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
2,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
2,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
2,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
2,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
2,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
2,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
2,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
2,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
2,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
2,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
2,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
2,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
2,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
2,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
2,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
2,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
2,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
2,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
2,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
2,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
2,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
2,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
2,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
2,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
2,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
2,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
2,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
2,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
2,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
2,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
2,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
2,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
2,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
2,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
2,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
2,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
2,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
2,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
2,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
2,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
2,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
2,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
2,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
2,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
2,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
2,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
2,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
2,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
2,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
2,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
2,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
2,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
2,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
2,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
3,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'# Spark2-H2O-R-Zeppelin\nA stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution\n\n# Spark2 Setup\n\n## Hadoop Version (tested with CDH5.8)\n$hadoop version\n  Hadoop 2.6.0-cdh5.11.0\n\n## Download Spark \nhttp://spark.apache.org/downloads.html\nDownload Spark: spark-2.2.0-bin-hadoop2.6.tgz\nwget http://apache.mirrors.ionfish.org/spark/spark-2.2.0/spark-2.2.0-bin-hadoop2.6.tgz\n\n## Extract Spark2 downloaded file\n- sudo mkdir /opt/spark\n- sudo chown -R cloudera:cloudera /opt/spark\n- cp /mnt/working/spark-2.2.0-bin-hadoop2.6.tgz /opt/spark\n- tar xvzf /opt/spark/spark-2.2.0-bin-hadoop2.6.tgz\n-  ln -s /opt/spark/spark-2.2.0-bin-hadoop2.6.tgz /opt/spark/current\n\n## Update conf/spark-env.sh\n- SPARK_HOME=/opt/spark/current\n- HADOOP_CONF_DIR=/etc/hive/conf\n\n## Update conf/spark-defaults.conf\n- spark.master                       yarn\n- spark.yarn.jars                    hdfs://localhost:8020/user/cloudera/spark-2.2.0-bin-hadoop2.6/\n\n## Create HDFS folder /user/cloudera (if not present)\n- sudo -u hdfs hdfs dfs -mkdir /user/cloudera\n- sudo -u hdfs hdfs dfs -chown -R cloudera /user/cloudera\n- hdfs dfs -mkdir spark-2.2.0-bin-hadoop2.6\n- hdfs dfs -copyFromLocal jars/  spark-2.2.0-bin-hadoop2.6\n\n## Test Spark2 Installation\n- $ ./bin/run-example SparkPi 10 --master yarn\n- $ ./bin/spark-shell --master yarn\n- $ ./bin/pyspark\nYarn cluster mode\n- $ ./bin/spark-submit --class org.apache.spark.examples.SparkPi     --master yarn     --deploy-mode cluster     --driver-memory 4g     --executor-memory 2g     --executor-cores 1     --queue thequeue     examples/jars/spark-examples*.jar     10\nYarn client mode\n- ./bin/spark-submit --class org.apache.spark.examples.SparkPi     --master yarn     --deploy-mode client     --driver-memory 4g     --executor-memory 2g     --executor-cores 1     --queue thequeue     examples/jars/spark-examples*.jar     10\n\n# H2O Sparkling-Water Setup\n\n## Download Sparkling-Water\nhttp://h2o-release.s3.amazonaws.com/sparkling-water/rel-2.0/0/sparkling-water-2.0.0.zip\n\n## Update sparkling-env.sh\n- SPARK_HOME=/opt/spark/current\n- MASTER=yarn\n\n## Copy Sparkling-Water Fat jar\n- cp /opt/sparkling-water/current/assembly/build/libs/sparkling-water-assembly_2.11-2.0.0-all.jar  /opt/spark/current/jars\n\n## Test Sparkling-Water Installation\n- /opt/spark/current/bin/spark-submit --master=yarn --class water.SparklingWaterDriver --conf ""spark.yarn.am.extraJavaOptions=-XX:MaxPermSize=384m -Dhdp.version=current""  --driver-memory=8G --num-executors=3 --executor-memory=3G --conf ""spark.executor.extraClassPath=-XX:MaxPermSize=384m -Dhdp.version=current""  /opt/spark/current/jars/sparkling-water-assembly_2.11-2.2.2-all.jar\n\n# Install R\n\n$ sudo yum install R\n$ sudo yum install libxml2-devel\n$ sudo yum install libcurl-devel\n\n- install.packages(knitr, repos=""http://cran.rstudio.com/"",dependencies = TRUE)\n- install.packages(data.table, repos=""http://cran.rstudio.com/"",dependencies = TRUE)\n- install.packages(curl, repos=""http://cran.rstudio.com/"",dependencies=TRUE)\n- install.packages(""httr"", repos=""http://cran.rstudio.com/"", dependencies=TRUE)\n- install.packages(""plotly"", repos=""http://cran.rstudio.com/"", dependencies=TRUE)\n- install.packages(""devtools"", repos=""http://cran.rstudio.com/"", dependencies=TRUE)\n- devtools::install_github(""ropensci/plotly"")\n- devtools::install_github(ramnathv/rCharts)\n\n# Apache Zeppelin\n\n## Download Zeppelin \nhttps://zeppelin.apache.org/download.html\nzeppelin-0.7.3-bin-all.tgz\nwget http://mirror.reverse.net/pub/apache/zeppelin/zeppelin-0.7.3/zeppelin-0.7.3-bin-all.tgz\n\n## Update /opt/zeppelin/current/conf/zeppelin-env.sh\n- export MASTER=yarn\n- export SPARK_HOME=/opt/spark/current\n- export SPARK_APP_NAME=zeppelin-cdh\n- export HADOOP_CONF_DIR=/etc/hive/conf\n- export SPARK_SUBMIT_OPTIONS=""--jars /opt/spark/current/jars/sparkling-water-assembly_2.11-2.2.2-all.jar""\n\n## Run Zeppelin with Spark2, Sparkling-water, and R\n- /opt/zeppelin/current/bin/zeppelin.sh -Pspark-2.2\n\n## Test Zeppelin Installation\nhttp://localhost:8080/#/\n\n- %spark\n- import org.apache.spark.sql.\n- val sqlContext = new SQLContext(sc)\n- import sqlContext.implicits.\n- import org.apache.spark.h2o.\n- val h2oContext = H2OContext.getOrCreate(sc) \n- import h2oContext. \n\n- val df: DataFrame = sc.parallelize(1 to 1000, 100).map(v => IntHolder(Some(v))).toDF\n- val hf = h2oContext.asH2OFrame(df)\n- val newRdd = h2oContext.asDataFrame(hf)(sqlContext)\n\n# Oracle Access\n\n## Use the ojdbc7.jar in the lib folder as it has the file defaultConnectionProperties.properties file updated with oracle.jdbc.timezoneAsRegion=false\n\n## Use the Postgres Interpreter\n- postgresql.driver.name\toracle.jdbc.driver.OracleDriver\n- postgresql.max.result\t1000\n- postgresql.password\t    [PASSWORD]\n- postgresql.url\t        jdbc:oracle:thin:@[HOST_IP]:[HOST_PORT]:[SID]\n- postgresql.user\t        [USERNAME]\n\nDependencies\n/opt/zeppelin/current/lib/ojdbc7.jar\n\n## Add Oracle jdbc driver to Spark Interpreter\n\nDependencies\n/opt/zeppelin/current/lib/ojdbc7.jar\n\n## Test Zeppelin to access Oracle using %psql\n- %psql\n- SELECT * FROM DUAL\n\n## Test Zeppelin to access Oracle using %spark\n- %spark\n- sc.version\n-- val pdf = sqlContext.load(""jdbc"", Map(""url"" -> ""jdbc:oracle:thin:[USERNAME]/[PASSWORD]@[HOST_IP]:[HOST_PORT]:[SID]"", ""driver"" -> ""oracle.jdbc.driver.OracleDriver"", ""dbtable"" -> ""dual"") )\n- pdf.printSchema()\n- pdf.registerTempTable(""pdf"")\n\n- %sql SELECT count() FROM pdf\n\n# Vertica\n\n# Use the vertica-jdbc-8.0.0-1.jar in the lib folder\n\n## Use JDBC Interpreter\n- default.driver\tcom.vertica.jdbc.Driver\n- default.password\t[PASSWD]\n- default.url\tjdbc:vertica://[HOST]:[HOST_PORT]/[DB]?user=[USERNAME]&password=[PASSWD]\n- default.user\t[USERNAME]\n\nDependencies\n/opt/zeppelin/current/lib/vertica-jdbc-8.0.0-1.jar\n\n## Test Zeppelin to access Vertica using %jdbc\n- %jdbc\n- SELECT count() FROM [SCHEMA].[TABLE]\n\n## Test Zeppelin to access Vertica using %spark\n- %spark\n- sc.version \n- val pdfv = sqlContext.load(""jdbc"", Map(""url"" -> ""jdbc:vertica://[HOST]:[PORT]/[DB]?user=[USERNAME]&password=[PASSWD]"", ""driver"" -> ""com.vertica.jdbc.Driver"", ""dbtable"" -> ""[SCHEMA].[TABLE]"", ""fetchsize"" -> ""100"") )\n- pdfv.printSchema()\n- pdfv.registerTempTable(""pdfv"")\n\n- %sql SELECT * FROM pdfv\n\n## Impala\n/opt/zeppelin/current/lib/ojdbc7.jar\t\n/tmp/toSratch/2.5.36.1056/ImpalaJDBC41.jar\t\n/opt/zeppelin/current/lib/vertica-jdbc-8.0.0-1.jar\t\n/tmp/toSratch/2.5.36.1056/commons-logging-1.1.1.jar\t\n/tmp/toSratch/2.5.36.1056/hive_metastore.jar\t\n/tmp/toSratch/2.5.36.1056/hive_service.jar\t\n/tmp/toSratch/2.5.36.1056/httpclient-4.1.3.jar\t\n/tmp/toSratch/2.5.36.1056/httpcore-4.1.3.jar\t\n/tmp/toSratch/2.5.36.1056/libfb303-0.9.0.jar\t\n/tmp/toSratch/2.5.36.1056/libthrift-0.9.0.jar\t\n/tmp/toSratch/2.5.36.1056/log4j-1.2.14.jar\t\n/tmp/toSratch/2.5.36.1056/ql.jar\t\n/tmp/toSratch/2.5.36.1056/slf4j-api-1.5.11.jar\t\n/tmp/toSratch/2.5.36.1056/slf4j-log4j12-1.5.11.jar\t\n/tmp/toSratch/2.5.36.1056/TCLIServiceClient.jar\t\n/tmp/toSratch/2.5.36.1056/zookeeper-3.4.6.jar\n\n# References\nhttps://www.linkedin.com/pulse/running-spark-2xx-cloudera-hadoop-distro-cdh-deenar-toraskar-cfa\nhttps://github.com/h2oai/sparkling-water/blob/master/DEVEL.md#SparklingWaterZeppelin\nhttp://www.cloudera.com/documentation/enterprise/5-8-x/topics/cdh_ig_running_spark_on_yarn.html\n- find IPAddress: docker inspect [container_id] | grep IPAddress\n- sudo iptables -t nat -A DOCKER -p tcp --dport 8080 -j DNAT --to-destination [container_ip]:8080\n- sudo iptables -t nat -A POSTROUTING -s [container_ip] -j MASQUERADE -p tcp --dport 8080 -d [container_ip]\nRedhat 6.5 if yum install R fails\n""wget http://mirror.centos.org/centos/6/os/x86_64/Packages/lapack-devel-3.2.1-4.el6.x86_64.rpm\nwget http://mirror.centos.org/centos/6/os/x86_64/Packages/blas-devel-3.2.1-4.el6.x86_64.rpm\nwget http://mirror.centos.org/centos/6/os/x86_64/Packages/texinfo-tex-4.13a-8.el6.x86_64.rpm\nwget http://vault.centos.org/6.2/updates/x86_64/Packages/libicu-devel-4.2.1-9.1.el6_2.x86_64.rpm\nsudo yum localinstall *.rpm\n\n\n'","A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution"
3,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
3,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
3,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
3,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
3,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
3,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
3,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
3,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
3,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
3,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
3,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
3,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
3,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
3,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
3,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
3,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
3,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
3,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
3,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
3,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
3,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
3,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
3,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
3,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
3,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
3,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
3,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
3,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
3,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
3,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
3,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
3,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
3,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
3,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
3,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
3,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
3,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
3,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
3,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
3,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
3,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
3,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
3,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
3,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
3,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
3,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
3,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
3,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
3,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
3,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
3,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
3,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
3,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
3,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
3,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
3,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
3,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
3,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
3,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
3,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
3,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
3,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
3,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
3,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
3,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
3,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
3,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
3,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
3,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
3,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
3,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
3,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
3,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
3,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
3,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
3,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
3,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
3,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
3,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
3,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
3,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
3,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
3,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
3,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
3,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
3,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
3,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
3,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
3,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
3,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
3,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
4,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'# audio-thumbnailing\nRepository for my scientific initiation project on audio thumbnailing. \n\n## Usage Requirements\n        * python 3\n        * jupyter-notebook\n        * numpy\n        * librosa\n\n## References\n* Cooper, Matthew L., and Jonathan Foote. ""Automatic Music Summarization via Similarity Analysis."" ISMIR. 2002.\n* M\xc3\xbcller, Meinard, Peter Grosche, and Nanzhu Jiang. ""A Segment-Based Fitness Measure for Capturing Repetitive Structures of Music Recordings."" ISMIR. 2011.\n* Bartsch, Mark A., and Gregory H. Wakefield. ""Audio thumbnailing of popular music using chroma-based representations."" IEEE Transactions on multimedia 7.1 (2005): 96-104.\n'",Repository for my scientific initiation project on audio thumbnailing.
4,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
4,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
4,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
4,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
4,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
4,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
4,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
4,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
4,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
4,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
4,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
4,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
4,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
4,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
4,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
4,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
4,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
4,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
4,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
4,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
4,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
4,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
4,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
4,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
4,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
4,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
4,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
4,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
4,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
4,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
4,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
4,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
4,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
4,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
4,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
4,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
4,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
4,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
4,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
4,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
4,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
4,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
4,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
4,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
4,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
4,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
4,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
4,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
4,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
4,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
4,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
4,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
4,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
4,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
4,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
4,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
4,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
4,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
4,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
4,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
4,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
4,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
4,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
4,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
4,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
4,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
4,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
4,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
4,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
4,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
4,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
4,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
4,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
4,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
4,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
4,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
4,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
4,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
4,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
4,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
4,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
4,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
4,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
4,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
4,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
4,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
4,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
4,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
4,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
4,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
4,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
5,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'# Awesome Data Science with Python\n\n> A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.  \n\n#### Core\n - Data structures built on top of .  \n - Core ML library, .  \n - Plotting library.  \n - Data visualization library based on matplotlib.  \n - Descriptive statistics using .  \n - Helpful  class.  \n - Missing data visualization.  \n - VSCode plugin to display .csv files with nice colors.  \n\n#### General Python Programming\n  \n - Manage multiple Python versions on your system.  \n - Dependency management.  \n - Python project template generator.  \n - Configuration management.  \n - Python project management.  \n - Extension of itertools.  \n - Progress bars for for-loops. Also supports .  \n - Python logging.  \n\n\n#### Pandas Tricks, Alternatives and Additions\n - Large collection of pandas tricks.  \n - Multi-threaded alternative to pandas.  \n - Extends pandas to n-dimensional arrays.  \n - Write custom accessors like  and .   \n - Efficiently run SQL queries on pandas DataFrame.  \n\n#### Pandas Parallelization\n - Parallelization library for faster pandas .  \n - Out-of-Core DataFrames.  \n - Parallelize pandas operations.  \n - Apply any function to a pandas DataFrame faster.   \n\n#### Environment and Jupyter\n  \n - IPython kernel for Jupyter with additional features.  \n - Open Jupyter Notebooks with doubleclick.  \n - Parameterize and execute Jupyter notebooks, .  \n - Diff two notebook files, Alternative GitHub App: .  \n - Turn Jupyter notebooks into presentations.  \n - Pandas  sorting.  \n - DataFrame visualization within Jupyter.  \n - GUI for viewing, plotting and analyzing Pandas DataFrames.  \n - View and analyze Pandas data structures, integrating with Jupyter.  \n - Interactive tables in Jupyter.  \n - More convenient way of writing mathematical equations in Jupyter.  \n - Productionize and schedule Jupyter Notebooks.  \n - Intuitive GUI for tables.  \n - Turn Jupyter notebooks into standalone web applications.  \n - Voila grid layout.  \n\n#### Extraction\n - Extract text from any document.  \n\n#### Big Data\n -  for big data, , .  \n,  - Pandas  for big data and machine learning library, , , , , .  \n - Helpful  class for out-of-memory dataframes.  \n - Data Table for big data support.  \n - GPU DataFrame Library, .  \n - NumPy-like API accelerated with CUDA.  \n - Flexible, high-performance distributed execution framework.  \n - Fast NumPy array functions written in C.   \n - Data access library for parquet files by Uber.  \n - Distributed NumPy arrays.  \n - Feature engineering and preprocessing library for tabular data by Nvidia.  \n - Reading and writing large multi-dimensional arrays (Google).  \n\n#### Command line tools, CSV\n - Command line tool for CSV files.  \n - Sort large csv files.  \n\n#### Classical Statistics\n\n##### Correlation\n - Correlation between categorical, ordinal and interval variables.  \n\n##### Packages\n - Statistical tests.  \n - Instrumental variable and panel data models.  \n - Statistical tests.    \n - Statistical tests.  \n - Statistical post-hoc tests for pairwise multiple comparisons.   \nBland-Altman Plot ,  - Plot for agreement between two methods of measurement.  \n  \n\n##### Statistical Tests\n - Proportion test.  \n - Alternative to chi-square test, .  \n\n##### Comparing Two Populations\n - Friedman-Rafsky Test: Compare two population based on a multivariate generalization of the Runstest. ,   \n\n##### Interim Analyses / Sequential Analysis / Stopping\n - Wikipedia.  \n - Exact Sequential Analysis for Poisson and Binomial Data (R package).  \n - Uniform boundaries, confidence sequences, and always-valid p-values.  \n\n##### Visualizations\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n##### Talks\n  \n  \n\n##### Texts\n   \n   \n  \n  \n  \n  \n  \n    \n  \n   \n  \n  \n  \n,   \n  \n  \n  \n\n#### Epidemiology\n - Large tool suite for working with epidemiological data (R packages).    \n - Computation, handling, visualisation and simple modelling of incidence (R package).  \n - Estimate time varying instantaneous reproduction number R during epidemics (R package) .  \n - Helpful  function for summary statistics (Table 1).  \n - Epidemiology analysis package, .  \n - Sensitivity analyses for unmeasured confounders (R package).  \n - Anscombe\xe2\x80\x99s Quartet, Causal Quartet,  and others (R package).    \n\n#### Exploration and Cleaning\n.  \n - Clean messy column names.  \n - Data / Schema validation.  \n - Imputations.  \n - Matrix completion and imputation algorithms.  \n - Resampling for imbalanced datasets.  \n - Time series preprocessing: Denoising, Compression, Resampling.  \n - Utility functions ()  \n\n#### Noisy Labels\n - Machine learning with noisy labels, finding mislabelled data, and uncertainty quantification. Also see awesome list below.  \n - Find bad or noisy labels.\n\n#### Train / Test Split\n - Stratification of multilabel data.  \n\n#### Feature Engineering\n - Using df.pipe()  \n  \n - Pipeline, .  \n - Pipelines for DataFrames.  \n - Custom transformers for pipelines.  \n - Categorical encoding of variables, .  \n - Encoding dirty categorical variables.  \n - R-like syntax for statistical models.  \n - LDA.  \n - Automated feature engineering, .  \n - Time series feature engineering.  \n - Time series feature engineering by Google.  \n - Concurrent data pipelines.  \n - Encoders, transformers, etc.  \n\n#### Computer Vision\n  \n\n#### Feature Selection\n, ,     \nBlog post series - , , ,   \nTutorials - ,   \n - Feature selection.  \n - Feature selection using permutation importance.  \n - Feature selection algorithms.  \n - Stability selection.  \n - Relief-based feature selection algorithms.  \n - Genetic feature selection.  \n - Feature selection, , .  \n - Boruta feature selection algorithm + shapley values.  \n - Feature selection package.  \n - Exhaustive feature selection.     \n - Xgboost feature selection algorithm.  \n - Instance-wise Variable Selection using Neural Networks.  \n - Subsetting Features of Tabular Data for Self-Supervised Representation Learning, AstraZeneca.  \n - Maximum Relevance and Minimum Redundancy Feature Selection, .  \n - All Relevant Feature Selection.  \n - Variable Selection Using Random Forests (R package) .  \n - Feature Selection using Genetic Algorithm.  \n\n#### Subset Selection\n - Selecting subsets of data sets to train machine learning models quickly.  \n - Index data for fast lookup by any combination of fields.  \n\n#### Dimensionality Reduction / Representation Learning\n\n##### Selection\nCheck also the Clustering section and self-supervised learning section for ideas!  \n  \n  \nPCA -     \nAutoencoder -   \nIsomaps -     \nLLE -   \nForce-directed graph drawing -     \nMDS -   \nDiffusion Maps -   \nt-SNE -     \nNeRV - ,   \nMDR -   \nUMAP -   \nRandom Projection -   \nIvis -    \nSimCLR -   \n\n##### Neural-network based\n - Vision Transformers for Representation Learning (Microsoft).  \n - Semi-supervised dimensionality reduction of Multi-Class, Multi-Label data (sequencing data) .  \n\n##### Packages\n.  \n, . \n and  - PCA, t-SNE, MDS, Isomaps and others.  \nAdditional plots for PCA - Factor Loadings, Cumulative Variance Explained, ,   \n - Johnson-Lindenstrauss lemma, Gaussian random projection, Sparse random projection.  \n - Partial least squares, supervised estimators for dimensionality reduction and regression.  \n - Dimensionality reduction, factor analysis (PCA, MCA, CA, FAMD).  \nFaster t-SNE implementations: , , \n - Uniform Manifold Approximation and Projection, , , , .  \n - Hierarchical UMAP.  \n - Explore embeddings, interactive visualization (R package).  \n - Self-organizing map.  \n - Topological Data Analysis, , , , .  \n - Topological Data Analysis.  \n - Dimensionality reduction using Siamese Networks.  \n - Dimensionality reduction using triplets.  \n - , .  \n - Projection pursuit, Sufficient dimension reduction, Robust M-estimators.  \n - DatabionicSwarm (R package).  \n - Contrastive PCA.  \n - Sparse contrastive PCA (R package).  \n - Visualization library for large, high-dimensional data sets.  \n - Linear Optimal Low Rank Projection.  \n - Linear Sufficient Dimension Reduction (R package).  \n - Tool for visualizing high dimensional data.  \n\n#### Visualization\n, .  \n.  \n(Plotly,Seaborn, Holoviz, Altair)  \n - Dynamic visualization library, wrapper for , , .  \n - Better histograms, , .  \n - Fast histograms.  \n - Venn diagrams, .  \n - Draw stacked density plots (=ridge plots), .  \n - Categorical variable visualization, .  \n - ROC curves and other visualizations for ML models.  \n - Visualizations for ML models (similar to scikit-plot).  \n - Interactive visualization library, , .  \n - Plotting library.  \n - Animate plots build on matplotlib.  \n - ggplot for Python.  \n - Declarative statistical visualization library.  \n - Plotting library for IPython/Jupyter Notebooks.  \n - High-level plotting library built on top of .  \n - Decision tree visualization and model interpretation.  \n - Generate charts.  \n - Graph visualization (JS package).  \n - Navigatable 3D graph visualization (JS package).  \n - Triangle plots.  \n - Interactive visualizations for big data.  \n - High dimensional Interactive Plotting.  \n - Live Visualizations.  \n - Scatter density plots. Alternative to 2d-histograms.   \n - Complex heatmaps for multidimensional genomic data (R package).  \n - Visualize embeddings (t-SNE etc.) (R package).  \n - Matplotlib wrapper.  \n - Broad Institute tool matrix visualization and analysis software. , Tutorial: , , .  \n - Interactive 2D scatter plot widget for Jupyter.  \n\n#### Colors\n - Color palettes from .  \n - Collection of perceptually uniform colormaps.  \n - Color wheel for all named HTML colors.  \n\n#### Dashboards\n - Shiny for Python, .  \n - Dashboarding solution by Apache.  \n - Dashboarding solution. ,  , .  \n - Convert Python notebook to web app, .  \n - Dashboarding solution by plot.ly. .  \n - Dashboarding library by Facebook.  \n - Dashboarding solution.  \n - .  \n - Turn Jupyter notebooks into standalone web applications.  \n - Voila grid layout.  \n\n#### UI\n - Create UIs for your machine learning model.  \n\n#### Survey Tools\n - Sampling techniques for complex survey designs.  \n\n#### Geographical Tools\n - Plot geographical maps using the Leaflet.js library, .  \n - Google Maps for Jupyter notebooks.  \n - Plot geographical maps.  \n - Draw millions of points on a map.  \n - BallTree.  \n - Nearest neighbor descent for approximate nearest neighbors.  \n - Geocoding of addresses, IP addresses.  \nConversion of different geo formats: ,   \n - Tools for geographic data  \nLow Level Geospatial Tools (GEOS, GDAL/OGR, PROJ.4)  \nVector Data (Shapely, Fiona, Pyproj)  \nRaster Data (Rasterio)  \nPlotting (Descartes, Catropy)  \n.   \n - Python Spatial Analysis Library.  \n - Extract countries, regions and cities from a URL or text.  \n - Distorted maps based on population.  \n\n#### Recommender Systems\nExamples: , , , .  \n - Recommender, .  \n - Fast Collaborative Filtering for Implicit Feedback Datasets.  \n - Deep recommender models using PyTorch.  \n - Recommendation algorithms for both implicit and explicit feedback.  \n - Fast SVD.  \n\n#### Decision Tree Models\n, Intro to Gradient Boosting , ,     \n - Gradient boosting (GBDT, GBRT, GBM or MART) framework based on decision tree algorithms, .  \n - Gradient boosting (GBDT, GBRT or GBM) library, , Methods for CIs: , .  \n - Gradient boosting.  \n -  Gradient boosting and general machine learning framework.  \n - Wrapper for xgboost, lightgbm, catboost etc.  \n - Confidence intervals for random forests.  \n - Generalized random forest.  \n - Decision tree visualization and model interpretation.  \n - Decision tree visualization.  \n - Feature Importance for RandomForests using Permuation Importance.  \nWhy the default feature importance for random forests is wrong:   \n - Bayesian Additive Regression Trees.  \n - Mixed Effects Random Forest for Clustering,   \n - Robust decision trees.  \n - Trees with linear models at the leaves.  \n\n#### Natural Language Processing (NLP) / Text Processing\n-, , .  \n, .  \n - NLP, doc2vec, word2vec, text processing, topic modelling (LSA, LDA), ,  for evaluation.  \nEmbeddings -  ([], []), , , .  \n - Vector embedding utility package.  \n - Visualization for topic modelling.  \n - NLP.  \n - NLP, helpful  with .  \n - NLP from Facebook.  \n - Efficient text classification and representation learning.  \n - Approximate nearest neighbor search.  \n - Approximate nearest neighbor search.  \n - Approximate nearest neighbor search.  \n - Cluster (word-)vectors to find topics.  \n - Probabilistic data structures for large data (MinHash, HyperLogLog).  \n - NLP Framework by Zalando.  \n - NLP Library.  \n - Turn Messenger, Hangouts, WhatsApp and Telegram chat logs into DataFrames.  \n - Collection for comparing distances between two or more sequences.  \n\n#### Bio Image Analysis\n  \n\n##### Tutorials\n - A biologists guide to planning and performing quantitative bioimaging experiments.  \n - Large collection of image processing workflows, including  and , ,  using  and others.  \n - Notebooks and associated  for a variety of image processing tasks.  \n\n##### Datasets\n - Cellpainting dataset.  \n - Datasets for 2D and 3D Biomedical Image Classification.  \n - Huge diverse dataset like ImageNet but for cell images.  \n - Gene Expression and Morphology Profiles.  \n - Cellpainting vs. L1000 assay.  \n\n#### Biostatistics / Robust statistics\n - Robust estimator of covariance, RMPV, , , .  \n - Weighted average of z-scores based on Spearman correlation.  \n - Simple adjustment of outliers.  \n\n#### High-Content Screening Assay Design\n  \n\n - Measure of statistical effect size.  \n - Measure of statistical effect size.  \n - Coefficient of variation.  \n - Strictly standardized mean difference.  \n - Assay quality measurement.  \n\n#### Microscopy + Assay\n - Calculate spectral overlap, bleed through for fluorescence microscopy dyes.  \n - Visualize the spectral compatibility of fluorophores (PerkinElmer).  \n - Thermofisher Spectrum Viewer.  \n - Calculate resolution of images (Nikon).  \n - Drug Layout for plates, , , .  \n\n##### Image Formats and Converters\nOME-Zarr - ,   \n - Various formats to zarr.  \n - Zarr to tiff.  \n - Wrapper for bioformats2raw to parallelize conversions with nextflow, .  \nREMBI model - Recommended Metadata for Biological Images, BioImage Archive: , , , ,   \n\n##### Matrix Formats\n - annotated data matrices in memory and on disk, .  \n - Multimodal omics framework.  \n - Multimodal Data (.h5mu) implementation.  \n - Zarr-based format for storing quantitative biological dynamics data.  \n\n#### Image Viewers\n - Image viewer and image processing tool.    \n - General purpose tool. Image viewer and image processing tool.  \n - Browser-based image viewer for zarr format.  \n - Browser-based image viewer for tiff files.  \n - Image viewer for high-content screening.  uses OMERO.    \n - Viewer and tool for building high-quality datasets and computer vision models.  \nImage Data Explorer - Microscopy Image Viewer, , .  \n - Microscopy Image Viewer, , .  \n - Web-based image annotation and classification tool, .  \n - Data labeling tool to segment images, .  \n\n#### Napari Plugins\n - Segment Anything Plugin.  \n - ChatGPT Plugin.  \n\n##### Image Restoration and Denoising\n - Image denoising.  \n - Unsupervised denoising method.  \n - Content-aware image restoration, .  \n\n##### Illumination correction\n - Illumination correction (CLAHE).  \n - Illumination correction method for optical microscopy.  \n - Background and Shading Correction of Optical Microscopy Images, .  \n\n##### Bleedthrough correction / Spectral Unmixing\n - Blind unmixing without reference spectra measurement,   \n - Flow cytometry. Includes Bleedthrough correction methods.  \nLinear unmixing in Fiji for Bleedthrough Correction - .  \nBleedthrough Correction using Lumos and Fiji - .  \nAutoUnmix - .  \n\n##### Platforms and Pipelines\n,  - Create image analysis pipelines.  \n - Framework to process high-content imaging data from UZH, .  \n - Deep and Machine Learning for Microscopy.  \n - Tools for 3D microscopy analysis,  and lots of other tutorials, interacts with napari.  \n - Image analysis.  \n\n##### Microscopy Pipelines\nLabsyspharm Stack see below.  \n - Bioimage analysis pipelines.  \n - Image processing pipeline on top of Dask.  \n - Image analysis platform.  \n - Image analysis pipeline using , , , .  \n\n##### Labsyspharm\n - Multiple-choice microscopy pipeline, , .  \n - Quantification of cell features.  \n - Quality assurance for microscopy images, .  \n - Whole-slide microscopy image stitching and registration.  \n - Spatial Single-Cell Analysis Toolkit.  \n\n##### Cell Segmentation\n - Review of cell segmentation algorithms, .  \nReview of organoid pipelines - .  \n - BioImage Model Zoo.  \n - Cell segmentation.  \n - Cell segmentation. , .  \n - Cell segmentation with Star-convex Shapes.  \n - Identifying Cells and Segmenting Tissue.  \n - Segment, classify, track and count cells. .   \n - 3D biomedical image segmentation.  \n - Tools for 3D segmentation, classical and deep learning methods.  \n - Python GUI for cell segmentation and tracking.  \n - Deep-Learning in Microscopy.  \n - Bringing the ZeroCostDL4Mic experience using Docker.  \n - Embedding-based Instance Segmentation.  \n - Segment Anything (SAM) from Facebook.  \n - Segment Anything for Microscopy.  \n - Segment Everything Everywhere All at Once from Microsoft.  \n - Cell segmentation, .  \n - Fiji plugin for image segmentation.  \n\n##### Cell Segmentation Datasets\n - Cell images.  \n - Cell images.  \n - Cell images.  \n - Neurons.  \n - 2D + 3D images.  \n - Annotation of the EPFL Hippocampus dataset.  \n - Stardist example training and test dataset.  \n\n##### Evaluation\n - Cell segmentation performance evaluation without Ground Truth labels, .  \n\n##### Feature Engineering Images\n  \n - Biological image analysis.   \n - Image processing.  \n - Regionprops: area, eccentricity, extent.  \n - Zernike, Haralick, LBP, and TAS features, .   \n - Radiomics features from medical imaging.  \n - Elliptical feature descriptor, approximating a contour with a Fourier series.  \n - Faster image processing operations.  \n\n#### Domain Adaptation / Batch-Effect Correction \n, .  \n.  \n - Fuzzy k-means and locally linear adjustments.  \n - Batch-effect correction, .  \n - Nonnegative matrix factorization.  \n - Batch removal. .  \n - Correcting for Batch Effects Using Wasserstein Distance, , .   \n - Awesome Domain Adaptation Python Toolbox.  \n - Various neural network models for domain adaptation.  \n\n##### Sequencing\n.  \n - Analyzing RNA-seq data.  \n - Interactive explorer for single-cell transcriptomics data.  \n - Analyze single-cell gene expression data, .  \n - Beyond single-cell analysis.  \n - Deep Learning for Genomics.  \n - Drug responses in the context of the Genomics of Drug Sensitivity in Cancer project, ANOVA, IC50, MoBEM, .  \n - Analysis of single-cell spatial transcriptomics data.  \n\n##### Drug discovery\n - Drug Discovery and Development.  \n - Deep Learning Based Molecular Modelling and Prediction Toolkit.  \n\n#### Neural Networks\n - Stanford CS class.  \n - Computational Systems Biology: Deep Learning in the Life Sciences.  \n - Calculate output dimensions of Conv2D layer.  \n.  \n.  \n\n##### Tutorials & Viewer\n - Practical Deep Learning for Coders.  \n - Neural Network course by Google.  \nFeature Visualization: ,   \n  \n,     \n - Image Viewer.  \n\n##### Image Related\n - More sophisticated image preprocessing.  \n - Image augmentation library.  \n - Preprocess images.  \n - Wrapper around imgaug and other libraries.  \n - Image augmentation from Google.  \n - Image augmentation, feature extraction and loss functions.  \n - Image, audio, text, video augmentation from Facebook.  \n - Faster image processing operations.  \n\n##### Lossfunction Related\n - List of loss functions for medical image segmentation.  \n\n##### Activation Functions\n - Rational activation functions.  \n\n##### Text Related\n - Utilities for pre-processing text for deep learning in Keras.   \n - Ready-to-use LSTM for text generation.  \n - Text generation.  \n\n##### Neural network and deep learning frameworks\n - Framework for segmentation, classification and lots of other computer vision tasks.  \n - Deep learning framework, .  \n - Deep learning framework, .  \n\n##### Libs General\n - Neural Networks on top of , .  \n - Keras community contributions.  \n - Hyperparameter tuning for Keras.  \n - Keras + Hyperopt: Convenient hyperparameter optimization wrapper.  \n - Distributed Deep learning with Keras & Spark.  \n - Neural Networks on top of TensorFlow.  \n - Neural Networks on top of TensorFlow, .  \n - TensorFlow for applied reinforcement learning.  \n - AutoML for deep learning.  \n - Plot neural networks.  \n - Neural network interpretability, .  \n - Interpretability method.  \n - Optimizer that trains as fast as Adam and as good as SGD, .  \n - Adversarial examples that fool neural networks.  \n - Training metrics.  \n - Pretrained models.  \n - Visualizer for deep learning and machine learning models.  \n - Fast dataloader.  \n\n##### Libs PyTorch\n    \n - Scikit-learn compatible neural network library that wraps PyTorch, , .  \n - Neural Networks in PyTorch.  \n - PyTorch image models.  \n - Highlevel library for PyTorch.  \n - Deep Learning in Computer Vision.  \n - Collection of optimizers for PyTorch.  \n - Wrapper around PyTorch.  \n - MoCo, SimCLR, SimSiam, Barlow Twins, BYOL, NNCLR.  \n - Deep learning in healthcare imaging.  \n - Image transformations, epipolar geometry, depth estimation.  \n - Nice model summary.  \n - Inspect tensors, mean, std, inf values.  \n\n##### Distributed Libs\n - Distributed TensorFlow Keras and PyTorch.  \n - Distributed training framework for TensorFlow, Keras, PyTorch, and Apache MXNet.  \n\n##### Architecture Visualization\n.  \n - Viewer for neural networks.  \n - Visualize Keras networks.  \n\n##### Object detection / Instance Segmentation\n - Guide for choosing correct image analysis metrics, ,   \n  \n - Fully convolutional model for real-time instance segmentation.  \n,  - Scalable and Efficient Object Detection.  \n - Object Detection (Mask R-CNN) by Facebook.  \n - Object Detection and Instance Recognition.  \n - Object detection.  \n - Fully Convolutional One-Stage Object Detection.  \n - Real-time 2D object tracking.  \n -  Detector with image classes that can use image-level labels (facebookresearch).  \n - Image segmentation, classification, metric-learning, object detection, pose estimation.  \n\n##### Image Classification\n - Neural network.   \n - Neural network.   \n - PyTorch image classification networks: ResNet, ResNeXt, EfficientNet, and RegNet (by Facebook).  \n\n##### Applications and Snippets\n - Semantic Image Synthesis.  \n, ,   \n - Super-scaling using a Residual Dense Network.  \nCell Segmentation - , Blog Posts: ,   \n - Deep learning models.  \n\n##### Variational Autoencoders (VAEs)\n  \n - BetaVAE, FactorVAE, BetaTCVAE, DIP-VAE.  \n - Ladder Variational Autoencoders (LVAE).  \n - Unifying Generative Autoencoder implementations.  \n\n##### Generative Adversarial Networks (GANs)\n  \n - List of Generative Adversarial Networks.  \n - Various image-to-image tasks.  \n  \n  \n  \n - PyTorch GAN implementations.  \n\n##### Transformers\n - Simple and Efficient Design for Semantic Segmentation with Transformers.  \n - Efficient self-supervised Vision Transformers.  \n - More efficient transformer because of approximate self-attention.  \n\n##### Deep learning on structured data\n  \n\n##### Graph-Based Neural Networks\n  \n  \n  \n - Open Graph Benchmark, Benchmark datasets.  \n - Graph library.  \n - RAPIDS, Graph library on the GPU.  \n - Various methods for deep learning on graphs.  \n - Deep Graph Library.  \n - Build graph networks in TensorFlow, by DeepMind.  \n\n#### Model conversion\n - Compile trained ML models into tensor computations (by Microsoft).  \n\n#### GPU\n - RAPIDS, Run traditional tabular ML tasks on GPUs, .  \n - GBDTs and Random Forest.  \n - Support Vector Machines.  \nLegate Numpy - Distributed Numpy array multiple using GPUs by Nvidia (not released yet) .  \n\n#### Regression\nUnderstanding SVM Regression: , ,   \n\n - Multivariate Adaptive Regression Splines (MARS), .  \n - Generalized Additive Models (GAMs), .  \n - Generalized Low Rank Models.  \n - Specialized distribution for zero inflated targets, .  \n - Estimating prediction intervals.  \n - Regression and Spline models.  \n\n#### Polynomials\n - Orthogonal polynomials in all shapes and sizes.  \n\n#### Classification\n,   \n  \n  \n - Dynamic classifier and ensemble selection.  \n - Create and tune classifier based on your rule set.  \n\n#### Metric Learning\n  \n  \n - Supervised and weakly-supervised metric learning algorithms.  \n - PyTorch metric learning.  \n - Methods for deep metric learning.  \n - Metric learning using siamese neural networks.  \n - Metric learning.  \n\n#### Distance Functions\n - All kinds of distance metrics.  \n - Earth Movers Distance / Wasserstein distance, similarity between histograms. ,    \n  - Distance correlation and related Energy statistics.  \n - Kernel norms, Hausdorff divergences, Debiased Sinkhorn divergences (=approximation of Wasserstein distance).  \n\n#### Self-supervised Learning\n - MoCo, SimCLR, SimSiam, Barlow Twins, BYOL, NNCLR.  \n - Self-Supervised Learning with PyTorch: RotNet, Jigsaw, NPID, ClusterFit, PIRL, SimCLR, MoCo, DeepCluster, SwAV.  \n\n#### Clustering\n.  \n.  \n - Dendrogram, Tanglegram  \n - Clustering algorithm, , .  \n - All sorts of clustering algorithms.  \n -  Fundamental Clustering Problems Suite (R package).  \n - Generalized k-means clustering using a mixture of Gaussian distributions, .  \n - Similarity search library and toolkit for evaluation of k-NN methods.  \n - Mixed Effects Random Forest for Clustering,   \n - Hierarchical clustering algorithm based on t-SNE.  \n - Pure Python implementation of the Self Organizing Maps.  \n, , , .  \n - Clustering by community detection.  \n - Clustering of single cell data (RNA). Improvement of phenograph, .  \n - Hyperbolic Hierarchical Clustering.  \n - Improved k-Medoids Clustering.  \n - Comparing dendrograms (R package).  \n - Deep Clustering With An Unknown Number of Clusters.  \n\n##### Clustering Evalutation\n\n* \n* \n* \n* \n* \n* , \n* \n*  - The similarity of two sets of biclusters.\n\n   \n - Various methods for clustering and cluster validation (R package).  \n* Minimum distance between any two clusters\n* Distance between centroids\n* p-separation index: Like minimum distance. Look at the average distance to nearest point in different cluster for p=10% ""border"" points in any cluster. Measuring density, measuring mountains vs valleys\n* Estimate density by weighted count of close points \n\nOther measures:\n* Within-cluster average distance\n* Mean of within-cluster average distance over nearest-cluster average distance (silhouette score)\n* Within-cluster similarity measure to normal/uniform\n* Within-cluster (squared) distance to centroid (this is the k-Means loss function)\n* Correlation coefficient between distance we originally had to the distance the are induced by the clustering (Huberts Gamma)\n* Entropy of cluster sizes\n* Average largest within-cluster gap\n* Variation of clusterings on bootstrapped data\n\n#### Multi-label classification\n - Multi-label classification, .  \n\n#### Signal Processing and Filtering\n, , .  \n.  \n - Chapter 3 has good introduction to Bessel, Butterworth and Chebyshev filters.  \n.  \n - Focuses on intuition using Jupyter Notebooks. Includes Bayesian and various Kalman filters.  \n for FIR and IIR filters, .  \n - Kalman filtering and optimal estimation library.  \n\n#### Filtering in Python\n\n* \n* ,   \n - Choose appropriate .  \n\n#### Geometry\n - Computations and statistics on manifolds with geometric structures.  \n\n#### Time Series\n - Time series analysis,  , , .  \n - Time series prediction library by Facebook.  \n - Time series prediction library by Facebook.  \n - Time series prediction built on PyTorch.  \n,  - Wrapper for (Auto-) ARIMA.  \n - Time series forecasting framework (R package).  \n - Time series prediction algorithms (ARIMA, GARCH, GAS, Bayesian).  \n - Automated Time Series Models.  \n - Time series prediction and decomposition library.  \n - Hierarchical Time Series Forecasting using Prophet.  \n - Hierarchical Temporal Memory (HTM) for Time Series Prediction and Anomaly Detection.  \n - LSTM and others, examples: , , seq2seq: , , ,   \n - Preprocessing: Denoising, Compression, Resampling.  \n - Time series feature engineering.  \n - Time series feature extraction.  \n - Data structures and algorithms for loading, processing, and analyzing time series data.  \n - General tools for Astronomical Time Series, .  \n - shapelets, .  \n - Time series clustering and classification, , .  \n - Analysis of Groundwater Time Series.  \n - Dynamic Time Warp Distance.  \n - Time Series Forecasting (R package).  \n - Bayesian time series modelling (, )  \n - Automatic Time Series Forecasting.  \n - Anomaly Detection and Correlation library from Linkedin.  \n - Detecting patterns and anomalies, , , .  \n - Another matrix profile library.  \n - Seismology package. Useful  function.  \n - Robust Seasonal-Trend Decomposition.  \n - Time Series library.  \n - Time series transformation and classification, .  \nTurn time series into images and use Neural Nets: , .  \n,  - Toolbox for (deep) learning with time series.   \n - Time Series Anomaly Detection.  \n - Time Series classification using random convolutional kernels.  \n - Anomaly Detection for time series.  \n - Time Series library.  \n - ML powered analytics engine for outlier/anomaly detection and root cause analysis.  \n\n##### Time Series Evaluation\n - Sklearn time series split.  \n - Evaluation with gap.  \n\n#### Financial Data and Trading\nTutorial on using cvxpy: ,   \n - Read stock data.  \n - Read stock data from Yahoo Finance.  \n - Read stock data from various sources.  \n - Technical analysis library.  \n - Backtesting for trading strategies.  \n - Find high moving stocks before they move using anomaly detection and machine learning.  \n - Financial functions.  \n - Backtesting algorithms.  \n - Commission-free trading through API.  \n - Eigen portfolios, minimum variance portfolios and other algorithmic investing strategies.  \n - Quantitative finance tools in TensorFlow, by Google.  \n - Portfolio management.  \n - Portfolio optimization and strategic asset allocation.  \n - Terminal.  \n - Financial markets data visualization.  \n\n##### Quantopian Stack\n - Portfolio and risk analytics.  \n - Algorithmic trading.  \n - Performance analysis of predictive stock factors.  \n - Financial risk metrics.  \n - Calendars for various securities exchanges.  \n\n#### Survival Analysis\n.  \n - Survival analysis, Cox PH Regression, , .  \n - Survival analysis.  \n -    \n - Survival analysis, .  \n - Analyze time lagged conversions.  \nRandomSurvivalForests (R packages: randomForestSRC, ggRandomForests).  \n - Survival analysis.  \n - Fully Parametric Survival Regression.  \n - Regression, Counterfactual Estimation, Evaluation and Phenotyping with Censored Time-to-Events.  \n\n#### Outlier Detection & Anomaly Detection\n - Isolation Forest and others.  \n - Outlier Detection / Anomaly Detection.  \n - Extended Isolation Forest.  \n - Anomaly detection (R package).  \n - Anomaly Detection and Correlation library from Linkedin.  \nDistances for comparing histograms and detecting outliers - : , , , .  \n - Anomaly detection library based on singular spectrum transformation.  \n - Detect anomalies in multivariate time series data using LSTMs.  \n - Anomaly Detection for time series.  \n - Robust Random Cut Forest algorithm for anomaly detection on streams.  \n\n#### Concept Drift & Domain Shift\n - Drift Detection for PyTorch Models.  \n - Algorithms for outlier, adversarial and drift detection.  \n - Evaluate and monitor ML models from validation to production.  \n.  \n.  \n\n#### Ranking\n - Large-scale linear classification, regression and ranking.  \n\n#### Causal Inference\n  \n - Video Lecture Series, Bayesian Statistics, Causal Models, , , , , .  \n  \n - Estimate causal effects.  \n - Causal Impact Analysis ().  \n - Modular causal inference analysis and model evaluations by IBM, .  \n - Causal inference by Uber.  \n - Causal inference by Booking.com.  \n - Causal analysis using observational datasets.  \n - Machine Learning + Causal inference, , , .  \n - Heterogeneous Treatment Effects Estimation by Microsoft.  \n\n\n##### Papers\n  \n  \n\n#### Probabilistic Modelling and Bayes\n,   \n - Bayesian modelling.  \n - Probabilistic programming with numpy, built on .  \n - Probabilistic modelling, .  \n - Probabilistic machine learning.  \n - Exploratory analysis of Bayesian models.  \n - Bayesian deep learning, generative models.  \n - Probabilistic modelling, inference, and criticism, , .  \n - Deep Universal Probabilistic Programming.  \n - Deep learning and probabilistic modelling, , , , .  \n - High-level Bayesian model-building interface on top of PyMC3.  \n - Infinite Neural Networks.  \n - Bayesian networks, parameter learning, inference and sampling methods.  \n\n#### Gaussian Processes\n,   \n - Gaussian process optimization.   \n - Gaussian processes (TensorFlow).  \n - Gaussian processes (PyTorch).  \n\n#### Stacking Models and Ensembles\n  \n - , ,  for model stacking.  \n - Stacking ML models.  \n - Stacking ML models.  \n - Ensemble learning.  \n - Combining ML models (stacking, ensembling).  \n\n#### Model Evaluation\n - Evaluate machine learning models (huggingface).  \n - Multi-class confusion matrix.  \n - Confusion matrix.  \nPlotting learning curve: .  \n - Learning curve.  \n - Receiver Operating Characteristic (ROC) curves.  \n\n#### Model Uncertainty\n - Uncertainty quantification.  \n - Predictive uncertainty quantification, calibration, metrics, and visualization.  \n\n#### Model Explanation, Interpretability, Feature Importance\n   \n,   \nscikit-learn -  (can be used on any trained classifier) and   \n - Explain predictions of machine learning models, , .  \n - Interpreting scikit-learns decision tree and random forest predictions.  \n - Explaining the predictions of any machine learning classifier, , .  \n - Create LIMEs for XGBoost.  \n - Inspecting machine learning classifiers and explaining their predictions.  \n - Leave One Feature Out Importance, .  \n - Generate feature contribution plots.  \n - Individual Conditional Expectation Plot Toolbox.  \n - Partial dependence plot toolbox, .  \n - Visualize and cluster partial dependence.  \n - Contrastive explanations.  \n - Collection of tools for explainable AI.  \n - Neural network interpretability.  \n - An eXplainability toolbox for machine learning.  \n - A toolbox to investigate neural network predictions.  \n - Explanations for ML models (R package).  \n - Fit interpretable models, explain models.  \n - Model interpretability.  \n - Interpretable ML package.  \n - Model interpretability and understanding for PyTorch.  \n\n#### Automated Machine Learning\n - Automated machine learning based on TensorFlow.  \n - Automated machine learning tool, optimizes machine learning pipelines.  \n - AutoML for deep learning.  \n - Toolkit for neural architecture search and hyper-parameter tuning by Microsoft.  \n - Automated machine learning.  \n - Automatically discover computer programs that can solve machine learning tasks from Google.  \n - Automated Machine Learning using scikit-learn xgboost, LightGBM and others.  \n\n#### Graph Representation Learning\n - Unsupervised learning on graphs.   \n - Graph representation learning with PyTorch.   \n - Graph representation learning with TensorFlow.   \n\n#### Convex optimization\n - Modelling language for convex optimization problems. Tutorial: ,   \n\n#### Evolutionary Algorithms & Optimization\n - Evolutionary computation framework (Genetic Algorithm, Evolution strategies).  \n - DSL for composable evolutionary algorithms, .  \n - Multiobjective optimization.  \n - Efficiently computes derivatives of numpy code.  \n - Derivation-free optimization.  \n - Sklearn-like interface for genetic programming.  \n - Optimization of expensive black-box functions.  \nOptometrist algorithm - .  \n - Neural architecture search.  \n - Evolutionary computation library built on Pytorch.  \n\n#### Hyperparameter Tuning\n - , .  \n - Hyperparameter search using genetic algorithms.  \n - Hyperparameter optimization.  \n - Hyperopt + sklearn.  \n - Hyperparamter optimization, .  \n -  for Hyperparameter search.  \n - Hyperparameter search with a focus on deep learning and deep reinforcement learning.  \n - Black box hyperparameter optimization.  \n - Scalable Bayesian optimisation.  \n - Bayesian optimization in PyTorch.  \n - Adaptive Experimentation Platform by Facebook.  \n - Hyperparameter optimization based on optuna.  \n\n#### Incremental Learning, Online Learning\nsklearn - , .  \n - Online machine learning.  \n - Online Learning algorithms.  \n\n#### Active Learning\n  \n - Active learning framework.  \n\n#### Reinforcement Learning\n,   \nIntro to Monte Carlo Tree Search (MCTS) - , ,   \nAlphaZero methodology - , , ,   \n - Library for reinforcement learning.  \n - Facebook RL framework.  \n\n#### Deployment and Lifecycle Management\n\n##### Workflow Scheduling and Orchestration\n - Run scripts and workflow graphs in Docker image using Google Life Sciences, AWS Batch, .   \n - Schedule and monitor workflows.  \n - Python specific workflow scheduling.  \n - Development, production and observation of data assets.  \n - Workflow orchestration.  \n - Workflow orchestration.  \n - CI/CD for Machine Learning Projects.  \n - Task scheduling.  \n - Task queue.  \n\n##### Containerization and Docker\n  \n  \n - Facilitates building Docker images.  \n\n##### Data Versioning, Databases, Pipelines and Model Serving\n - Version control for large files.  \n - Build data pipelines.  \n - Feature store. .  \n - Database for vector search applications.  \n - Serve ML models.  \n - Vector database for similarity search.  \n - Version and deploy your ML models following GitOps principles.  \n\n##### Data Science Related\n - Transpile trained ML models into other languages.  \n - Transpile trained scikit-learn estimators to C, Java, JavaScript and others.  \n - Manage the machine learning lifecycle, including experimentation, reproducibility and deployment.  \n - Command-line utilities to make it easier to run machine learning experiments.  \n - Package and deploy machine learning models for serving in production.  \n - Tool with focus on dependency graphs.  \n - Be notified when your training ends.  \n - Lifecycle Management Tool by Netflix.  \n - Deploy machine learning models.  \n - Experiment tracking and model registry.  \n - Experiment Manager, MLOps and Data-Management.  \n - MLOps.  \n - Deploy machine learning models.  \n - MLOPs.  \n\n#### Math and Background\n  \nGilbert Strang -   \nGilbert Strang -   \n\n#### Resources\n - Blog.   \n  \n  \n  \n   \n\n##### Guidelines \n - Guide to data sharing.  \n\n##### Books\n  \n  \n  \n\n##### Other Awesome Lists\n    \n    \n    \n    \n  \n    \n    \n    \n  \n  \n   \n   \n    \n   \n   \n   \n   \n   \n   \n  \n   \n  \n    \n  \n     \n   \n   \n  \n  \n  \n  \n   \n   \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n\n#### Lectures\n - YouTube Playlist.   \n\n#### Things I google a lot\n  \n  \n  \n\n## Contributing  \nDo you know a package that should be on this list? Did you spot a package that is no longer maintained and should be removed from this list? Then feel free to read the  and submit your pull request or create a new issue.  \n\n## License\n\n'",Curated list of Python resources for data science.
5,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
5,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
5,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
5,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
5,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
5,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
5,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
5,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
5,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
5,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
5,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
5,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
5,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
5,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
5,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
5,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
5,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
5,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
5,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
5,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
5,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
5,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
5,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
5,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
5,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
5,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
5,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
5,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
5,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
5,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
5,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
5,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
5,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
5,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
5,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
5,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
5,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
5,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
5,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
5,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
5,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
5,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
5,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
5,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
5,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
5,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
5,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
5,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
5,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
5,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
5,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
5,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
5,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
5,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
5,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
5,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
5,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
5,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
5,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
5,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
5,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
5,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
5,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
5,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
5,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
5,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
5,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
5,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
5,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
5,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
5,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
5,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
5,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
5,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
5,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
5,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
5,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
5,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
5,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
5,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
5,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
5,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
5,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
5,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
5,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
5,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
5,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
5,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
5,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
5,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
5,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
6,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'char-rnn-tensorflow\n===\n\n\n\n\n\nMulti-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.\n\nInspired from Andrej Karpathys .\n\n## Requirements\n- \n\n## Basic Usage\nTo train with default parameters on the tinyshakespeare corpus, run . To access all the parameters use .\n\nTo sample from a checkpointed model, .\nSampling while the learning is still in progress (to check last checkpoint) works only in CPU or using another GPU.\nTo force CPU mode, use  and  afterward\n(resp.  and  on Windows).\n\nTo continue training after interruption or to run on more epochs, \n\n## Datasets\nYou can use any plain text file as input. For example you could download  as such:\n\n\n\nThen start train from the top level directory using \n\nA quick tip to concatenate many small disparate  files into one large training file: .\n\n## Tuning\n\nTuning your models is kind of a ""dark art"" at this point. In general:\n\n1. Start with as much clean input.txt as possible e.g. 50MiB\n2. Start by establishing a baseline using the default settings.\n3. Use tensorboard to compare all of your runs visually to aid in experimenting.\n4. Tweak --rnn_size up somewhat from 128 if you have a lot of input data.\n5. Tweak --num_layers from 2 to 3 but no higher unless you have experience.\n6. Tweak --seq_length up from 50 based on the length of a valid input string\n   (e.g. names are <= 12 characters, sentences may be up to 64 characters, etc).\n   An lstm cell will ""remember"" for durations longer than this sequence, but the effect falls off for longer character distances.\n7. Finally once youve done all that, only then would I suggest adding some dropout.\n   Start with --output_keep_prob 0.8 and maybe end up with both --input_keep_prob 0.8 --output_keep_prob 0.5 only after exhausting all the above values.\n\n## Tensorboard\nTo visualize training progress, model graphs, and internal state histograms:  fire up Tensorboard and point it at your .  E.g.:\n\n\nThen open a browser to  or the correct IP/Port specified.\n\n\n## Roadmap\n- [ ] Add explanatory comments\n- [ ] Expose more command-line arguments\n- [ ] Compare accuracy and performance with char-rnn\n- [ ] More Tensorboard instrumentation\n\n## Contributing\nPlease feel free to:\n* Leave feedback in the issues\n* Open a Pull Request\n* Join the \n* Share your success stories and data sets!\n'"," Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow "
6,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
6,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
6,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
6,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
6,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
6,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
6,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
6,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
6,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
6,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
6,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
6,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
6,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
6,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
6,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
6,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
6,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
6,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
6,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
6,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
6,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
6,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
6,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
6,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
6,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
6,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
6,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
6,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
6,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
6,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
6,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
6,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
6,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
6,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
6,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
6,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
6,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
6,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
6,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
6,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
6,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
6,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
6,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
6,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
6,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
6,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
6,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
6,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
6,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
6,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
6,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
6,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
6,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
6,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
6,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
6,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
6,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
6,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
6,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
6,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
6,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
6,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
6,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
6,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
6,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
6,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
6,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
6,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
6,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
6,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
6,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
6,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
6,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
6,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
6,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
6,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
6,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
6,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
6,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
6,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
6,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
6,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
6,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
6,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
6,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
6,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
6,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
6,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
6,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
6,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
6,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
7,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b""# OpenTelemetry for PHP\n\n\n\n\n\nThis is the [<marko.inline.RawText object at 0x000001F254055310>] for the main components of  for PHP.\n\n## Documentation\n\nPlease read the official documentation: https://opentelemetry.io/docs/instrumentation/php/\n\n## Packages and versions\n\n| Package              | Latest                                                                                                                                                                                                                                                                                                                                                  |\n|----------------------|---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n| API                  |                                                                                   |\n| SDK                  |                                                                                   |\n| Context              |                                                                   |\n| Semantic Conventions |                                                               |\n| OTLP Exporter        |                                           |\n| gRPC Transport       |                                       |\n| OTLP Protobuf Files  |                           |\n| B3 Propagator        |   |\n\nReleases for both this repository and  are\nbased on read-only  from our monorepo. You should refer to\n for all packages, their versions and details.\n\nYou can also look at the read-only repositories, which live in the\n organization.\n\n## Contributing\n\nWe would love to have you on board, please see our  and .\n\n## Specification conformance\n\nWe attempt to keep the  up to date in order to show which features are available and which have not yet been implemented.\n\nIf you find an inconsistency in the data in the matrix, please let us know in our slack channel and we'll get it rectified.\n\n## Backwards compatibility\n\nSee .\n\n## Versioning\n\nVersioning rationale can be found in the \n""",The OpenTelemetry PHP Library
7,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
7,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
7,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
7,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
7,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
7,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
7,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
7,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
7,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
7,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
7,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
7,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
7,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
7,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
7,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
7,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
7,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
7,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
7,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
7,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
7,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
7,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
7,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
7,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
7,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
7,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
7,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
7,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
7,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
7,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
7,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
7,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
7,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
7,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
7,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
7,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
7,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
7,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
7,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
7,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
7,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
7,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
7,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
7,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
7,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
7,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
7,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
7,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
7,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
7,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
7,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
7,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
7,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
7,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
7,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
7,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
7,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
7,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
7,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
7,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
7,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
7,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
7,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
7,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
7,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
7,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
7,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
7,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
7,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
7,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
7,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
7,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
7,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
7,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
7,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
7,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
7,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
7,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
7,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
7,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
7,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
7,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
7,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
7,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
7,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
7,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
7,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
7,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
7,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
7,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
7,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
8,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'\n\n    \n\n\n_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._\n\n\n\n\n\n\n## Overview\n\n- \xf0\x9f\x93\x88 Keep your build times under control and monitor which targets are taking the longest to compile.\n- \xe2\x9a\xa0\xef\xb8\x8f Collect warnings to improve your code health.\n- \xe2\x9d\x8c Collect errors to help and diagnose builds problems in real-time.\n- \xf0\x9f\x9b\xa0 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.\n\nXCMetrics is built on top of , which is a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.\nXCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decision in regards to our project structure and architecture.\n\n## Getting Started\n\nHead over to our  to see how to integrate XCMetrics in your project.\n\n## Develop\n\nXCMetrics is built using Swift Package Manager, you just need to open the  file in Xcode: \n\n\n\n## Support\n\nCreate a  with as many details as possible. Its important that you follow the issue template and include all required information in order for us to get back to you as soon as possible.\n\nReach us at the  channel in .\n\n## Contributing\n\nWe feel that a welcoming community is important and we ask that you follow Spotifys \n\nin all interactions with the community.\n\n## Authors\n\nA full list of  can be found on GitHub.\n\nFollow  on Spotify for updates.\n\n## License\n\nCopyright 2020 Spotify, Inc.\n\nLicensed under the Apache License, Version 2.0: https://www.apache.org/licenses/LICENSE-2.0\n\nThis product includes software developed by the ""Marcin Krzyzanowski"" (http://krzyzanowskim.com/).\n\n## Security Issues?\n\nPlease report sensitive security issues via  rather than GitHub.\n'",XCMetrics is the easiest way to collect Xcode build metrics and improve developer productivity.
8,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
8,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
8,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
8,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
8,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
8,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
8,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
8,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
8,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
8,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
8,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
8,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
8,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
8,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
8,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
8,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
8,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
8,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
8,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
8,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
8,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
8,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
8,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
8,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
8,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
8,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
8,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
8,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
8,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
8,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
8,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
8,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
8,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
8,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
8,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
8,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
8,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
8,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
8,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
8,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
8,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
8,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
8,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
8,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
8,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
8,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
8,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
8,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
8,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
8,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
8,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
8,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
8,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
8,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
8,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
8,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
8,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
8,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
8,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
8,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
8,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
8,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
8,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
8,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
8,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
8,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
8,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
8,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
8,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
8,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
8,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
8,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
8,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
8,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
8,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
8,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
8,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
8,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
8,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
8,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
8,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
8,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
8,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
8,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
8,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
8,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
8,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
8,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
8,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
8,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
8,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
9,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'\n    \n    \n    \n\n\n\n \n \n  \n\n\n    A Free Machine Learning University \n\n\n\nMachine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast\n\nThis list is continuously updated - And if you are a Ml practitioner and have some good suggestions to improve this or have somegood resources to share, you create pull request and contribute.\n\n\nTable of Contents\n\n1. \n2. \n3. \n4. \n5. \n6. \n7. \n8. \n9. \n10. \n11. \n12. \n13.  \n14. \n15. \n\n\n\n\n\n\n\n\n\n## Getting Started\n\n | Title and Source                                             | Link                               \t\t\t\t          |\n |------------------------------------------------------------  | -------------------------------------------------------------|\n | Elements of AI :  Part-1                                     | \t\t\t\t  |\n | Elements of AI :  Part-2                                     |  \t\t\t  |\n | CS50\xe2\x80\x99s Introduction to AI\tHarvard\t\t\t            | \t\t\t  |\n | Intro to Computational Thinking and Data Science MIT     | \n | Practical Data Ethics\t\t\t\t\t\t\t\t\t\t| \n | Machine learning Mastery Getting Started \t\t\t\t\t| \n | Design and Analysis of Algorithms MIT\t\t\t\t\t| \n | AI: Principles and Techniques Stanford \t\t\t\t\t| |\n | The Private AI Series \t\t\t\t\t\t\t\t\t\t| |\n\n \n\n## Mathematics\n\n\n | Title and Source                                             | Link                               \t\t\t\t          |\n |------------------------------------------------------------  | -------------------------------------------------------------\n | Statistics in Machine Learning (Krish Naik)                  | \n | Computational Linear Algebra for Coders\t\t\t\t\t\t| \n | Linear Algebra  MIT\t\t\t\t\t\t\t\t\t\t| |\n | Statistics by zstatistics\t\t\t\t\t\t\t\t\t| |\n | Essence of linear algebra by 3Blue1Brown\t\t\t\t\t\t| |\n | SEEING THEORY (Visual Probability)\tbrown    \t\t    | |\n | Matrix Methods in Data Analysis,and Machine Learning MIT | \n | Math for Machine Learning \t\t\t\t\t\t\t\t\t|  |\n | Statistics for Applications MIT |  \n\n\n\n## Machine Learning\n\n | Title and Source                                             | Link                               \t\t\t\t           |\n |------------------------------------------------------------  | -------------------------------------------------------------|\n | Introduction to Machine Learning with scikit-learn \t\t\t| |\n | Introduction to Machine Learning\t\t\t\t\t\t\t\t| \n | Open Machine Learning Course \t\t\t\t\t\t\t\t| \t\t\t\t\t\t   |\n | Machine Learning (CS229) Stanford\t\t\t\t\t\t|  |\n | Introduction to Machine Learning MIT \t\t\t\t\t| \t\t\t\t\t   |\n | Machine Learning Systems Design 2021 (CS329S) Stanford   |    |\n | Applied Machine Learning 2020 (CS5787) Cornell Tech      | \n | Machine Learning for Healthcare MIT \t\t\t\t\t\t| \t\t\t\t\t   |\n | Machine Learning for Trading Georgia Tech\t\t\t\t| \t\t\t\t   |\t\n | Introduction to Machine Learning for Coders\t\t\t\t\t| \n | Machine Learning Crash Course\t\t\t\t\t\t\t\t| |\n | Machine Learning with Python \t\t\t\t\t\t\t\t| |\n | Deep Reinforcement Learning:CS285 UC Berkeley\t\t\t| |\n | Probabilistic Machine Learning University of T\xc3\xbcbingen    | |\n | Machine Learning with Graphs(CS224W) Stanford \t\t\t| |\n | Machine Learning in Production CMU\t\t\t\t\t\t| |\n | Machine Learning & Deep Learning Fundamentals                | |\n | Interpretability and Explainability in Machine Learning      | |\n | Practical Machine Learning 2021 Stanford\t\t\t\t\t| |\n | Machine Learning VU University \t\t\t\t\t\t\t| |\n | Machine Learning for Cyber Security Purdue University    | |\n | Audio Signal Processing for Machine Learning \t\t\t\t| |\n | Machine learning & causal inference Stanford\t\t\t\t| |\n | Machine learning cs156 caltech                           |  |\n | Multimodal machine learning (MMML) CMU                   |    | \n | Advanced Topics in Machine Learning Caltech              | \n\n \t\n\n## Deep Learning\n \n \n | Title and Source                                             | Link                               \t\t\t\t           |\n |------------------------------------------------------------  | -------------------------------------------------------------|\n | Introduction to Deep Learning(6.S191) MIT\t\t \t\t| \t\t\t\t\t   |\n | Introduction to Deep Learning\t\t\t\t\t\t\t\t| \n | Deep Learning NYU\t\t\t\t\t \t\t\t\t\t|    |\n | Deep Learning (CS182) UC Berkeley\t\t\t\t\t\t| \n | Deep Learning Lecture Series\tDeepMind x UCL\t\t\t    | |\n | Deep Learning (CS230) Stanford\t\t\t\t\t\t    |                | \n | CNN for Visual Recognition(CS231n) Stanford    \t\t    |   |\n | Full Stack Deep Learning   \t\t\t\t\t\t\t\t\t| |\n | Practical Deep Learning for Coders, v3                       | \t\t\t   |\n | Deep Learning Crash Course 2021 d2l.ai \t\t\t\t\t\t| |\n | Deep Learning for Computer Vision Michigan\t\t\t\t| |\n | Neural Networks from Scratch in Python by Sentdex\t\t\t| |\n | Keras - Python Deep Learning Neural Network API\t\t\t\t| |\n | Reproducible Deep Learning\t\t\t\t\t\t\t\t\t| |\n | PyTorch Fundamentals \t\t\t\t\t\t\t\t\t\t| |\n | Geometric Deep Learing (GDL100)\t\t\t\t\t\t\t\t| |\n | Deep learning Neuromatch Academy \t\t\t\t\t\t\t| \n | Deep Learning for Molecules and Materials\t\t\t\t\t| |\n | Deep Learning course for Vision\t\t\t\t\t\t\t\t| |\n | Deep Multi-Task and Meta Learning (CS330) Stanford  \t\t|  |\n | Deep Learning Interviews book \t\t\t\t\t\t\t\t| |\n | Deep Learning for Computer Vision 2021                       | \n | Deep Learning 2022 CMU                                   |    \n | UvA Deep Learning                                            | \n\n\n## Natural language processing \n\n | Title and Source                                             | Link                               \t\t\t\t  \t\t   |\n | ------------------------------------------------------------ | -----------------------------------------------------------|\n | Natural Language Processing AWS\t\t\t\t\t\t\t\t| \n | NLP - Krish Naik \t\t\t\t                            | \n | NLP with Deep Learning(CS224N) 2019 Stanford     \t\t|  \n | A Code-First Introduction to Natural Language Processing     | |\n | CMU Neural Nets for NLP 2021  Carnegie Mellon University | |\n | Speech and Language Processing Stanford \t\t\t\t\t|  |\n | Natural Language Understanding (CS224U) Stanford\t\t\t|  \n | NLP with Dan Jurafsky and Chris Manning, 2012 Stanford   | |\n | Intro to NLP with spaCy   \t\t\t\t\t\t\t\t\t| |\n | Advanced NLP with spaCy \t\t\t\t\t\t\t\t\t\t|                                              |\n | Applied Language Technology \t\t\t\t\t\t\t\t\t| |\n | Advanced Natural Language Processing Umass\t\t\t\t|  |\n | Huggingface Course\t\t\t\t\t\t\t\t\t\t\t| |\n | NLP Course Michigan\t\t\t\t\t\t\t\t\t\t| |\n | Multilingual NLP 2020 CMU\t\t\t\t\t\t\t\t| |\n | Advanced NLP 2021 CMU\t\t\t\t\t\t\t\t\t| |\n | Transformers United stanford                             |    |  \n | CS324 Large Language Models | |\n\n  \n\n## Reinforcement learning\n\n | Title and Source                                             | Link\t\t\t\t\t\t\t\t\t\t\t\t\t\t                                         |\n |------------------------------------------------------------  | -----------------------------------------------------------|\n | Reinforcement Learning(CS234)  Stanford \t\t\t\t\t| |\n | Introduction to reinforcement learning DeepMind\t\t\t| |\n | Reinforcement Learning Course  DeepMind & UCL\t\t\t| |\n | Advanced Deep Learning & Reinforcement Learning        \t\t| |\n | DeepMind x UCL Reinforcement Learning 2021\t\t\t\t\t| \n \n \n## Books\n\n\n | Title and Source                                             | Link                               \t\t\t\t         |\n |------------------------------------------------------------  | -----------------------------------------------------------|\n | Scientific Python Lectures\t\t \t\t\t\t\t\t\t| |\n | Mathematics for Machine Learning\t\t\t\t\t\t\t    | \t |\n | An Introduction to Statistical Learning                      |               |\n | Think Stats \t\t\t\t\t\t\t\t\t\t\t\t\t| |\n | Python Data Science Handbook                                 | |\n | Natural Language Processing with Python - NLTK               | \t\t\t\t\t\t |\n | Deep Learning by Ian Goodfellow             \t\t\t\t\t| \t\t |\n | Dive into Deep Learning \t\t\t\t\t\t\t\t\t\t| \n | Approaching (Almost) Any Machine Learning Problem    \t\t| |\n | Neural networks and Deep learning\t\t\t\t\t\t\t| |\n | AutoML: Methods, Systems, Challenges (first book on AutoML)  | |\n | Feature Engineering and Selection\t \t\t\t\t\t\t| |\n | Introduction to Machine Learning Interviews Book\t\t\t\t| |\n | Hands-On Machine Learning with R \t\t\t\t\t\t\t| |\n | Zero to Mastery TensorFlow for Deep Learning Book\t\t\t| |\n | Introduction to Probability for Data Science\t\t\t\t\t| |\n | Graph Representation Learning Book\t\t\t\t\t\t\t| |\n | Interpretable Machine Learning\t\t\t\t\t\t\t\t| |\n | Computer Vision: Algorithms and Applications, 2nd ed.\t\t| \n\n \n \n \n## ML in Production\n\n\n | Title and Source                                             | Link                               \t\t\t\t         |\n |------------------------------------------------------------  | -----------------------------------------------------------|\n | \tIntroduction to Docker       \t \t\t\t\t\t\t\t| |\n |  MLOps Basics\t\t\t\t\t\t\t\t\t\t\t\t| | \n |  Effective MLOps: Model Development                           | |\n  \n\n## Quantum ML\n\n | Title and Source                                             | Link                               \t\t\t\t         |\n |------------------------------------------------------------  | -----------------------------------------------------------|\n | \tQuantum machine learning      \t \t\t\t\t\t\t\t| |\n\n\n## DataSets\n\n | Title and Source                                             | Link                               \t\t\t\t         |\n |------------------------------------------------------------  | -----------------------------------------------------------|\n | Yelp Open Dataset\t\t\t\t\t\t\t\t\t\t\t| \t\t\t\t\t\t | \n | Machine Translation \t\t\t\t\t\t\t\t\t\t\t| \t\t\t\t |\n | IndicNLP Corpora (Indian languages)\t\t\t\t\t\t\t| \t\t |\n | Amazon product co-purchasing network metadata\t\t\t\t| |\n | Stanford Question Answering Dataset (SQuAD)\t\t\t\t\t| \n  \n \n## Other Useful Websites\n\n\n1.\t\n2.\t\n3.  \n4.  \n5.  \n6.  \n7.  \n8.  \n10. \n11. \n12. \n13. \n14. \n15. \n16. \n17. \n\n## Other Useful GitRepo\n\n1. \n2. \n3. \n4. \n5. \n6. \n7. \n8. \n9. \n\n## Blogs and Webinar\n1. \n2. \n3. \n\n\n## Must Read Research Paper\n\n NLP [Text] \n\n1. \n2. \n3. \n4. \n4. \n5. \n6. \n8. \n9. \n10.  \n11. \n12. \n\nOCR [Optical Character Recognition] \n\n1. \n\n## Company Tech Blogs \n\n1. \n2. \n3. \n4. \n5. \n6.  | \n\n\n\n'",Machine Learning Open Source University
9,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
9,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
9,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
9,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
9,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
9,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
9,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
9,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
9,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
9,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
9,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
9,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
9,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
9,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
9,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
9,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
9,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
9,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
9,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
9,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
9,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
9,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
9,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
9,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
9,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
9,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
9,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
9,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
9,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
9,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
9,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
9,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
9,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
9,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
9,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
9,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
9,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
9,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
9,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
9,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
9,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
9,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
9,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
9,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
9,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
9,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
9,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
9,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
9,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
9,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
9,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
9,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
9,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
9,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
9,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
9,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
9,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
9,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
9,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
9,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
9,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
9,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
9,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
9,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
9,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
9,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
9,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
9,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
9,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
9,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
9,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
9,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
9,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
9,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
9,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
9,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
9,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
9,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
9,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
9,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
9,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
9,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
9,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
9,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
9,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
9,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
9,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
9,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
9,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
9,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
9,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
10,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'# Mousetrap\n\n\nMousetrap is a simple library for handling keyboard shortcuts in Javascript.\n\nIt is licensed under the Apache 2.0 license.\n\nIt is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:\n\n- Internet Explorer 6+\n- Safari\n- Firefox\n- Chrome\n\nIt has support for , , and  events on specific keys, keyboard combinations, or key sequences.\n\n## Getting started\n\n1. Include mousetrap on your page before the closing  tag\n\n    \n\n    or install  from  and require it\n\n    \n\n2. Add some keyboard events to listen for\n\n    \n\n## Why Mousetrap?\n\nThere are a number of other similar libraries out there so what makes this one different?\n\n- There are no external dependencies, no framework is required\n- You are not limited to  events (You can specify , , or  or let Mousetrap choose for you).\n- You can bind key events directly to special keys such as  or  without having to specify  or  which are not consistent across all keyboards\n- It works with international keyboard layouts\n- You can bind Gmail like key sequences in addition to regular keys and key combinations\n- You can programatically trigger key events with the  method\n- It works with the numeric keypad on your keyboard\n- The code is well documented/commented\n\n## Tests\n\nUnit tests are run with mocha.\n\n### Running in browser\n\n to check your browser compatibility. You may also download the repo and open  in your browser.\n\n### Running with Node.js\n\n1. Install development dependencies\n\n    \n\n3. Run tests\n\n    \n\n## Documentation\n\nFull documentation can be found at https://craig.is/killing/mice\n'",Simple library for handling keyboard shortcuts in Javascript
10,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
10,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
10,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
10,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
10,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
10,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
10,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
10,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
10,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
10,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
10,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
10,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
10,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
10,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
10,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
10,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
10,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
10,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
10,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
10,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
10,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
10,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
10,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
10,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
10,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
10,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
10,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
10,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
10,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
10,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
10,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
10,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
10,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
10,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
10,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
10,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
10,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
10,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
10,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
10,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
10,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
10,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
10,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
10,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
10,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
10,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
10,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
10,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
10,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
10,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
10,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
10,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
10,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
10,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
10,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
10,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
10,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
10,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
10,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
10,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
10,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
10,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
10,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
10,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
10,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
10,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
10,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
10,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
10,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
10,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
10,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
10,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
10,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
10,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
10,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
10,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
10,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
10,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
10,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
10,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
10,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
10,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
10,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
10,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
10,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
10,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
10,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
10,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
10,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
10,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
10,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
11,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'# Welcome!\n\n\n\nWelcome to Pipecat ... elegant, flexible data logging in Python for\nconnected sensors and instruments.  Use Pipecat to log data from\nbattery chargers, GPS, automobiles, gyros, weather, and more!\n\nHere are some devices supported by Pipecat and examples of how to log their data:\n\n* .\n*  that generate NMEA data.\n* Vehicles that generate OBD-II data.\n* Motion (accelerometer) data from iOS devices.\n* METAR (aviation weather) data from the National Weather Service.\n* Any device that communicate over a serial port.\n* Any device that can handle HTTP GET requests.\n* Any device that can write to a socket using UDP.\n* Any device that can generate XML data.\n\nYou can see the full Pipecat documentation with tutorials at\nhttps://pipecat.readthedocs.io ... for questions, comments, or suggestions, get\nin touch with our team at https://gitter.im/shead-custom-design/pipecat.\n\nLicense\n=======\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License\nalong with this program.  If not, see .\n'","Elegant, flexible data logging in Python for connected sensors and instruments."
11,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
11,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
11,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
11,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
11,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
11,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
11,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
11,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
11,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
11,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
11,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
11,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
11,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
11,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
11,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
11,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
11,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
11,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
11,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
11,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
11,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
11,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
11,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
11,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
11,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
11,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
11,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
11,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
11,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
11,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
11,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
11,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
11,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
11,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
11,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
11,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
11,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
11,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
11,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
11,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
11,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
11,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
11,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
11,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
11,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
11,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
11,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
11,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
11,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
11,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
11,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
11,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
11,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
11,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
11,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
11,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
11,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
11,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
11,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
11,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
11,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
11,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
11,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
11,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
11,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
11,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
11,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
11,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
11,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
11,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
11,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
11,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
11,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
11,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
11,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
11,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
11,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
11,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
11,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
11,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
11,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
11,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
11,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
11,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
11,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
11,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
11,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
11,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
11,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
11,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
11,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
12,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'\n\n# Awesome MongoDB \n\n\n\n> A curated list of awesome MongoDB resources, libraries, tools and applications\n\nInspired by the  list thing. Feel free to improve this list by !\n\n## Table of Contents\n - \n   - \n   - \n   - \n   - \n   - \n   - \n - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n   - \n - \n\n## Resources\n### Documentation\n - \n - \n - \n - \n - \n - \n - \n\n### Articles\n\n - \n - \n -  - Series of articles regarding MongoDB Design Patterns and common use case of each Design Pattern with real world examples.\n -  - Scale 101\n -  - Everything you need/have to know about indexes\n - \n - \n -  - The techniques and MongoDB Cloud features to debug performance issues and expose sub-optimal queries\n\n### Books\n -  - Advanced MongoDB tips and tricks, given by a MongoDB inc. engineer\n -  - Learn how to build a full stack JavaScript web app from scratch\n - \n -  - Free e-book: How to develop effective and optimal data manipulation and analytics pipelines\n -  - Basic introduction\n -  - Learn how to build a production-ready SaaS web app from scratch\n\n### Talks\n -  [47]\n -  [35]\n -  [50]\n\n### Tutorials\n -  - Deployment tutorial of a basic Node.js and MongoDB web stack on Kubernetes\n - \n - \n\n### More\n - \n -  - Certifications and free online courses\n -  - Free and self-paced MongoDB courses for beginners\n\n## Libraries\n### C\n -  - Official C driver\n\n### C++\n -  - Official C++ driver\n\n### C#/.NET ###\n -  - Official C# driver\n -  - C# message queue on top of MongoDB\n -  - Lightweight queue pub/sub processing library\n -  - Repository abstraction layer on top of the C# driver\n\n### D\n -  - D web framework shipping with a MongoDB driver\n\n### Dart\n -  - Community Dart driver\n\n### Delphi\n -  - Library for Delphi that includes a MongoDB client\n -  - Minimal community Delphi driver\n\n### Elixir\n -  - Community Elixir driver\n -  - Community Elixir driver\n -  - Adapter for the Ecto database wrapper\n\n### Erlang\n -  - Community Erlang driver\n\n### Fantom\n -  - Community Fantom driver\n\n### Go\n -  - ODM based on mgo\n -  - Community Go driver\n -  - MongoDB cursor that paginates\n -  - Official Go driver\n\n### Haskell\n -  - Community Haskell driver\n\n### Java\n -  - Query in Java as in Mongo shell\n -  - The power and simplicity of JPA for NoSQL datastores\n -  - Official Java driver\n -  - Java message queue on top of MongoDB\n -  - An enhancement of GridFS to allow for more features and capabilities\n -  - Based on Jackson, allows you to easily handle your mongo objects as POJOs\n -  - Java ODM\n -  - Java ODM and caching layer\n -  - Community driver for languages running on the JVM\n -  - Spring based, object-document support and repositories\n\n### JavaScript\n -  - Class-based ES6 ODM for Mongo-like databases\n -  - Community Deno driver\n -  - Reactive ODM that uses Javascript Proxies to enable transparent DB persistence\n -  - Full stack based on MongoDB, Express, AngularJS, and Node.js\n -  - Full stack based on MongoDB, Express, React and Node.js\n -  - Real-time/reactive client-server framework based on MongoDB, with lots of features\n -  - Node.js asynchronous ODM\n -  - Permissions management library integrated with Mongoose\n -  - Node.js migration framework\n -  - Framework with live querying on top of Mongoose and socket.io\n -  - Universal schema-based ORM with multi-state representation for entities\n -  - Official Node.js driver\n\n### Julia\n -  - C driver bindings\n \n### Kotlin\n-  - Kotlin toolkit based on the Java driver\n\n### Lisp\n -  - Community Common Lisp interface\n -  Community Common Lisp driver\n -  - Community Emacs Lisp driver\n\n### Mathematica\n -  - Community Mathematica driver\n\n### OCaml\n -  - Community OCaml driver\n\n### PHP\n -  - Repository implementation built on top of laravel-mongodb\n -  - Eloquent model and query builder for Laravel\n -  - Repository implementation\n -  - Adapter for applications using \n -  - Official PHP driver\n -  - ODM based on the PHP Mongo PECL extension\n -  - Migration tool based on PHPMongo ODM\n -  - Fast schemaless ODM\n\n### PowerShell\n -  - MongoDB cmdlets for PowerShell\n\n### Python\n -  - MongoDB Atlas Search wrapper with MongoEngine syntax\n -  - Asynchronous ODM based on  and , which supports migrations out of the box\n -  - MongoDB connector for Django compatible with Django ORM\n -  - Flask extension that integrates MongoEngine, WTForms and FlaskDebugToolbar\n -  - Flask extension that adds PyMongo support to Flask\n -  - Powerful schema-less ODM for MongoDB and Python (sync + async)\n -  - ODM on top of PyMongo\n -  - MongoDB logging handler\n -  - Official non-blocking Python driver for Tornado or asyncio\n -  - Official Python driver\n -  - A wrapper for PyMongos Collection object that makes it easy to run  on your queries.\n -  - A lightweight, schemaless, Pythonic Object-Oriented interface\n -  - Asynchronous ODM on top of pydantic\n -  - MongoDB pipeline for Scrapy\n -  - Twisteds MongoDB driver\n -  - Driver-independent (async/sync) ODM based on marshmallow\n\n### R\n -  - Fast and simple client for R\n\n### Ruby\n -  - A simple global method to explain Mongoid queries\n -  - Official Ruby driver\n -  - ODM framework\n\n### Rust\n -  - Official Rust driver\n\n### Scala\n -  - Official Scala driver\n -  - Non-blocking Scala driver\n -  - Read/write data with Spark SQL\n\n### Smalltalk\n -  - Community Smalltalk driver\n\n### Swift\n -  - Community asynchronous Swift driver\n\n## Tools\n### Administration\n -  - Schedule MongoDB backups to S3 with a Kubernetes CronJob.\n -  - Full-featured MongoDB dockerized backup agent\n -  - Manage MongoDB servers and replica sets using JSON configurations\n -  - Generate randomized datasets and benchmark your setup\n -  - Three neat Python scripts to work with collections and indexes\n -  - Collection of scripts to set up test environments and visualize log files\n -  - Nginx module for serving files from GridFS\n -  - REST client written as an Nginx module\n -  - Aggregates queries from query profiler and reports query usage statistics\n -  - MongoDB cluster status overview command line tool\n\nServices:\n -  - IBM DBaaS offer (has other database types too)\n -  - MongoDB Inc. DBaaS offer (works with AWS, Azure, or GCP)\n -  - MongoDB Inc. databases management offer\n -  - Rackspace DBaaS offer (has other database types too)\n -  - Fully managed DBaaS (with option to bring your own Azure/AWS account)\n\n### Data\n -  - Streaming replication to Elasticsearch, Solr, or MongoDB\n -  - PostgreSQL foreign data wrapper\n -  - Hadoop connector\n -  - MongoDB to Elasticsearch (and vice-versa) migration tool\n -  - Multi-master replication\n\nServices:\n -  -  Blockchain based Data integrity solution for MongoDB\n\n### Deployment\n -  - Ansible role\n -  - Chef cookbook\n - \n - \n -  - Puppet module (formerly puppetlabs-mongodb)\n\nServices:\n -  - MongoDB Inc. solution for continuous data sync between separate clusters\n\n### Desktop\n -  - Free Cross-platform GUI from MongoDB\n -  - Connect to MongoDB and prototype queries from VS Code\n -  - Mac native client\n\nServices:\n -  - Cross-platform JetBrains IDE\n -  - MongoDB Admin. Intuitive UI. Fast. Reliable\n -  - Data modeling tool for MongoDB and relational databases\n -  - Feature-rich but easy-to-use cross-platform IDE (formerly MongoBooster)\n -  - Modern and powerful GUI tool, cross-platform and easy-to-use\n -  - Cross-platform GUI, stable and powerful (formerly MongoChef and Robo 3T)\n -  - Native, lightweight GUI on macOS\n\n### Development\n -  - View the MongoDB Query API equivalents of your builder expressions in Visual Studio\n -  - Random data generator\n -  - Database migration tool\n -  - Online query playground\n -  - Node.js library, CLI and Docker image for populating databases using JS and JSON files\n -  - Schema and data analyzer: explore data in your collections\n -  - Schema analyzer: see what fields are in your collection and whats their content\n - \n\nServices:\n -  - MongoDB Inc. solution to run code without the operational overhead\n -  - MongoDB Inc. solution for mobile data sync\n\n### Monitoring\n -  - Nagios plugin (in Bash)\n -  - Simple monitoring CLI\n -  - Collection of Munin plugins\n -  - Long operations monitoring and alerting\n -  - More Munin plugins\n -  - MongoDB top clone\n -  - Another top clone\n -  - Nagios plugin (in Python)\n -  - Free and open-source platform for managing and monitoring databases performances\n -  - Log all MongoDB queries in a ""tail""able way\n\nServices:\n\n -  - SaaS-based monitoring\n -  - SaaS-based query performance analytics and monitoring\n\n### Low-Code\n\n> \xf0\x9f\x92\xa1 These tools are not necessarily made for MongoDB in particular, but support it.\n\n -  - Open-source Retool alternative\n -  - Open-source Firebase alternative\n -  - Open-source Retool alternative\n -  - Open-source Retool alternative\n -  - Open-source Retool alternative\n\nServices:\n-  - Retool alternative\n-  - Drag-and-drop editor with pre-built components to build internal tools\n\n### Shell\n -  - Official Atlas API command-line client\n -  - Official command-line client\n\n### Web\n -  - Web-based user interface to handle connections and databases needs\n -  - Web-based admin interface built with Express\n -  - Admin interface built with Django\n -  - MongoDB client for the web\n -  - Web-based user interface written in JavaScript\n -  - PHPMyAdmin for MongoDB, sort of\n\nServices:\n\n -  - Easy online GUI and data-visualization dashboards\n\n## Applications\n\nThose open-source applications have MongoDB somewhere in their stack:\n\n -  - Web app to publish books or documentation built with React and Express\n -  - Multiplayer programming game for learning how to code\n -  - Mobile & web analytics and marketing platform built with Node.js\n -  - JavaScript CMS built with Mongoose\n -  - Multi-platform e-commerce shopping cart built with ASP.NET\n -  - Evernote clone built with Go\n -  - Node.js based forum software (""built for the modern web"")\n -  - Event-driven, real-time commerce platform built with ES6\n -  - Boilerplate for SaaS products, built with TypeScript, React and Express\n -  - Remote monitoring application built with Node.js and Bootstrap\n -  - Scalable high availability email server that uses MongoDB for email storage\n\n## License\n\n\nTo the extent possible under law,  has waived all copyright and related or neighboring rights to this work.\n'",":leaves: A curated list of awesome MongoDB resources, libraries, tools and applications"
12,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
12,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
12,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
12,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
12,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
12,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
12,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
12,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
12,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
12,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
12,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
12,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
12,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
12,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
12,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
12,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
12,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
12,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
12,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
12,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
12,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
12,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
12,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
12,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
12,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
12,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
12,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
12,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
12,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
12,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
12,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
12,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
12,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
12,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
12,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
12,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
12,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
12,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
12,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
12,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
12,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
12,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
12,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
12,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
12,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
12,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
12,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
12,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
12,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
12,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
12,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
12,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
12,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
12,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
12,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
12,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
12,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
12,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
12,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
12,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
12,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
12,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
12,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
12,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
12,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
12,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
12,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
12,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
12,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
12,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
12,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
12,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
12,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
12,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
12,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
12,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
12,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
12,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
12,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
12,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
12,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
12,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
12,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
12,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
12,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
12,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
12,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
12,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
12,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
12,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
12,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
13,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'sparklyr: R interface for Apache Spark\n================\n\n<!-- README.md is generated from README.Rmd. Please edit that file -->\n<!-- badges: start -->\n\n\n\n\n\n\n\n\n\n- Install and connect to  using YARN,\n  Mesos, Livy or Kubernetes.\n- Use  to filter and aggregate Spark datasets and\n   then bring them\n  into R for analysis and visualization.\n- Use , ,\n   and\n  \n  to train models at scale in Spark.\n- Create interoperable machine learning\n   and\n  productionize them with\n  .\n- Create  that call the full Spark API or run\n   code to support new functionality.\n\n## Table of Contents\n\n- \n- \n- \n  - \n- \n- \n- \n- \n- \n- \n- \n- \n- \n- \n- \n\n## Installation\n\nYou can install the sparklyr package from\n as follows:\n\n\n\nYou should also install a local version of Spark for development\npurposes:\n\n\n\nTo upgrade to the latest version of sparklyr, run the following command\nand restart your r session:\n\n\n\n## Connecting to Spark\n\nYou can connect to both local instances of Spark as well as remote Spark\nclusters. Here we\xe2\x80\x99ll connect to a local instance of Spark via the\n\nfunction:\n\n\n\nThe returned Spark connection () provides a remote dplyr data source\nto the Spark cluster.\n\nFor more information on connecting to remote Spark clusters see the\n section of the\nsparklyr website.\n\n## Using dplyr\n\nWe can now use all of the available dplyr verbs against the tables\nwithin the cluster.\n\nWe\xe2\x80\x99ll start by copying some datasets from R into the Spark cluster (note\nthat you may need to install the nycflights13 and Lahman packages in\norder to execute this code):\n\n\n\n\n\nTo start with here\xe2\x80\x99s a simple filtering example:\n\n\n\n\nprovides additional  examples you can try. For example, consider\nthe last example from the tutorial which plots data on flight delays:\n\n\n\n<img src=""tools/readme/dplyr-ggplot2-1.png"" width=""100%"" />\n\n### Window Functions\n\ndplyr  are\nalso supported, for example:\n\n\n\nFor additional documentation on using dplyr with Spark see the\n section of the sparklyr\nwebsite.\n\n## Using SQL\n\nIt\xe2\x80\x99s also possible to execute SQL queries directly against tables within\na Spark cluster. The  object implements a\n interface for Spark, so you can use\n to execute SQL and return the result as an R data frame:\n\n\n\n## Machine Learning\n\nYou can orchestrate machine learning algorithms in a Spark cluster via\nthe \nfunctions within sparklyr. These functions connect to a set of\nhigh-level APIs built on top of DataFrames that help you create and tune\nmachine learning workflows.\n\nHere\xe2\x80\x99s an example where we use\n\nto fit a linear regression model. We\xe2\x80\x99ll use the built-in \ndataset, and see if we can predict a car\xe2\x80\x99s fuel consumption ()\nbased on its weight (), and the number of cylinders the engine\ncontains (). We\xe2\x80\x99ll assume in each case that the relationship\nbetween  and each of our features is linear.\n\n\n\nFor linear regression models produced by Spark, we can use \nto learn a bit more about the quality of our fit, and the statistical\nsignificance of each of our predictors.\n\n\n\nSpark machine learning supports a wide array of algorithms and feature\ntransformations and as illustrated above it\xe2\x80\x99s easy to chain these\nfunctions together with dplyr pipelines. To learn more see the  section.\n\n## Reading and Writing Data\n\nYou can read and write data in CSV, JSON, and Parquet formats. Data can\nbe stored in HDFS, S3, or on the local filesystem of cluster nodes.\n\n\n\n## Distributed R\n\nYou can execute arbitrary r code across your cluster using\n. For example, we can apply  over  as\nfollows:\n\n\n\nYou can also group by columns to perform an operation over each group of\nrows and make use of any package within the closure:\n\n\n\n## Extensions\n\nThe facilities used internally by sparklyr for its  and machine\nlearning interfaces are available to extension packages. Since Spark is\na general purpose cluster computing system there are many potential\napplications for extensions (e.g.\xc2\xa0interfaces to custom machine learning\npipelines, interfaces to 3rd party Spark packages, etc.).\n\nHere\xe2\x80\x99s a simple example that wraps a Spark text file line counting\nfunction with an R function:\n\n\n\nTo learn more about creating extensions see the\n section\nof the sparklyr website.\n\n## Table Utilities\n\nYou can cache a table into memory with:\n\n\n\nand unload from memory using:\n\n\n\n## Connection Utilities\n\nYou can view the Spark web console using the  function:\n\n\n\nYou can show the log using the  function:\n\n\n\nFinally, we disconnect from Spark:\n\n\n\n## RStudio IDE\n\nThe RStudio IDE includes integrated support for Spark and the sparklyr\npackage, including tools for:\n\n- Creating and managing Spark connections\n- Browsing the tables and columns of Spark DataFrames\n- Previewing the first 1,000 rows of Spark DataFrames\n\nOnce you\xe2\x80\x99ve installed the sparklyr package, you should find a new\nSpark pane within the IDE. This pane includes a New Connection\ndialog which can be used to make connections to local or remote Spark\ninstances:\n\n\n\nOnce you\xe2\x80\x99ve connected to Spark you\xe2\x80\x99ll be able to browse the tables\ncontained within the Spark cluster and preview Spark DataFrames using\nthe standard RStudio data viewer:\n\n\n\nYou can also connect to Spark through \nthrough a new connection dialog:\n\n\n\n\n\n\n\n## Using H2O\n\n is a CRAN\npackage from  that extends\n to provide an interface into\n. For\ninstance, the following example installs, configures and runs\n:\n\n\n\n\n\n    #> Model Details:\n    #> ==============\n    #>\n    #> H2ORegressionModel: glm\n    #> Model ID:  GLM_model_R_1527265202599_1\n    #> GLM Model: summary\n    #>     family     link                              regularization\n    #> 1 gaussian identity Elastic Net (alpha = 0.5, lambda = 0.1013 )\n    #>                                                                lambda_search\n    #> 1 nlambda = 100, lambda.max = 10.132, lambda.min = 0.1013, lambda.1se = -1.0\n    #>   number_of_predictors_total number_of_active_predictors\n    #> 1                          2                           2\n    #>   number_of_iterations                                training_frame\n    #> 1                  100 frame_rdd_31_ad5c4e88ec97eb8ccedae9475ad34e02\n    #>\n    #> Coefficients: glm coefficients\n    #>       names coefficients standardized_coefficients\n    #> 1 Intercept    38.941654                 20.090625\n    #> 2       cyl    -1.468783                 -2.623132\n    #> 3        wt    -3.034558                 -2.969186\n    #>\n    #> H2ORegressionMetrics: glm\n    #> ** Reported on training data. **\n    #>\n    #> MSE:  6.017684\n    #> RMSE:  2.453097\n    #> MAE:  1.940985\n    #> RMSLE:  0.1114801\n    #> Mean Residual Deviance :  6.017684\n    #> R^2 :  0.8289895\n    #> Null Deviance :1126.047\n    #> Null D.o.F. :31\n    #> Residual Deviance :192.5659\n    #> Residual D.o.F. :29\n    #> AIC :156.2425\n\n\n\n## Connecting through Livy\n\n enables remote connections to\nApache Spark clusters. However, please notice that connecting to Spark\nclusters through Livy is much slower than any other connection method.\n\nBefore connecting to Livy, you will need the connection information to\nan existing service running Livy. Otherwise, to test  in your\nlocal environment, you can install it and run it locally as follows:\n\n\n\n\n\nTo connect, use the Livy service address as  and\n in . Once connection completes, use\n as usual, for instance:\n\n\n\nOnce you are done using  locally, you should stop this service\nwith:\n\n\n\nTo connect to remote  clusters that support basic authentication\nconnect as:\n\n\n\n## Connecting through Databricks Connect\n\n\nallows you to connect sparklyr to a remote Databricks Cluster. You can\ninstall  and use it to\nsubmit Spark jobs written in sparklyr APIs and have them execute\nremotely on a Databricks cluster instead of in the local Spark session.\n\nTo use sparklyr with Databricks Connect first launch a Cluster on\nDatabricks. Then follow \nto setup the client:\n\n1.  Make sure pyspark is not installed\n2.  Install the Databricks Connect python package. The latest supported\n    version is 6.4.1.\n3.  Run  and provide the configuration\n    information\n    - Databricks account URL of the form\n      .\n    - \n    - Cluster ID\n    - Port (default port number is )\n\nTo configure  with Databricks Connect, set the following\nenvironment variables:\n\n\n\nNow simply create a spark connection as follows\n\n\n\n\n\n\n'",R interface for Apache Spark
13,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
13,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
13,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
13,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
13,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
13,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
13,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
13,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
13,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
13,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
13,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
13,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
13,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
13,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
13,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
13,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
13,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
13,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
13,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
13,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
13,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
13,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
13,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
13,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
13,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
13,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
13,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
13,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
13,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
13,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
13,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
13,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
13,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
13,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
13,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
13,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
13,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
13,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
13,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
13,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
13,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
13,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
13,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
13,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
13,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
13,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
13,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
13,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
13,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
13,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
13,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
13,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
13,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
13,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
13,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
13,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
13,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
13,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
13,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
13,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
13,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
13,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
13,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
13,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
13,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
13,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
13,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
13,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
13,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
13,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
13,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
13,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
13,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
13,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
13,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
13,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
13,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
13,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
13,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
13,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
13,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
13,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
13,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
13,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
13,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
13,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
13,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
13,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
13,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
13,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
13,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
14,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b':tophat: magic\n---------------\n\nCSS3 Animations with special effects. (\xe2\x86\x92 3.1 kB gzip)\n\n## Demo\n\nCheckout the demo for the animations \n\n## Table of Contents\n\n- \n- \n- \n- \n- \n- \n- \n\n\n## Installation\n\nGitHub Package Registry - \n\n\nNPM - \n\n\nYARN - \n\n\n## Getting Started\n\nInclude the file magic.css or include the minified version magic.min.css\n\n\n\nor\n\n\n\n## Usage with JavaScript\n\nThis is a sample code for on hover effect with JavaScript.\nFirst, Include the class  and then a desired animation class.\n\n\nIf you want to load the animation after certain time, you can use this example:\n\n\nIf you want to load the animation after certain time but with an infinite loop, you can use this example:\n\n\n## Usage with jQuery\n\nThis is a sample code for on hover effect with jQuery.\nFirst, Include the class  and then the desired animation class.\n\n\nIf you want to load the animation after certain time, you can use this example:\n\n\nIf you want to load the animation after certain time but with infinite loop, you can use this example:\n\n## HTML & CSS tips\n\nYou can change the time of the animation by setting the class  for example:\n\n\nDefault CSS timing is:\n\n\nIf you want to assign the timing to a specific animation, you can use the following code (use 2 class):\n\n\n## Animation Classes\n\n| MAGIC EFFECTS | BLING     | STATIC EFFECTS      | STATIC EFFECTS OUT | PERSPECTIVE            | ROTATE      |\n|---------------|-----------|---------------------|--------------------|------------------------|-------------|\n| magic         | puffIn    | openDownLeft        | openDownLeftOut    | perspectiveDown        | rotateDown  |\n| twisterInDown | puffOut   | openDownRight       | openDownRightOut   | perspectiveUp          | rotateUp    |\n| twisterInUp   | vanishIn  | openUpLeft          | openUpLeftOut      | perspectiveLeft        | rotateLeft  |\n| swap          | vanishOut | openUpRight         | openUpRightOut     | perspectiveRight       | rotateRight |\n|               |           | openDownLeftReturn  |                    | perspectiveDownReturn  |             |\n|               |           | openDownRightReturn |                    | perspectiveUpReturn    |             |\n|               |           | openUpLeftReturn    |                    | perspectiveLeftReturn  |             |\n|               |           | openUpRightReturn   |                    | perspectiveRightReturn |             |\n\n\n| SLIDE            | MATH      | TIN         | BOMB         | BOING        | ON THE SPACE  |\n|------------------|-----------|-------------|--------------|--------------|---------------|\n| slideDown        | swashOut  | tinRightOut | bombRightOut | boingInUp    | spaceOutUp    |\n| slideUp          | swashIn   | tinLeftOut  | bombLeftOut  | boingOutDown | spaceOutRight |\n| slideLeft        | foolishIn | tinUpOut    |              |              | spaceOutDown  |\n| slideRight       | holeOut   | tinDownOut  |              |              | spaceOutLeft  |\n| slideDownReturn  |           | tinRightIn  |              |              | spaceInUp     |\n| slideUpReturn    |           | tinLeftIn   |              |              | spaceInRight  |\n| slideLeftReturn  |           | tinUpIn     |              |              | spaceInDown   |\n| slideRightReturn |           | tinDownIn   |              |              | spaceInLeft   |\n\n:tada: Gulp and SCSS (SASS) compiling\n---------------\n\nIf you want to customize the CSS files, now you will have the chance. For example, if you want to include only certain animations, you will have to go to this file:\n\n\n\nComment or uncomment your desired file and run from terminal the following commands:\n\n\n\nand last command:\n\n\n\nAutomatically this generate the new files!\n\n\n:white_check_mark: Browser Support\n---------------\n\nBrowser | Chrome | Firefox | Safari | iOS Safari | Opera | Android | Android Chrome | IE | Opera Mini\n--- | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---: | :---:\nVersion | 31+ | 31+ | 7+ | 7.1+ | 27+ | 4.1+ | 42+ | 10+ | :x:\n'",CSS3 Animations with special effects
14,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
14,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
14,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
14,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
14,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
14,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
14,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
14,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
14,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
14,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
14,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
14,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
14,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
14,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
14,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
14,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
14,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
14,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
14,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
14,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
14,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
14,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
14,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
14,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
14,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
14,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
14,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
14,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
14,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
14,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
14,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
14,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
14,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
14,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
14,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
14,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
14,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
14,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
14,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
14,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
14,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
14,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
14,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
14,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
14,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
14,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
14,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
14,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
14,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
14,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
14,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
14,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
14,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
14,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
14,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
14,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
14,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
14,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
14,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
14,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
14,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
14,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
14,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
14,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
14,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
14,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
14,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
14,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
14,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
14,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
14,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
14,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
14,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
14,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
14,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
14,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
14,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
14,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
14,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
14,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
14,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
14,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
14,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
14,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
14,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
14,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
14,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
14,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
14,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
14,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
14,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
15,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,b'# odsc_hackathon\niPython Notebook for Challenge 1 of ODSC Hackathon\n',iPython Notebook for Challenge 1 of ODSC Hackathon
15,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
15,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
15,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
15,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
15,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
15,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
15,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
15,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
15,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
15,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
15,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
15,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
15,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
15,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
15,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
15,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
15,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
15,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
15,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
15,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
15,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
15,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
15,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
15,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
15,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
15,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
15,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
15,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
15,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
15,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
15,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
15,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
15,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
15,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
15,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
15,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
15,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
15,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
15,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
15,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
15,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
15,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
15,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
15,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
15,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
15,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
15,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
15,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
15,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
15,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
15,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
15,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
15,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
15,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
15,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
15,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
15,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
15,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
15,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
15,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
15,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
15,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
15,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
15,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
15,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
15,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
15,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
15,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
15,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
15,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
15,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
15,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
15,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
15,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
15,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
15,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
15,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
15,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
15,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
15,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
15,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
15,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
15,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
15,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
15,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
15,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
15,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
15,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
15,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
15,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
15,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
16,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b""This project is no longer maintained.\nPlease directly use .\n\n---\n\n# react-hooks-global-state\n\n\n\n\n\n\nSimple global state for React with Hooks API without Context API\n\n## Introduction\n\nThis is a library to provide a global state with React Hooks.\nIt has following characteristics.\n\n*   Optimization for shallow state getter and setter.\n    *   The library cares the state object only one-level deep.\n*   TypeScript type definitions\n    *   A creator function creates hooks with types inferred.\n*   Redux middleware support to some extent\n    *   Some of libraries in Redux ecosystem can be used.\n\n## Install\n\n\n\n## Usage\n\n### setState style\n\n\n\n### reducer style\n\n\n\n## API\n\n\n\n### createGlobalState\n\nCreate a global state.\n\nIt returns a set of functions\n\n*   : a custom hook works like React.useState\n*   : a function to get a global state by key outside React\n*   : a function to set a global state by key outside React\n*   : a function that subscribes to state changes\n\n#### Parameters\n\n*    State \n\n#### Examples\n\n\n\n### createStore\n\nCreate a global store.\n\nIt returns a set of functions\n\n*   : a custom hook to read store state by key\n*   : a function to get store state by key outside React\n*   : a function to dispatch an action to store\n\nA store works somewhat similarly to Redux, but not the same.\n\n#### Parameters\n\n*    Reducer \n*    State  (optional, default )\n*    any? \n\n#### Examples\n\n\n\nReturns Store \n\n### useGlobalState\n\nuseGlobalState created by createStore is deprecated.\n\nType: function (stateKey: StateKey): any\n\nMeta\n\n*   deprecated: useStoreState instead\n\n## Examples\n\nThe  folder contains working examples.\nYou can run one of them with\n\n\n\nand open  in your web browser.\n\nYou can also try them in codesandbox.io:\n\n\n\n\n\n\n\n\n\n\n\n\n\n## Blogs\n\n*   \n*   \n*   \n*   \n*   \n*   \n\n## Community Wiki\n\n*   \n*   \n""",[NOT MAINTAINED] Simple global state for React with Hooks API without Context API
16,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
16,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
16,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
16,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
16,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
16,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
16,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
16,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
16,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
16,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
16,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
16,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
16,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
16,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
16,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
16,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
16,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
16,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
16,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
16,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
16,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
16,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
16,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
16,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
16,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
16,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
16,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
16,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
16,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
16,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
16,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
16,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
16,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
16,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
16,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
16,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
16,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
16,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
16,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
16,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
16,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
16,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
16,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
16,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
16,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
16,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
16,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
16,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
16,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
16,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
16,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
16,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
16,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
16,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
16,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
16,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
16,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
16,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
16,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
16,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
16,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
16,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
16,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
16,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
16,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
16,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
16,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
16,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
16,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
16,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
16,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
16,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
16,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
16,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
16,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
16,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
16,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
16,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
16,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
16,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
16,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
16,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
16,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
16,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
16,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
16,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
16,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
16,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
16,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
16,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
16,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
17,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'\n  <img\n    src=""https://raw.githubusercontent.com/rust-analyzer/rust-analyzer/master/assets/logo-wide.svg""\n    alt=""rust-analyzer logo"">\n\n\nrust-analyzer is a modular compiler frontend for the Rust language.\nIt is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.\n\n## Quick Start\n\nhttps://rust-analyzer.github.io/manual.html#installation\n\n## Documentation\n\nIf you want to contribute to rust-analyzer or are just curious about how\nthings work under the hood, check the  folder.\n\nIf you want to use rust-analyzers language server with your editor of\nchoice, check  folder.\nIt also contains some tips & tricks to help you be more productive when using rust-analyzer.\n\n## Security and Privacy\n\nSee the corresponding sections of .\n\n## Communication\n\nFor usage and troubleshooting requests, please use ""IDEs and Editors"" category of the Rust forum:\n\nhttps://users.rust-lang.org/c/ide/14\n\nFor questions about development and implementation, join rust-analyzer working group on Zulip:\n\nhttps://rust-lang.zulipchat.com/#narrow/stream/185405-t-compiler.2Frust-analyzer\n\n## Quick Links\n\n* Website: https://rust-analyzer.github.io/\n* Metrics: https://rust-analyzer.github.io/metrics/\n* API docs: https://rust-lang.github.io/rust-analyzer/ide/\n* Changelog: https://rust-analyzer.github.io/thisweek\n\n## License\n\nrust-analyzer is primarily distributed under the terms of both the MIT\nlicense and the Apache License (Version 2.0).\n\nSee LICENSE-APACHE and LICENSE-MIT for details.\n'",A Rust compiler front-end for IDEs
17,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
17,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
17,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
17,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
17,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
17,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
17,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
17,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
17,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
17,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
17,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
17,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
17,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
17,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
17,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
17,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
17,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
17,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
17,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
17,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
17,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
17,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
17,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
17,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
17,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
17,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
17,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
17,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
17,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
17,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
17,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
17,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
17,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
17,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
17,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
17,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
17,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
17,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
17,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
17,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
17,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
17,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
17,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
17,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
17,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
17,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
17,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
17,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
17,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
17,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
17,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
17,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
17,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
17,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
17,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
17,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
17,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
17,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
17,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
17,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
17,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
17,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
17,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
17,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
17,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
17,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
17,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
17,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
17,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
17,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
17,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
17,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
17,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
17,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
17,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
17,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
17,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
17,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
17,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
17,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
17,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
17,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
17,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
17,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
17,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
17,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
17,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
17,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
17,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
17,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
17,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
18,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'  \n## Bitcoin\n\n\n\n\n\n\nThis repository contains an implementation of Bitcoin using mostly pure PHP.\n\nWarning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.\n\n## Installation\n\nYou can install this library via Composer: \n\n## Contributing\n\nAll contributions are welcome. Please see [] before you get started\n\n## Documentation\n\n Check out the beginnings of the documentation for the library: []\n\n## Presently supported:\n\n - Blocks, headers, and merkle blocks and bloom filters\n - P2SH & Segregated witness scripts\n - An adaptable elliptic-curve library, using [] by default, or libsecp256k1 if the bindings are found\n - Support for building, parsing, signing/validating transactions\n - Deterministic signatures (RFC6979)\n - BIP32 and electrum (older type I) deterministic key algorithms\n - BIP39, and the older electrum seed format.\n - ScriptFactory for common input/output types, parser, interpreter, and classifiers\n - Supports bindings to libbitcoinconsensus\n - Bindings to Stratum (electrum) servers\n\n# Other projects\n\n -  - Toolkit for working with binary data in PHP\n -  - PHP bindings to libsecp256k1\n -  - PHP bindings to libbitcoinconsensus\n -  - PHP implementation of bitcoin P2P messaging using reactphp\n -  - PHP implementation of the stratum protocol using reactphp\n -  - Electrum server discovery (over IRC) using reactphp\n -  - A toy project (really just for fun) a full node using bitcoin-p2p-php\n -  - A BIP70 (payment requests) implementation for PHP\n\n## Supporters\n\nThis library is a 100% open source project. We do not receive any funding from the industry, nor provide paid support or development of features. That said, we are grateful for our supporters who provide free access for open source projects:\n\n\n\nThanks to  for supporting the project through sponsoring some  within their  program.\n'",Bitcoin implementation in PHP
18,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
18,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
18,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
18,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
18,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
18,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
18,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
18,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
18,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
18,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
18,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
18,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
18,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
18,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
18,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
18,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
18,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
18,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
18,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
18,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
18,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
18,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
18,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
18,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
18,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
18,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
18,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
18,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
18,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
18,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
18,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
18,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
18,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
18,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
18,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
18,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
18,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
18,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
18,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
18,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
18,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
18,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
18,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
18,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
18,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
18,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
18,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
18,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
18,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
18,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
18,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
18,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
18,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
18,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
18,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
18,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
18,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
18,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
18,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
18,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
18,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
18,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
18,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
18,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
18,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
18,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
18,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
18,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
18,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
18,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
18,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
18,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
18,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
18,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
18,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
18,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
18,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
18,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
18,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
18,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
18,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
18,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
18,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
18,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
18,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
18,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
18,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
18,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
18,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
18,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
18,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
19,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b' \n\n# Phoenix Pull-to-Refresh\n\n#### This project aims to provide a simple and customizable pull to refresh implementation. Made in [Yalantis] (https://yalantis.com/?utm_source=github)\n\nCheck this [project on Dribbble] (https://dribbble.com/shots/1650317-Pull-to-Refresh-Rentals)  \nCheck this [project on Behance] (https://www.behance.net/gallery/20411445/Mobile-Animations-Interactions)  \n\n\n\n#Usage\n\nFor a working implementation, Have a look at the Sample Project - sample\n\n1. Include the library as local library project.\n\n    \n\n2. Include the PullToRefreshView widget in your layout.\n\n\t\n\n3. In your  method refer to the View and setup OnRefreshListener.\n\t\n\n#Customization\n\nTo customize drawables you can change:\n   * sun.png - Sun image\n   * sky.png - background image\n   * buildings.png - foreground image\n\n# Misc\nIf you need to change progress state:\n\n#Compatibility\n  \n  * Android GINGERBREAD 2.3+\n  \n# Changelog\n\n### Version: 1.2\n\n  * Sample updated with RecyclerView example\n  * Showing the refresh view just in its bounds. (Issue with transparent / empty ListView)\n  * Possibility to set refresh view padding\n\n### Version: 1.0\n\n  * Initial Build\n\n#### Let us know!\n\nWe\xe2\x80\x99d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com And do let us know if you have any questions or suggestion regarding the animation. \n\nP.S. We\xe2\x80\x99re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!\n\n## License\n\n    Copyright 2017, Yalantis\n\n    Licensed under the Apache License, Version 2.0 (the ""License"");\n    you may not use this file except in compliance with the License.\n    You may obtain a copy of the License at\n\n       http://www.apache.org/licenses/LICENSE-2.0\n\n    Unless required by applicable law or agreed to in writing, software\n    distributed under the License is distributed on an ""AS IS"" BASIS,\n    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n    See the License for the specific language governing permissions and\n    limitations under the License.\n'",Phoenix Pull-to-Refresh
19,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
19,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
19,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
19,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
19,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
19,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
19,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
19,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
19,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
19,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
19,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
19,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
19,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
19,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
19,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
19,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
19,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
19,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
19,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
19,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
19,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
19,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
19,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
19,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
19,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
19,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
19,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
19,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
19,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
19,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
19,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
19,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
19,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
19,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
19,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
19,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
19,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
19,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
19,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
19,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
19,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
19,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
19,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
19,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
19,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
19,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
19,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
19,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
19,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
19,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
19,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
19,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
19,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
19,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
19,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
19,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
19,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
19,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
19,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
19,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
19,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
19,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
19,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
19,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
19,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
19,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
19,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
19,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
19,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
19,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
19,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
19,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
19,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
19,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
19,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
19,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
19,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
19,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
19,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
19,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
19,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
19,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
19,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
19,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
19,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
19,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
19,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
19,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
19,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
19,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
19,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
20,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post, . In summary:\n\n- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally\n- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation\n- In time we hope to be able to open source the new text editor we are working on\n\n# Scribe\n\nA rich text editor framework for the web platform, with patches for\nbrowser inconsistencies and sensible defaults.\n\n## Status\n\n   \n\n## Description\n\nFor an introduction, you may want to read the blog post .\n\nPlease note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.\n\nYou can join us on IRC at [#scribejs] on freenode, or via the .\n\n[See an example][example].\n\nScribe only actively supports a .\n\n## Core\n\nAt the core of Scribe we have:\n\n* ;\n* .\n\n### Patches\n\nScribe patches [many browser inconsistencies][browser inconsistencies] in the [native command API][Executing Commands].\n\n## Installation\n\n\nAlternatively, you can .\n\n## Usage Example\n\nScribe is an AMD module:\n\n\n\nYou can [see a live example here][example], or .\n\nAlso be sure to check the  directory for an\nAMD syntax example as well as a CommonJS (browserify) example.\n\n## Options\n\n\n  allowBlockElements\n  Enable/disable block element mode (enabled by default)\n  undo: { enabled: false }\n  Enable/disable Scribes custom undo manager\n  defaultCommandPatches\n  Defines which command patches should be loaded by default\n  defaultPlugins\n  Defines which of Scribes built-in plugins should be active\n  defaultFormatters\n  Defines which of Scribes default formatters should be active\n\n\nFor detailed documentation see the .\n\n## Architecture\n\n* .\n* No runtime dependencies.\n\nA plugin is simply a function that receives Scribe as an argument:\n\n\n\nA consumer can then use your plugin with :\n\n\n\nPlugins may package whatever functionality you desire, and you are free to use\nnative APIs to do so. However, you are required to wrap any DOM manipulation in\na transaction, so that we can capture state changes for the history. For\nexample:\n\n\n\n### Browser Support\n\n\n\n## Plugins\n\nScribe has a rich plugin ecosystem that expands and customises what it can do.\n\nSee the wiki for a \n\n## FAQ\n\nSee the wikis \n\n[browser inconsistencies]: https://github.com/guardian/scribe/blob/master/BROWSERINCONSISTENCIES.md\n[Executing Commands]: https://developer.mozilla.org/en-US/docs/Rich-Text_Editing_in_Mozilla#Executing_Commands\n[Range API]: https://developer.mozilla.org/en-US/docs/Web/API/Range\n[Selection API]: https://developer.mozilla.org/en-US/docs/Web/API/Selection\n[example]: http://guardian.github.io/scribe\n'",DEPRECATED: A rich text editor framework for the web platform
20,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
20,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
20,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
20,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
20,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
20,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
20,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
20,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
20,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
20,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
20,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
20,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
20,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
20,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
20,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
20,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
20,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
20,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
20,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
20,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
20,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
20,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
20,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
20,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
20,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
20,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
20,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
20,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
20,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
20,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
20,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
20,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
20,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
20,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
20,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
20,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
20,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
20,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
20,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
20,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
20,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
20,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
20,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
20,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
20,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
20,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
20,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
20,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
20,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
20,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
20,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
20,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
20,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
20,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
20,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
20,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
20,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
20,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
20,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
20,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
20,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
20,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
20,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
20,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
20,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
20,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
20,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
20,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
20,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
20,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
20,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
20,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
20,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
20,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
20,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
20,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
20,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
20,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
20,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
20,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
20,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
20,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
20,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
20,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
20,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
20,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
20,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
20,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
20,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
20,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
20,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
21,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'\n\n    Scoop\n\n\nFeatures\n|\nInstallation\n|\nDocumentation\n\n\n- - -\n\n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n    \n        \n    \n\n\nScoop is a command-line installer for Windows.\n\n## What does Scoop do?\n\nScoop installs programs from the command line with a minimal amount of friction. It:\n\n- Eliminates permission popup windows\n- Hides GUI wizard-style installers\n- Prevents PATH pollution from installing lots of programs\n- Avoids unexpected side-effects from installing and uninstalling programs\n- Finds and installs dependencies automatically\n- Performs all the extra setup steps itself to get a working program\n\nScoop is very scriptable, so you can run repeatable setups to get your environment just the way you like, e.g.:\n\n\n\nIf youve built software that youd like others to use, Scoop is an alternative to building an installer (e.g. MSI or InnoSetup) \xe2\x80\x94 you just need to zip your program and provide a JSON manifest that describes how to install it.\n\n## Installation\n\nRun the following command from a non-admin PowerShell to install scoop to its default location .\n\n\n\nAdvanced installation instruction and full documentation of the installer are available in . Please create new issues there if you have questions about the installation.\n\n## \n\n## Multi-connection downloads with \n\nScoop can utilize  to use multi-connection downloads. Simply install  through Scoop and it will be used for all downloads afterward.\n\n\n\nBy default,  displays a warning when running  or  while  is enabled. This warning can be suppressed by running .\n\nYou can tweak the following  settings with the  command:\n\n- aria2-enabled (default: true)\n- aria2-warning-enabled (default: true)\n-  (default: 2)\n-  (default: 5)\n-  (default: 5)\n-  (default: 5M)\n-  (default: )\n\n## Inspiration\n\n- \n- \n\n## What sort of apps can Scoop install?\n\nThe apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and dont have side-effects like changing the registry or putting files outside the program directory.\n\nSince installers are common, Scoop supports them too (and their uninstallers).\n\nScoop is also great at handling single-file programs and Powershell scripts. These dont even need to be compressed. See the  package for an example: its really just a GitHub gist.\n\n### Contribute to this project\n\nIf youd like to improve Scoop by adding features or fixing bugs, please read our .\n\n### Support this project\n\nIf you find Scoop useful and would like to support ongoing development and maintenance, heres how:\n\n-  (one-time donation)\n\n## Known application buckets\n\nThe following buckets are known to scoop:\n\n-  - Default bucket for the most common (mostly CLI) apps\n-  - Apps that dont fit the main buckets \n-  - Open source/freeware games and game-related tools\n-  -  Nerd Fonts\n-  - Almost all of the  apps from \n-  - Sysinternals Suite and all individual application from \n-  - A collection of Java development kits (JDKs), Java runtime engines (JREs), Javas virtual machine debugging tools and Java based runtime engines.\n-  - Non-portable apps (may require UAC)\n-  - Installers for most versions of PHP\n-  - Alternative versions of apps found in other buckets\n\nThe main bucket is installed by default. To add any of the other buckets, type:\n\n\n\nFor example, to add the extras bucket, type:\n\n\n\n## Other application buckets\n\nMany other application buckets hosted on Github can be found in the  or via .\n'",A command-line installer for Windows.
21,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
21,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
21,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
21,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
21,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
21,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
21,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
21,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
21,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
21,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
21,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
21,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
21,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
21,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
21,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
21,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
21,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
21,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
21,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
21,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
21,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
21,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
21,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
21,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
21,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
21,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
21,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
21,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
21,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
21,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
21,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
21,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
21,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
21,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
21,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
21,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
21,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
21,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
21,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
21,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
21,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
21,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
21,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
21,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
21,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
21,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
21,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
21,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
21,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
21,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
21,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
21,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
21,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
21,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
21,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
21,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
21,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
21,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
21,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
21,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
21,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
21,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
21,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
21,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
21,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
21,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
21,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
21,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
21,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
21,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
21,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
21,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
21,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
21,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
21,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
21,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
21,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
21,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
21,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
21,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
21,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
21,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
21,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
21,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
21,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
21,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
21,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
21,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
21,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
21,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
21,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
22,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'#### DEPRECATED - This package is no longer supporter or maintained.\n\n\n\n\n\nChromium-based cross-platform / cross-language application framework\n\nThrust is \n\nThrust is based on Chromiums Content Module and is supported on Linux, MacOSX and Windows:\n\n\nScreenshot of Thrust Getting Started example running on each major platform.\n\nTo better understand what Thrust can do, check out [<marko.inline.RawText object at 0x000001F253B86AD0>] by \n@morganrallen, the cross-platform browser that fits in a gist:\n\n\n#### Table of Contents\n- \n  - \n  - \n  - \n  - \n  - \n  - \n- \n- \n- \n  - \n  - \n  - \n  - \n- \n- \n\n***\n## Language bindings\n\nThrusts binary distribution exposes its API on the standard IO and language\n specific library packages automatically download the binary distribution at \ninstallation. Thrust is based on Chromiums content module and uses web-pages \nas its GUI.\n\nAll these Getting Started example work as is on each major platform (MacOSX,\nWindows, Linux)\n\n### NodeJS\n##### Getting Started\n\nFirst install with \n\n\n\n##### Library\n\n- node-thrust \n\n### Go\n\n##### Getting Started\n\nFirst download with \n\n\npackage main\n\nimport (\n\t""github.com/miketheprogrammer/go-thrust/lib/dispatcher""\n\t""github.com/miketheprogrammer/go-thrust/lib/spawn""\n\t""github.com/miketheprogrammer/go-thrust/lib/bindings/window""\n\t""github.com/miketheprogrammer/go-thrust/lib/commands""\n)\n\nfunc main() {\n\tspawn.Run()\n\tsize := commands.SizeHW{}\n\topts := window.Options{\n\t\tRootUrl:  ""http://google.com"",\n\t\tSize:     size,\n\t\tTitle:    ""Demo window"",\n\t\tHasFrame: true,\n\t}\n\tthrustWindow := window.NewWindow(opts)\n\tthrustWindow.Show()\n\tthrustWindow.Maximize()\n\tthrustWindow.Focus()\n\tdispatcher.RunLoop()\n}\n\n##### Library\n\n- go-thrust: \n\n### Python\n\n##### Getting Started\n\nFirst install with  (requires Python3)\n\n\n\n##### Library\n\n- pythrust \n\n### Scala\n\n##### Getting Started\n\nInclude scala-thrust jar on your classpath. (Add to lib in your project.)\n\n\n\n##### Library\n\n- scala-thrust \n\n### Clojure\n\n##### Getting Started\n\n- \n- \n\n\n\n##### Library\n\n- clj-thrust \n\n### Perl\n\n##### Getting Started\n\nInstall with \n\nSimple command line test:\n\n\n\nBasic program\n\n\n\n##### Library\n\n- \n- \n\n\n***\n## API Reference\n\nThe API reference as well as links to specific language bindings documentations \nare availble in the \n directory.\n\n***\n## Architecture\n\n\n\n***\n## Community\n\n##### Request for API\n\n- List of API needed by various projects on Thrust: \n\n\n##### List of Thrust Users \n\n- List of people relying on Thrust: \n\n\n##### Getting Involved\nNo longer maintained actively.\n\n***\n## Features & Roadmap\n\n- [x] window creation create, show, close resize, minimize, maximize, ...\n- [x] node.js, go node.js and go bindings libraries\n- [x] window events close, blur, focus, unresponsive, crashed\n- [x] cross-platform equivalent support on ,  and \n- [x] sessions off the record, custom storage path, custom cookie store\n- [x] kiosk kiosk mode\n- [x] application menu global application menu (MacOSX, X11/Unity)\n- [x] webview webview tag (secure navigation, tabs management)\n- [x] frameless frameless window and draggable regions\n- [x] python python bindings library\n- [x] remote thrust specific IPC mechanism for client/server communication\n- [x] proxy enable traffic proxying (Tor, header injection, ...)\n- [ ] tray icon tray icon native integration\n- [ ] protocol specific protocol registration (, ...)\n\n***\n## Building Thrust from Sources\n\nYou will generally dont need to build thrust yourself. A binary version of \nthrust should be automatically fetched by the library youre reyling on at \ninstallation.\n\nTo build thrust, youll need to have  and  installed. You can \nthen boostrap the project with:\n\n\nBuild both the  and  targets with the following commands:\n\n\nNote that  may take some time as it checks out  and\ndownloads  for your platform.\n\n'",Chromium-based cross-platform / cross-language application framework
22,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
22,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
22,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
22,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
22,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
22,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
22,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
22,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
22,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
22,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
22,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
22,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
22,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
22,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
22,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
22,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
22,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
22,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
22,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
22,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
22,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
22,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
22,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
22,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
22,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
22,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
22,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
22,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
22,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
22,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
22,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
22,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
22,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
22,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
22,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
22,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
22,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
22,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
22,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
22,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
22,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
22,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
22,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
22,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
22,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
22,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
22,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
22,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
22,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
22,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
22,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
22,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
22,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
22,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
22,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
22,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
22,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
22,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
22,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
22,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
22,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
22,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
22,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
22,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
22,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
22,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
22,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
22,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
22,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
22,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
22,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
22,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
22,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
22,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
22,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
22,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
22,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
22,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
22,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
22,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
22,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
22,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
22,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
22,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
22,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
22,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
22,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
22,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
22,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
22,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
22,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
23,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b""|logo|\n\nA full-featured, hackable tiling window manager written and configured in Python\n\n|website| |pypi| |ci| |rtd| |license| |black| |coverage|\n\nFeatures\n========\n\n* Simple, small and extensible. It's easy to write your own layouts,\n  widgets and commands.\n* Configured in Python.\n* Runs as an X11 WM or a Wayland compositor.\n* Command shell that allows all aspects of Qtile to be managed and\n  inspected.\n* Complete remote scriptability - write scripts to set up workspaces,\n  manipulate windows, update status bar widgets and more.\n* Qtile's remote scriptability makes it one of the most thoroughly\n  unit-tested window managers around.\n\nCommunity\n=========\n\nQtile is supported by a dedicated group of users. If you need any help, please\ndon't hesitate to fire off an email to our mailing list or join us on IRC. You\ncan also ask questions on the discussions board.\n\n:Mailing List: https://groups.google.com/group/qtile-dev\n:Q&A: https://github.com/qtile/qtile/discussions/categories/q-a\n:IRC: irc://irc.oftc.net:6667/qtile\n:Discord: https://discord.gg/ehh233wCrC (Bridged with IRC)\n\nExample code\n============\n\nCheck out the _ repo which contains examples of users' configurations,\nscripts and other useful links.\n\n.. qtile-examples. There are also a few ,\nand  for contributing in the documentation.\n\nPlease also consider submitting useful scripts etc. to the qtile-examples repo\n(see above).\n\n.. issue tracker GPG: \n| _ GPG: \n| _ GPG: \n| _ GPG: \n\n.. _: https://github.com/tych0\n.. _: https://github.com/ramnes\n.. _: https://github.com/m-col\n.. _: https://github.com/flacjacket\n.. _: https://github.com/elparaguayo\n.. _: https://github.com/jwijenbergh\n""",":cookie: A full-featured, hackable tiling window manager written and configured in Python (X11 + Wayland)"
23,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
23,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
23,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
23,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
23,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
23,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
23,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
23,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
23,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
23,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
23,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
23,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
23,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
23,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
23,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
23,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
23,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
23,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
23,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
23,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
23,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
23,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
23,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
23,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
23,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
23,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
23,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
23,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
23,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
23,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
23,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
23,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
23,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
23,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
23,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
23,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
23,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
23,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
23,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
23,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
23,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
23,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
23,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
23,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
23,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
23,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
23,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
23,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
23,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
23,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
23,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
23,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
23,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
23,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
23,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
23,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
23,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
23,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
23,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
23,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
23,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
23,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
23,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
23,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
23,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
23,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
23,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
23,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
23,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
23,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
23,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
23,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
23,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
23,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
23,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
23,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
23,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
23,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
23,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
23,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
23,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
23,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
23,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
23,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
23,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
23,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
23,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
23,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
23,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
23,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
23,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
24,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'\n\n\n\n\n\n\n## Latest Release (2023/10/10)\n\nWere happy to announce the release of Pinpoint v2.5.3.\nPlease check the release note at (https://github.com/pinpoint-apm/pinpoint/releases/tag/v2.5.3).\n\nThe current stable version is .\n\n## Live Demo\n\nTake a quick look at Pinpoint with our !\n\n## PHP, PYTHON\n\nPinpoint also supports application written in PHP, Python. .\n\n## About Pinpoint\n\nPinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java / /.\nInspired by ,\nPinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.\n\nYou should definitely check Pinpoint out If you want to\n\n* understand your [<marko.inline.RawText object at 0x000001F253E7D590>] at a glance\n* monitor your application in Real-Time\n* gain code-level visibility to every transaction\n* install APM Agents without changing a single line of code\n* have minimal impact on the performance (approximately 3% increase in resource usage)\n\n## Getting Started\n *  for simple test run of Pinpoint\n *  for further instructions.\n \n## Overview\nServices nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a blackbox. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.\nFor a more intimate guide, please check out our [<marko.inline.RawText object at 0x000001F253E7E710>] video clip.\n\n* ServerMap - Understand the topology of any distributed systems by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status, and transaction count.\n* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.\n* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.\n\n  \n\n* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.\n\n  \n\n* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.\n\n  \n\n* URI-metric\n  \n\n* Infrastructure\n  \n\n## Supported Modules\n* JDK 8+\n* , , , , , , , , \n* ,  (, , , ), \n* Apache HttpClient  /  / , , , , \n* , , , \n* , , , , \n* , , , , , , , , \n* , , Redis(, , ), , , , \n* , \n* , , , \n* , , , \n* , , \n* , \n\n## Compatibility\n\nJava version required to run Pinpoint:\n<!-- <compatibilityJava.md> -->\n| Pinpoint Version | Agent | Collector | Web | Flink |\n|------------------|-------|-----------|-----|-------|\n| 2.0.x            | 6-13  | 8         | 8   | 8     |\n| 2.1.x            | 6-14  | 8         | 8   | 8     |\n| 2.2.x            | 7-14  | 8         | 8   | 8     |\n| 2.3.x            | 7-17  | 8         | 8   | 8     |\n| 2.4.x            | 7-18  | 11        | 11  | 11    |\n| 2.5.x            | 8-19  | 11        | 11  | 11    |\n| 3.0.x            | 8-21  | 17        | 17  | 17    |\n\n<!-- </compatibilityJava.md> -->\nHBase compatibility table:\n<!-- <compatibilityHbase.md> -->\n| Pinpoint Version | HBase 1.x | HBase 2.x                                                                                                             |\n|------------------|-----------|-----------------------------------------------------------------------------------------------------------------------|\n| 2.0.x            | yes       |  |\n| 2.1.x            | yes       |  |\n| 2.2.x            | yes       |  |\n| 2.3.x            | yes       |                                     |\n| 2.4.x            | yes       |                                     |\n| 2.5.x            | yes       |                                     |\n| 3.0.x            | no         | yes                                    |\n\n<!-- </compatibilityHbase.md> -->\nAgent - Collector compatibility table:\n<!-- <compatibilityPinpoint.md> -->\n| Agent Version | Collector 2.0.x | Collector 2.1.x | Collector 2.2.x | Collector 2.3.x | Collector 2.4.x | Collector 2.5.x | Collector 3.0.x |\n|---------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------|-----------------|\n| 2.0.x         | yes             | yes             | yes             | yes             | yes             | yes             | yes             |\n| 2.1.x         | no              | yes             | yes             | yes             | yes             | yes             | yes             |\n| 2.2.x         | no              | no              | yes             | yes             | yes             | yes             | yes             |\n| 2.3.x         | no              | no              | no              | yes             | yes             | yes             | yes             |\n| 2.4.x         | no              | no              | no              | no              | yes             | yes             | yes             |\n| 2.5.x         | no              | no              | no              | no              | no              | yes             | yes             |\n| 3.0.x         | no              | no              | no              | no              | no              | no              | yes             |\n\n<!-- </compatibilityPinpoint.md> -->\nFlink compatibility table:\n<!-- <compatibilityFlink.md> -->\n| Pinpoint Version | Flink 1.3.X | Flink 1.4.X | Flink 1.5.X | Flink 1.6.X | Flink 1.7.X | Flink 1.14.X |\n|------------------|-------------|-------------|-------------|-------------|-------------|--------------|\n| 2.0.x            | yes         | yes         | yes         | yes         | yes         | no           |\n| 2.1.x            | yes         | yes         | yes         | yes         | yes         | no           |\n| 2.2.x            | yes         | yes         | yes         | yes         | yes         | no           |\n| 2.3.x            | yes         | yes         | yes         | yes         | yes         | no           |\n| 2.4.x            | yes         | yes         | yes         | yes         | yes         | yes          |\n| 2.5.x            | yes         | yes         | yes         | yes         | yes         | yes          |\n<!-- </compatibilityFlink.md> -->\nPinot compatibility table:\n<!-- <compatibilityPinot.md> -->\n| Pinpoint Version | Pinot 0.11.0 | Pinot 0.12.0 | Pinot 1.0.0    |\n|------------------|--------------|--------------|----------------|\n| 2.5.x            | yes          | yes          | yes            |\n| 3.0.x            | no           | no           | yes            | \n\n\n## Community\n\n  \n  \n  \n\nWe have Chinese community now, welcome to join!\n\n\n   \xf0\x9f\x91\x86 click me\n\n\nQQ Group1: 897594820 | QQ Group2: 812507584 | QQ Group3: 882020485| DING Group : 21981598\n:----------------: |:----------------: | :-----------: | :-----------: \n | | | \n\n\n\n## License\nPinpoint is licensed under the Apache License, Version 2.0.\nSee  for full license text.\n\n\n\n'","APM, (Application Performance Management) tool for large-scale distributed systems. "
24,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
24,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
24,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
24,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
24,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
24,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
24,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
24,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
24,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
24,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
24,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
24,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
24,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
24,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
24,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
24,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
24,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
24,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
24,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
24,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
24,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
24,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
24,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
24,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
24,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
24,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
24,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
24,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
24,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
24,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
24,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
24,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
24,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
24,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
24,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
24,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
24,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
24,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
24,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
24,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
24,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
24,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
24,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
24,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
24,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
24,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
24,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
24,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
24,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
24,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
24,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
24,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
24,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
24,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
24,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
24,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
24,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
24,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
24,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
24,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
24,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
24,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
24,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
24,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
24,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
24,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
24,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
24,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
24,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
24,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
24,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
24,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
24,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
24,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
24,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
24,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
24,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
24,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
24,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
24,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
24,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
24,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
24,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
24,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
24,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
24,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
24,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
24,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
24,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
24,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
24,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
25,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'# etcd\n\n\n\n\n\n\n\n\n\n\n\nNote: The  branch may be in an unstable or even broken state during development. For stable versions, see [releases][github-release].\n\n\n\netcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:\n\n* Simple: well-defined, user-facing API (gRPC)\n* Secure: automatic TLS with optional client cert authentication\n* Fast: benchmarked 10,000 writes/sec\n* Reliable: properly distributed using Raft\n\netcd is written in Go and uses the [Raft][] consensus algorithm to manage a highly-available replicated log.\n\netcd is used , and the development team stands behind it in critical deployment scenarios, where etcd is frequently teamed with applications such as [Kubernetes][k8s], [locksmith][], [vulcand][], [Doorman][], and many others. Reliability is further ensured by rigorous .\n\nSee [etcdctl][etcdctl] for a simple command line client.\n\n\n\nOriginal image credited to  xkcd.com/2347, alterations by Josh Berkus.\n\n[raft]: https://raft.github.io/\n[k8s]: http://kubernetes.io/\n[doorman]: https://github.com/youtube/doorman\n[locksmith]: https://github.com/coreos/locksmith\n[vulcand]: https://github.com/vulcand/vulcand\n[etcdctl]: https://github.com/etcd-io/etcd/tree/main/etcdctl\n\n## Maintainers\n\n strive to shape an inclusive open source project culture where users are heard and contributors feel respected and empowered. Maintainers aim to build productive relationships across different companies and disciplines. Read more about .\n\n## Getting started\n\n### Getting etcd\n\nThe easiest way to get etcd is to use one of the pre-built release binaries which are available for OSX, Linux, Windows, and Docker on the [release page][github-release].\n\nFor more installation guides, please check out  and .\n\n[github-release]: https://github.com/etcd-io/etcd/releases\n\n### Running etcd\n\nFirst start a single-member cluster of etcd.\n\nIf etcd is installed using the [pre-built release binaries][github-release], run it from the installation location as below:\n\n\n\nThe etcd command can be simply run as such if it is moved to the system path as below:\n\n\n\nThis will bring up etcd listening on port 2379 for client communication and on port 2380 for server-to-server communication.\n\nNext, lets set a single key, and then retrieve it:\n\n\n\netcd is now running and serving client requests. For more, please check out:\n\n* \n* \n\n### etcd TCP ports\n\nThe [official etcd ports][iana-ports] are 2379 for client requests, and 2380 for peer communication.\n\n[iana-ports]: http://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.txt\n\n### Running a local etcd cluster\n\nFirst install , which manages Procfile-based applications.\n\nOur  will set up a local example cluster. Start it with:\n\n\n\nThis will bring up 3 etcd members ,  and  and optionally etcd , which runs locally and composes a cluster.\n\nEvery cluster member and proxy accepts key value reads and key value writes.\n\nFollow the comments in  to add a learner node to the cluster.\n\n### Install etcd client v3\n\n\n\n### Next steps\n\nNow its time to dig into the full etcd API and other guides.\n\n* Read the full [documentation].\n* Review etcd [frequently asked questions].\n* Explore the full gRPC [API].\n* Set up a [multi-machine cluster][clustering].\n* Learn the [config format, env variables and flags][configuration].\n* Find [language bindings and tools][integrations].\n* Use TLS to [secure an etcd cluster][security].\n* [Tune etcd][tuning].\n\n[documentation]: https://etcd.io/docs/latest\n[api]: https://etcd.io/docs/latest/learning/api\n[clustering]: https://etcd.io/docs/latest/op-guide/clustering\n[configuration]: https://etcd.io/docs/latest/op-guide/configuration\n[integrations]: https://etcd.io/docs/latest/integrations\n[security]: https://etcd.io/docs/latest/op-guide/security\n[tuning]: https://etcd.io/docs/latest/tuning\n\n## Contact\n\n* Email: \n* Slack:  channel on Kubernetes ()\n* \n\n### Community meetings\n\netcd contributors and maintainers meet every week at 11:00 AM (USA Pacific) on Thursday and meetings alternate between community meetings and issue triage meetings. An initial agenda will be posted to the [shared Google docs][shared-meeting-notes] a day before each meeting, and everyone is welcome to suggest additional topics or other agendas. \n\nIssue triage meetings are aimed at getting through our backlog of PRs and Issues. Triage meetings are open to any contributor; you dont have to be a reviewer or approver to help out! They can also be a good way to get started contributing.\n\nMeeting recordings are uploaded to official etcd [YouTube channel].\n\nGet calendar invitation by joining  mailing group.\n\nJoin CNCF-funded Zoom channel: \n\n[shared-meeting-notes]: https://docs.google.com/document/d/16XEGyPBisZvmmoIHSZzv__LoyOeluC5a4x353CX0SIM/edit\n[YouTube channel]: https://www.youtube.com/channel/UC7tUWR24I5AR9NMsG-NYBlg\n\n## Contributing\n\nSee  for details on setting up your development environment, submitting patches and the contribution workflow.\n\nPlease refer to  for information on becoming an etcd project member.  We welcome and look forward to your contributions to the project!\n\nPlease also refer to  to get more details on the priorities for the next few major or minor releases.\n\n## Reporting bugs\n\nSee  for details about reporting any issues. Before opening an issue please check it is not covered in our [frequently asked questions].\n\n[frequently asked questions]: https://etcd.io/docs/latest/faq\n\n## Reporting a security vulnerability\n\nSee  for details on how to report a security vulnerability and how the etcd team manages it.\n\n## Issue and PR management\n\nSee  for details on how issues are managed.\n\nSee  for guidelines on how pull requests are managed.\n\n## etcd Emeritus Maintainers\n\nThese emeritus maintainers dedicated a part of their career to etcd and reviewed code, triaged bugs and pushed the project forward over a substantial period of time. Their contribution is greatly appreciated.\n\n* Fanmin Shi\n* Anthony Romano\n* Brandon Philips\n* Joe Betz\n* Gyuho Lee\n* Jingyi Hu\n* Xiang Li\n* Ben Darnell\n* Sam Batschelet\n\n### License\n\netcd is under the Apache 2.0 license. See the  file for details.\n'",Distributed reliable key-value store for the most critical data of a distributed system
25,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
25,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
25,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
25,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
25,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
25,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
25,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
25,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
25,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
25,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
25,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
25,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
25,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
25,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
25,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
25,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
25,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
25,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
25,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
25,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
25,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
25,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
25,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
25,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
25,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
25,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
25,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
25,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
25,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
25,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
25,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
25,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
25,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
25,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
25,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
25,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
25,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
25,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
25,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
25,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
25,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
25,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
25,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
25,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
25,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
25,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
25,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
25,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
25,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
25,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
25,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
25,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
25,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
25,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
25,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
25,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
25,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
25,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
25,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
25,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
25,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
25,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
25,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
25,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
25,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
25,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
25,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
25,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
25,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
25,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
25,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
25,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
25,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
25,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
25,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
25,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
25,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
25,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
25,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
25,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
25,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
25,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
25,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
25,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
25,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
25,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
25,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
25,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
25,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
25,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
25,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
26,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'\n  \n    \n      \n      \n      \n        \n  \n\n\n\n editorjs.io |\n  documentation |\n  changelog\n  \n\n\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n## About\n\nEditor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.\n\nEditor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots \xe2\x80\x94 everywhere. Easy to sanitize, extend and integrate with your logic. \n\n- \xf0\x9f\x98\x8d\xc2\xa0\xc2\xa0Modern UI out of the box\n- \xf0\x9f\x92\x8e\xc2\xa0\xc2\xa0Clean JSON output\n- \xe2\x9a\x99\xef\xb8\x8f\xc2\xa0\xc2\xa0Well-designed API\n- \xf0\x9f\x9b\x8d\xc2\xa0\xc2\xa0Various Tools available\n- \xf0\x9f\x92\x8c\xc2\xa0\xc2\xa0Free and open source\n\n\n  \n   \n\n## Installation\n\nIts quite simple:\n\n1. Install Editor.js \n2. Install tools you need\n3. Initialize Editors instance\n\nInstall using NPM, Yarn, or :\n\n\n\nChoose and install tools:\n\n- \n- \n-  \n-  (without backend requirement)\n- \n- \n- \n-  (YouTube, Twitch, Vimeo, Gfycat, Instagram, Twitter, etc)\n- \n- \n- \n- \n- \n- \n- \n- \n\nSee the  list for more tools.\n\nInitialize the Editor:\n\n\n\njavascript\nconst data = await editor.save()\n```\n\n### Example\n\nTake a look at the  to view more detailed examples.\n\n\n## Roadmap\n\n\n\n- Unified Toolbox\n  - [x] Block Tunes moved left\n  - [x] Toolbox becomes vertical\n  - [x] Ability to display several Toolbox buttons by the single Tool\n  - [x] Block Tunes become vertical\n  - [ ] Block Tunes support nested menus\n  - [ ] Conversion Toolbar uses Unified Toolbox\n  - [ ] Conversion Toolbar added to the Block Tunes\n- Collaborative editing\n  - [ ] Implement Inline Tools JSON format\n  - [ ] Operations Observer, Executor, Manager, Transformer\n  - [ ] Implement Undo/Redo Manager\n  - [ ] Implement Tools API changes\n  - [ ] Implement Server and communication\n  - [ ] Update basic tools to fit the new API\n- Other features\n  - [ ] Blocks dragndrop\n  - [ ] New cross-block selection\n  - [ ] New cross-block caret moving\n- Ecosystem improvements\n  - [x] CodeX Icons \xe2\x80\x94 the way to unify all tools and core icons\n  - [x] New Homepage and Docs\n  - [x] @editorjs/create-tool for Tools bootstrapping\n  - [ ] Editor.js DevTools \xe2\x80\x94 stand for core and tools development\n  - [ ] Editor.js Design System\n  - [ ] Editor.js Preset Env\n  - [ ] Editor.js ToolKit\n  - [ ] New core bundle system\n  - [ ] New documentation and guides\n\n\n  \n    \n    \n    \n  \n\n\n\n\n## Like Editor.js?\n\nYou can support project improvement and development of new features with a donation to our team.\n\n\n\n\n\n\n\n### Why donate\n\nDonations to open-source products have several advantages for your business:\n\n- If your business relies on Editor.js, youll probably want it to be maintained\n- It helps Editor.js to evolve and get the new features\n- We can support contributors and the community around the project. Youll receive well organized docs, guides, etc.\n- We need to pay for our infrastructure and maintain public resources (domain names, homepages, docs, etc). Supporting it guarantees you to access any resources at the time you need them.\n- You can advertise by adding your brand assets and mentions on our public resources\n\n\n### Sponsors\n\nSupport us by becoming a sponsor. Your logo will show up here with a link to your website.\n\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n\n\n\n\n### Backers\n Thank you to all our backers\n\n\n\n\n\n### Contributors\n\nThis project exists thanks to all the people who contribute. \n\n\n\n### Need something special?\n\nHire CodeX experts to resolve technical challenges and match your product requirements. \n\n- Resolve a problem that has high value for you\n- Implement a new feature required by your business\n- Help with integration or tool development\n- Provide any consultation\n\nContact us via team@codex.so and share your details\n\n## Community\n\n- \n- \n- \n- \n- \n\n# About CodeX\n\n\n\nCodeX is a team of digital specialists around the world interested in building high-quality open source products on a global market. We are  for young people who want to constantly improve their skills and grow professionally with experiments in cutting-edge technologies.\n\n| \xf0\x9f\x8c\x90 | Join  \xf0\x9f\x91\x8b  | Twitter | Instagram |\n| -- | -- | -- | -- |\n|  |  | |  |\n'",A block-style editor with clean JSON output
26,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
26,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
26,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
26,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
26,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
26,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
26,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
26,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
26,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
26,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
26,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
26,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
26,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
26,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
26,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
26,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
26,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
26,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
26,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
26,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
26,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
26,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
26,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
26,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
26,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
26,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
26,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
26,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
26,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
26,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
26,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
26,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
26,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
26,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
26,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
26,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
26,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
26,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
26,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
26,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
26,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
26,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
26,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
26,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
26,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
26,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
26,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
26,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
26,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
26,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
26,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
26,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
26,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
26,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
26,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
26,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
26,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
26,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
26,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
26,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
26,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
26,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
26,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
26,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
26,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
26,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
26,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
26,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
26,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
26,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
26,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
26,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
26,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
26,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
26,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
26,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
26,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
26,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
26,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
26,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
26,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
26,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
26,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
26,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
26,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
26,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
26,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
26,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
26,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
26,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
26,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
27,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'## An autocompletion daemon for the Go programming language\n\nIMPORTANT: This project is not maintained anymore, consider using https://pkg.go.dev/golang.org/x/tools/gopls, a tool which provides similar functionality and more, created and maintained by Go team.\n\nGocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim and emacs. It provides several advanced capabilities, which currently includes:\n\n - Context-sensitive autocompletion\n\nIt is called daemon, because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.\n\nAlso watch the .\n\n\n\n\n\n### Setup\n\n 1. You should have a correctly installed Go compiler environment and your personal workspace ($GOPATH). If you have no idea what $GOPATH is, take a look . Please make sure that your $GOPATH/bin is available in your $PATH. This is important, because most editors assume that gocode binary is available in one of the directories, specified by your $PATH environment variable. Otherwise manually copy the gocode binary from $GOPATH/bin to a location which is part of your $PATH after getting it in step 2.\n\n    Do these steps only if you understand why you need to do them:\n\n    \n\n    \n\n 2. Then you need to get the appropriate version of the gocode, for 6g/8g/5g compiler you can do this:\n\n     (-u flag for ""update"")\n\n    Windows users should consider doing this instead:\n\n    \n\n    That way on the Windows OS gocode will be built as a GUI application and doing so solves hanging window issues with some of the editors.\n\n 3. Next steps are editor specific. See below.\n\n### Vim setup\n\n#### Vim manual installation\n\nNote: As of go 1.5 there is no $GOROOT/misc/vim script. Suggested installation is via .\n\nIn order to install vim scripts, you need to fulfill the following steps:\n\n 1. Install official Go vim scripts from $GOROOT/misc/vim. If you did that already, proceed to the step 2.\n\n 2. Install gocode vim scripts. Usually its enough to do the following:\n\n    2.1. \n\n    update.sh script does the following:\n\n\t\t#!/bin/sh\n\t\tmkdir -p ""$HOME/.vim/autoload""\n\t\tmkdir -p ""$HOME/.vim/ftplugin/go""\n\t\tcp ""${0%/}/autoload/gocomplete.vim"" ""$HOME/.vim/autoload""\n\t\tcp ""${0%/}/ftplugin/go/gocomplete.vim"" ""$HOME/.vim/ftplugin/go""\n\n    2.2. Alternatively, you can create symlinks using symlink.sh script in order to avoid running update.sh after every gocode update.\n\n    symlink.sh script does the following:\n\n\t\t#!/bin/sh\n\t\tcd ""${0%/*}""\n\t\tROOTDIR=\n\t\tmkdir -p ""$HOME/.vim/autoload""\n\t\tmkdir -p ""$HOME/.vim/ftplugin/go""\n\t\tln -s ""$ROOTDIR/autoload/gocomplete.vim"" ""$HOME/.vim/autoload/""\n\t\tln -s ""$ROOTDIR/ftplugin/go/gocomplete.vim"" ""$HOME/.vim/ftplugin/go/""\n\n 3. Make sure vim has filetype plugin enabled. Simply add that to your .vimrc:\n\n    \n\n 4. Autocompletion should work now. Use  for autocompletion (omnifunc autocompletion).\n\n#### Using Vundle in Vim\n\nAdd the following line to your .vimrc:\n\n\n\nAnd then update your packages by running .\n\n#### Using vim-plug in Vim\n\nAdd the following line to your .vimrc:\n\n\n\nAnd then update your packages by running .\n\n#### Other\n\nAlternatively take a look at the vundle/pathogen friendly repo: https://github.com/Blackrush/vim-gocode.\n\n### Neovim setup\n#### Neovim manual installation\n\n Neovim users should also follow , except that you should goto  in step 2, and remember that, the Neovim configuration file is .\n\n#### Using Vundle in Neovim\n\nAdd the following line to your init.vim:\n\n\n\nAnd then update your packages by running .\n\n#### Using vim-plug in Neovim\n\nAdd the following line to your init.vim:\n\n\n\nAnd then update your packages by running .\n\n### Emacs setup\n\nIn order to install emacs script, you need to fulfill the following steps:\n\n 1. Install \n\n 2. Copy emacs/go-autocomplete.el file from the gocode source distribution to a directory which is in your load-path in emacs.\n\n 3. Add these lines to your .emacs:\n\n \t\t(require go-autocomplete)\n\t\t(require auto-complete-config)\n\t\t(ac-config-default)\n\nAlso, there is an alternative plugin for emacs using company-mode. See  for installation instructions.\n\nIf youre a MacOSX user, you may find that script useful: https://github.com/purcell/exec-path-from-shell. It helps you with setting up the right environment variables as Go and gocode require it. By default it pulls the PATH, but dont forget to add the GOPATH as well, e.g.:\n\n\n\n### Options\n\nYou can change all available options using  command. The config file uses json format and is usually stored somewhere in ~/.config/gocode directory. On windows its stored in the appropriate AppData folder. Its suggested to avoid modifying config file manually, do that using the  command.\n\n lists all options and their values.\n\n shows the value of that option.\n\n sets the new value for that option.\n\n - propose-builtins\n\n   A boolean option. If true, gocode will add built-in types, functions and constants to autocompletion proposals. Default: false.\n\n - lib-path\n\n   A string option. Allows you to add search paths for packages. By default, gocode only searches **$GOPATH/pkg/$GOOS_$GOARCH** and **$GOROOT/pkg/$GOOS_$GOARCH** in terms of previously existed environment variables. Also you can specify multiple paths using : (colon) as a separator (on Windows use semicolon ;). The paths specified by lib-path are prepended to the default ones.\n\n - autobuild\n\n   A boolean option. If true, gocode will try to automatically build out-of-date packages when their source files are modified, in order to obtain the freshest autocomplete results for them. This feature is experimental. Default: false.\n\n - force-debug-output\n\n   A string option. If is not empty, gocode will forcefully redirect the logging into that file. Also forces enabling of the debug mode on the server side. Default: """" (empty).\n\n - package-lookup-mode\n\n   A string option. If go, use standard Go package lookup rules. If gb, use gb-specific lookup rules. See https://github.com/constabulary/gb for details. Default: go.\n\n - close-timeout\n\n   An integer option. If there have been no completion requests after this number of seconds, the gocode process will terminate. Defaults to 1800 (30 minutes).\n\n - unimported-packages\n\n   A boolean option. If set to true, gocode will try to import certain known packages automatically for identifiers which cannot be resolved otherwise. Currently only a limited set of standard library packages are supported. Default: false.\n\n - partials\n\n   A boolean option. If set to false, gocode will not filter autocompletion results based on entered prefix before the cursor. Instead it will return all available autocompletion results viable for a given context. Whether this option is set to true or false, gocode will return a valid prefix length for output formats which support it. Setting this option to a non-default value may result in editor misbehaviour. Default: true.\n\n - ignore-case\n\n   A boolean option. If set to true, gocode will perform case-insensitive matching when doing prefix-based filtering. Default: false.\n\n - class-filtering\n\n   A boolean option. Enables or disables gocodes feature where it performs class-based filtering if partial input matches corresponding class keyword: const, var, type, func, package. Default: true.\n\n### Debugging\n\nIf something went wrong, the first thing you may want to do is manually start the gocode daemon with a debug mode enabled and in a separate terminal window. It will show you all the stack traces, panics if any and additional info about autocompletion requests. Shutdown the daemon if it was already started and run a new one explicitly with a debug mode enabled:\n\n\n\n\n\nPlease, report bugs, feature suggestions and other rants to the  of this project.\n\n### Developing\n\nThere is .\n\nIf you have troubles, please, contact me and I will try to do my best answering your questions. You can contact me via email. Or for short question find me on IRC: #go-nuts @ freenode.\n\n### Misc\n\n - Its a good idea to use the latest git version always. Im trying to keep it in a working state.\n - Use  (not ) for building a local source tree. The objects in  are needed for Gocode to work.\n'",An autocompletion daemon for the Go programming language
27,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
27,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
27,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
27,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
27,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
27,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
27,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
27,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
27,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
27,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
27,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
27,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
27,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
27,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
27,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
27,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
27,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
27,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
27,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
27,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
27,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
27,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
27,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
27,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
27,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
27,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
27,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
27,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
27,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
27,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
27,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
27,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
27,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
27,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
27,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
27,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
27,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
27,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
27,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
27,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
27,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
27,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
27,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
27,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
27,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
27,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
27,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
27,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
27,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
27,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
27,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
27,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
27,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
27,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
27,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
27,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
27,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
27,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
27,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
27,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
27,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
27,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
27,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
27,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
27,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
27,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
27,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
27,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
27,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
27,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
27,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
27,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
27,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
27,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
27,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
27,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
27,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
27,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
27,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
27,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
27,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
27,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
27,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
27,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
27,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
27,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
27,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
27,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
27,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
27,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
27,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
28,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'# Awesome IPFS \n\nThis is a community list of awesome projects, apps, tools, and services related to IPFS.\n\nTo submit your project, read the , and \n\n## Table of Contents\n\n- \n- \n- \n- \n- \n- \n- \n- \n- \n\n## Implementations\nIPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.\n\nCheck out the list of  in the IPFS docs.\n\n## Apps\n\n-  - A minimal web browser for the distributed web. Supports downloading/uploading data from IPFS using the browsers  API\n-  - Anytype is a no-code, modular web builder designed to give ownership back to creators. Its built on our private, local-first, p2p-synced and open Anysync protocol.\n-  - A High-Fidelity Web Archiving Extension for Chrome and Chromium based browsers with support for IPFS.\n-  - Autonomica is a Keybase-like Dapp for creating an identity and proving this identity via published social media and web proofs.\n-  - File synchronization with git like interface and FUSE filesystem.\n-  - Play music from your IPFS node, or any other cloud/distributed storage service you use.\n-  - Mobile app for accessing and uploading content on the IPFS network.\n-  - Hardbin is an encrypted pastebin, with the decryption key passed in the URL fragment\n-  - Web Archive (WARC) indexing and replay using IPFS.\n-  - Wiki built on top of IPFS\n-  - A simple way to publish uncensorable essays on IPFS.\n-  - IPFS Desktop gives you all the power of IPFS in a convenient desktop app: a complete IPFS node, plus handy OS menubar/taskbar shortcuts and an all-in-one file manager, peer map, and content explorer.\n-  - Terminal-based, encrypted chatrooms. Allows private messaging & secure in-chat file/directory sharing. Server/broker-less (no signaling/rendezvous server needed). Works over LAN/internet(w/ NAT-traversal).\n-  - A completely decentralized first person shooter. Built with Unity, Fleek, Unstoppable Domans and Pinata.\n-  - A censorship resistant deadmans switch\n-  - Mintter\xc2\xa0Hypermedia\xc2\xa0is an\xc2\xa0open system, built on\xc2\xa0IPFS, that allows communities to collaborate on content that is structured and deeply linked. All content in the system is cryptographically signed, versioned, and made permanent with IPFS.\n-  - Ultra simple chatrooms on the web.\n-  - Peer to Peer Web Site hosting at your fingertips! Send full featured HTML (incl. CSS, JS) sites from your browser and attach files eg. videos, images, etc.\n-  - End-to-end encrypted, peer-to-peer file storage and sharing.\n-  - Push to Talk lets you edit audio essays and publish them with IPFS.\n-  - Privacy focused, end-to-end encrypted chat app that runs a private IPFS network over Tor connections. Desktop and mobile iOS and Android apps available.\n-  - Privacy-first, end-to-end encrypted email, file storage, and collaboration platform using IPFS storage.\n\n## Browsers\nA list of web browsers with IPFS integrations\n-  - A minimal web browser for the distributed web. Supports downloading/uploading data from IPFS using the browsers  API\n-  - A privacy-focused browser with many future forward features.\n-  - A multi-platform Qt5-based browser for the distributed web.\n-  - Opera browser added support for  in 2021\n\n## Tools\n\n-  - [EXPERIMENTAL] A lightweight IPFS Gateway daemon backed by a remote data store.\n-  - Set up a decentralized web3 app by running one command.\n-  - A browser extension that uploads the content to Web3.Storage and generates QR codes for CIDs.\n-  - A decentralized encrypted backup agent for popular databases supported by IPFS and Filecoin.\n-  - Adds support for deploying Gatsby websites to IPFS by ensuring that assets are relative.\n-  - A script to rehost your git repos in ipfs.\n-  - push/pull repositories from/to IPFS.\n-  - set of programs written in Python 3 which allow Git user to clone, push, fetch, self-host or release Git repositories over IPFS decentralized data storage system.\n-  - This is a Golang port of OrbitDB that intends to be fully compatible with the original JavaScript version. OrbitDB is a serverless, distributed, peer-to-peer database.\n-  - IPFS and libp2p on Mobile, with Gomobile.\n-  - This is a simple webtool to add URLs to an IPFS node.\n-  - IPFS-backed Docker Registry.\n-  - A GitHub Action to install and initialize go-ipfs to provision a cross-platform test environment on GitHubs CI platform.\n-  - GitHub Action for delivery of static websites.\n-  - Encrypt a file or directory with AES256 then add to IPFS.\n-  - Browser extension that simplifies access to IPFS resources.\n-  - Zero-config CLI to deploy static websites: cd my-static-website && npx @agentofuser/ipfs-deploy\n-  - Easy to use encrypted file uploader.\n-  - Mount IPFS as a mapped drive on Windows.\n-  - Paste stdin and clipboard to IPFS.\n-  - A toolkit help upload files to IPFS pinning services.\n-  - Continuous Delivery tool for delivery of static websites from Git providers to IPFS.\n-  - Capture screenshots, publish them to IPFS, and copy the link to the clipboard.\n-  - Cloud-init your own IPFS gateway on a cloud provider and easily pin content through a simple web interface.\n-  - Encrypt and decrypt IPFS files with a secret passphrase.\n-  - :satellite: wget for IPFS: retrieve files over IPFS and save them locally.\n-  - Explore the Merkle Forest from the comfort of your browser.\n-  - A command-line tool to pin stuff via ipns.\n-  - Browser userscript for redirecting IPFS/IPNS addresses to your local gateway. This should work on any browser that hasnt had an extension written for it yet and has support for userscripts.\n-  - IETF RFC downloader which stores RFCs on IPFS and indexes them with RTradeLtd/Lens.\n-  - Mahuta is a plug and play service for your micro-service architecture allowing to collect, store and index data on IPFS and offering search functionalities (full text, query).\n-  - Multiverse is a decentralized version control system that enables peer-to-peer software development.\n-  - OrbitDB is a serverless, distributed, peer-to-peer database that uses IPFS as its data storage and IPFS Pubsub to automatically sync databases with peers.\n-  - Web Extension which creates a WebArchiveZip of a tweet and adds to IPFS network.\n-  - Checks which public gateways are online or not.\n-  - A toolkit makes it easier to archive webpages to IPFS.\n-  - A twitter bot that adds, pins, unpins your tweets to public IPFS network using IPFS Cluster.\n-  - Using Solid to store IPFS Hash privately or publicly.\n-  - Encrypt files before uploading them using a keypair or a passphrase.\n-  - Publish your Vue apps easily to IPFS.\n-  - A command-line tool and Go package interface for wayback webpage to IPFS.\n-  - Download videos from YouTube (and similar video platforms) and add them to IPFS.\n\n## Services & Platforms\n\n-  - Ceramic combines IPFS content addressing with advanced cryptography and blockchain timestamps to guarantee security and verifiability of data.\n-  - Hosting platform with automated deployments from GitHub to IPFS\n-  - Encrypted file sharing based on IPFS. Share any files with or without a wallet\n-  - Open Web development platform for building, hosting, and storing sites and apps on IPFS, Filecoin, and the Internet Computer.\n-  - Fission builds open source protocols and managed solutions that empower developers to construct scalable and secure software applications.\n-  - Your private, but social, space online. Store and edit documents and media. Share files or folders with friends.\n-  - A trustless universal package repository enabling you to digitally sign and distribute software in just a few steps.\n\n## Pinning services\n-  - 4EVERLAND is a pinning service that provides IPFS infrastructure and tooling making it easier and faster to host frontends, store data/NFT/file and fetch data with IPFS.\n-  - Pinning data to IPFS can be hard. Filebase removes that complexity.\n-  - Free decentralized storage and bandwidth for NFTs on IPFS & Filecoin.\n-  - Build and manage your dapp through Pinata\xe2\x80\x99s REST API and IPFS toolkit.\n-  - Scalable and distributed storage infrastructure for your application.\n-  - Pinning service & Web3 Platform for building Web3 apps.\n-  - A multi-region, multi-az redundant IPFS pinning service.\n-  - Spheron offers IPFS pinning service and dedicated gateways.\n-  - Easily upload and pin files to IPFS.\n-  - Simple file storage with IPFS & Filecoin.\n\n## Stale Projects\nWe maintain a list of no longer maintained projects for reference. If you see something on this list thats no longer maintained, please submit a PR moving the entry into  and optionally add the reason why its marked as stale with an indented comment.\n\n\n\n## Contribute\n\nContributions are welcome!\n\nSee the .\n\n## License\n\n\n'","Community list of awesome projects, apps, tools, and services related to IPFS."
28,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
28,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
28,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
28,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
28,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
28,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
28,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
28,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
28,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
28,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
28,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
28,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
28,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
28,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
28,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
28,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
28,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
28,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
28,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
28,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
28,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
28,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
28,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
28,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
28,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
28,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
28,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
28,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
28,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
28,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
28,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
28,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
28,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
28,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
28,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
28,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
28,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
28,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
28,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
28,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
28,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
28,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
28,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
28,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
28,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
28,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
28,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
28,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
28,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
28,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
28,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
28,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
28,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
28,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
28,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
28,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
28,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
28,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
28,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
28,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
28,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
28,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
28,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
28,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
28,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
28,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
28,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
28,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
28,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
28,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
28,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
28,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
28,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
28,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
28,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
28,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
28,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
28,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
28,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
28,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
28,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
28,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
28,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
28,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
28,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
28,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
28,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
28,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
28,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
28,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
28,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
29,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'# Deep Hough Voting for 3D Object Detection in Point Clouds\nCreated by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.\n\n\n\n## Introduction\nThis repository is code release for our ICCV 2019 paper (arXiv report ).\n\nCurrent 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird\xe2\x80\x99s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data \xe2\x80\x93 samples from 2D manifolds in 3D space \xe2\x80\x93 we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.\n\nIn this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.\n\n## Citation\n\nIf you find our work useful in your research, please consider citing:\n\n    @inproceedings{qi2019deep,\n        author = {Qi, Charles R and Litany, Or and He, Kaiming and Guibas, Leonidas J},\n        title = {Deep Hough Voting for 3D Object Detection in Point Clouds},\n        booktitle = {Proceedings of the IEEE International Conference on Computer Vision},\n        year = {2019}\n    }\n\n## Installation\n\nInstall  and  (for TensorBoard). It is required that you have access to GPUs. Matlab is required to prepare data for SUN RGB-D. The code is tested with Ubuntu 18.04, Pytorch v1.1, TensorFlow v1.14, CUDA 10.0 and cuDNN v7.4. Note: After a code update on 2/6/2020, the code is now also compatible with Pytorch v1.2+\n\nCompile the CUDA layers for , which we used in the backbone network:\n\n    cd pointnet2\n    python setup.py install\n\nTo see if the compilation is successful, try to run  to see if a forward pass works.\n\nInstall the following Python dependencies (with ):\n\n    matplotlib\n    opencv-python\n    plyfile\n    trimesh>=2.35.39,<2.35.40\n    networkx>=2.2,<2.3\n\n## Run demo\n\nYou can download pre-trained models and sample point clouds .\nUnzip the file under the project root path () and then run:\n\n    python demo.py\n\nThe demo uses a pre-trained model (on SUN RGB-D) to detect objects in a point cloud from an indoor room of a table and a few chairs (from SUN RGB-D val set). You can use 3D visualization software such as the  to open the dumped file under  to see the 3D detection output. Specifically, open  and  to see the input point cloud and predicted 3D bounding boxes.\n\nYou can also run the following command to use another pretrained model on a ScanNet:\n\n    python demo.py --dataset scannet --num_point 40000\n\nDetection results will be dumped to .\n\n## Training and evaluating\n\n### Data preparation\n\nFor SUN RGB-D, follow the  under the  folder.\n\nFor ScanNet, follow the  under the  folder.\n\n### Train and test on SUN RGB-D\n\nTo train a new VoteNet model on SUN RGB-D data (depth images):\n\n    CUDA_VISIBLE_DEVICES=0 python train.py --dataset sunrgbd --log_dir log_sunrgbd\n\nYou can use  to specify which GPU(s) to use. Without specifying CUDA devices, the training will use all the available GPUs and train with data parallel (Note that due to I/O load, training speedup is not linear to the nubmer of GPUs used). Run  to see more training options (e.g. you can also set  to train with the baseline BoxNet model).\nWhile training you can check the  file on its progress, or use the TensorBoard to see loss curves.\n\nTo test the trained model with its checkpoint:\n\n    python eval.py --dataset sunrgbd --checkpoint_path log_sunrgbd/checkpoint.tar --dump_dir eval_sunrgbd --cluster_sampling seed_fps --use_3d_nms --use_cls_nms --per_class_proposal\n\nExample results will be dumped in the  folder (or any other folder you specify). You can run  to see the full options for evaluation. After the evaluation, you can use MeshLab to visualize the predicted votes and 3D bounding boxes (select wireframe mode to view the boxes).\nFinal evaluation results will be printed on screen and also written in the  file under the dump directory. In default we evaluate with both AP@0.25 and AP@0.5 with 3D IoU on oriented boxes. A properly trained VoteNet should have around 57 mAP@0.25 and 32 mAP@0.5.\n\n### Train and test on ScanNet\n\nTo train a VoteNet model on Scannet data (fused scan):\n\n    CUDA_VISIBLE_DEVICES=0 python train.py --dataset scannet --log_dir log_scannet --num_point 40000\n\nTo test the trained model with its checkpoint:\n\n    python eval.py --dataset scannet --checkpoint_path log_scannet/checkpoint.tar --dump_dir eval_scannet --num_point 40000 --cluster_sampling seed_fps --use_3d_nms --use_cls_nms --per_class_proposal\n\nExample results will be dumped in the  folder (or any other folder you specify). In default we evaluate with both AP@0.25 and AP@0.5 with 3D IoU on axis aligned boxes. A properly trained VoteNet should have around 58 mAP@0.25 and 35 mAP@0.5.\n\n### Train on your own data\n\n[For Pro Users] If you have your own dataset with point clouds and annotated 3D bounding boxes, you can create a new dataset class and train VoteNet on your own data. To ease the proces, some tips are provided in this .\n\n## Acknowledgements\nWe want to thank Erik Wijmans for his PointNet++ implementation in Pytorch ().\n\n## License\nvotenet is relased under the MIT License. See the  for more details.\n\n## Change log\n10/20/2019: Fixed a bug of the 3D interpolation customized ops (corrected gradient computation). Re-training the model after the fix slightly improves mAP (less than 1 point).\n'",Deep Hough Voting for 3D Object Detection in Point Clouds
29,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
29,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
29,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
29,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
29,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
29,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
29,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
29,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
29,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
29,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
29,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
29,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
29,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
29,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
29,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
29,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
29,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
29,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
29,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
29,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
29,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
29,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
29,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
29,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
29,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
29,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
29,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
29,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
29,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
29,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
29,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
29,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
29,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
29,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
29,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
29,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
29,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
29,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
29,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
29,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
29,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
29,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
29,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
29,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
29,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
29,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
29,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
29,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
29,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
29,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
29,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
29,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
29,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
29,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
29,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
29,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
29,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
29,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
29,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
29,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
29,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
29,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
29,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
29,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
29,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
29,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
29,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
29,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
29,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
29,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
29,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
29,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
29,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
29,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
29,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
29,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
29,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
29,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
29,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
29,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
29,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
29,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
29,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
29,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
29,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
29,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
29,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
29,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
29,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
29,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
29,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
30,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'# Shipyard Project\nAfter a long time I have decided to retire this project.  It formed the foundation for\nwhat became Docker Universal Control Plane and I no longer have time to manage this.\nI asked for new maintainers but there\nseemed to be no interest.\n\nWARNING: as the project retired I no longer maintained the domain.  Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate.  PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com.  I cannot endorse it nor vouch for the security or content of the site.\n\nI want to thank all of the \nfor all of your help.  Thank you.\n\nI will keep this repository open for a while to keep the source accessible for anyone that\nwants it.\n\nIf you are looking for alternatives, here are a few open source Docker management\napplications available:\n\n- \n- \n- \n\nThank you.\n'",Composable Docker Management
30,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
30,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
30,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
30,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
30,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
30,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
30,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
30,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
30,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
30,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
30,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
30,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
30,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
30,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
30,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
30,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
30,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
30,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
30,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
30,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
30,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
30,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
30,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
30,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
30,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
30,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
30,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
30,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
30,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
30,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
30,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
30,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
30,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
30,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
30,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
30,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
30,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
30,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
30,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
30,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
30,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
30,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
30,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
30,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
30,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
30,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
30,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
30,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
30,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
30,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
30,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
30,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
30,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
30,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
30,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
30,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
30,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
30,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
30,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
30,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
30,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
30,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
30,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
30,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
30,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
30,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
30,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
30,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
30,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
30,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
30,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
30,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
30,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
30,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
30,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
30,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
30,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
30,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
30,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
30,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
30,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
30,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
30,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
30,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
30,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
30,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
30,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
30,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
30,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
30,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
30,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
31,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'# Machine Learning Engineer Nanodegree\n## Specializations\n## Project: Capstone Proposal and Capstone Project\n\nNote\n\nWelcome to my Capstone Project.\nIn order to correctly review the material, this README provides a few instructions about the documentation and code.\n\nThe proposal I submitted is available in the proposal.pdf file.\nI have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.\nThe url for the last proposal is https://review.udacity.com/#!/reviews/398679\n\nThe capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.\nCompanion of the report is a jupyter notebook capstone_report.ipynb that contains all python code inside a version of the content in the report in order to be able to understand the context the code has been written in. The jupyter notebook is sufficient to have access to all results. So just run all the cells and the data will be loaded (from the data directory) and all code executed. The jupyter notebook is also available in exported html format for reader convenience.\n\nI used only standard libraries (I used the Anaconda installation with python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).\n\nThe reference folder contains additional papers I read in order to document myself about possibile solutions. They are referenced inside the report.\n\nThe data folder contains both JSON and CSV versions of the data samples I used for the report.\n\nI proofreaded only the capstone PDF report. Please forgive me for any typos you may encounter in the ipython notebook.\n\n'",Udacity Machine Learning Nanodegree Capstone Project
31,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
31,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
31,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
31,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
31,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
31,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
31,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
31,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
31,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
31,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
31,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
31,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
31,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
31,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
31,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
31,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
31,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
31,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
31,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
31,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
31,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
31,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
31,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
31,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
31,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
31,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
31,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
31,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
31,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
31,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
31,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
31,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
31,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
31,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
31,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
31,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
31,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
31,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
31,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
31,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
31,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
31,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
31,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
31,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
31,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
31,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
31,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
31,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
31,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
31,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
31,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
31,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
31,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
31,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
31,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
31,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
31,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
31,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
31,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
31,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
31,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
31,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
31,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
31,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
31,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
31,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
31,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
31,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
31,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
31,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
31,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
31,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
31,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
31,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
31,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
31,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
31,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
31,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
31,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
31,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
31,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
31,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
31,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
31,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
31,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
31,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
31,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
31,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
31,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
31,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
31,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
32,0,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",React components for high-performance virtualized lists and tables,0.5263157894736842,0.35294117647058826,0.5263157894736842,"b'\n\n  \n  \n  \n  \n\n  \n      \n  \n\n  \n      \n  \n\n  \n      \n  \n\n  \n      \n  \n  \n  \n      \n  \n  \n    Getting started\n  Introduction\n  FAQ\n  \n  Crate list\n\n\n# slog-rs - The Logging for [Rust][rust]\n\n### You might consider using  instead\n\nIts been a while since  was created and it served\nRust community well all this time. It remains a stable, featureful\nand battle-tested library, used in many important projects.\n\nIn last few years,\nanother ecosystem for Rust was\ncreated with similar features and a very good support for debugging  code\nand already larger dev team and community.\n\nPlease check  and see\nif it is more suitable for your use-case. It seems that it is already\na go-to logging/tracing solution for Rust.\n\nReasons you might want to stick with  anyway:\n\n*  support doesnt benefit you\n* you consider mature, stable code & API a plus\n* it has some features that  is missing\n* great performance (I have NOT done any comparison, but s performance\n  is very good).\n\n### Introduction (please read)\n\n is an ecosystem of reusable components for structured, extensible,\ncomposable and contextual logging for [Rust][rust].\n\nThe ambition is to be The Logging Library for Rust.  should accommodate a\nvariety of logging features and requirements. If there is a feature that you\nneed and standard  crate is missing,  should have it.\n\nThis power comes with a little steeper learning curve, so if you experience any\nproblems, please join [slog-rs gitter] channel to get up to speed. If youd\nlike to take a quick, convenient route, consider using\n wrapper library.\n\nWhile the code is reliable, the documentation sometimes could use an improvement.\nPlease report all issues and ideas.\n\n### Features & technical documentation\n\nMost of the interesting documentation is auto-generated and hosted on .\n\nGo to  to read about features and APIs\n(examples included).\n\nNote:  is just a core, and the actual functionality is inside\nmany feature crates. To name a few:\n\n*  for terminal output\n*  for asynchronous logging\n*  for logging JSON\n*  for logging to syslog\n*  for convenience methods (note: )\n\nThere are many more slog feature crates. Search for . It is easy to write and publish\nnew ones. Look through all the  for examples and ideas.\n\n### Terminal output example\n\n is only one of many  features - useful showcase,\nmulti-platform, and featuring eg. automatic TTY detection and colors.\n\nSee following screenshot: same output in both compact and full output mode.\n\n\n\n## Using & help\n\nPlease use [slog-rs gitter] channel to ask for help or discuss\nslog features.\n\nSee\n\nfor full quick code example overview.\n\nRead  for details and features.\n\nTo report a bug or ask for features use [github issues][issues].\n\n[faq]: https://github.com/slog-rs/slog/wiki/FAQ\n[wiki]: https://github.com/slog-rs/slog/wiki/\n[rust]: http://rust-lang.org\n[slog-rs gitter]: https://gitter.im/slog-rs/slog\n[issues]: //github.com/slog-rs/slog/issues\n\n## Slog community\n\nSlog related crates are hosted under .\n\nDawid Ci\xc4\x99\xc5\xbcarkiewicz is the original author and current maintainer of  and\ntherefore self-appointed benevolent dictator over the project. When working on\nslog Dawid follows and expects everyone to follow his .\n\nAny particular repositories under slog ecosystem might be created, controlled,\nmaintained by other entities with various levels of autonomy. Lets work together\ntoward a common goal in a respectful and welcoming atmosphere!\n\n## Verification Recommendation\n\nTo help with the maintained, the ownership of this crate is potentially shared between multiple developers.\nIt is recommended to always use \nto verify the trustworthiness of each of your dependencies, including this one.\n'","Structured, contextual, extensible, composable logging for Rust"
32,1,"React components for efficiently rendering large lists and tabular data.

React Virtualized has very few dependencies and most are managed by NPM automatically. However, the following peer dependencies must be specified by your project in order to avoid version conflicts.

By default, all react-virtualized components use pure rendering to avoid re-rendering unless props or state has changed. This occasionally confuses users when a collection's data changes but props do not. The solution is to let react-virtualized know that something external has changed, which can be done by passing through additional properties that affect rendering or by using public methods to force re-rendering.

React-virtualized aims to support all evergreen browsers and recent mobile browsers for iOS and Android. IE 9+ is also supported (although IE 9 will require some user-defined, custom CSS since flexbox layout is not supported).

Here are some great components built on top of react-virtualized: infinite scrolling date-picker with localization, themes, keyboard support, and more; higher-order components to turn any list into an animated, touch-friendly, sortable list; drag-and-drop sortable representation of hierarchical data; checkbox group component with virtualization for large number of options; drop-down menu for React with windowing to support large numbers of options; a reactive tree component that aims to render large sets of tree structured data in an elegant and performant way; a calendar timeline component that is capable of displaying and interacting with a large number of items.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview appears at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",React components for efficiently rendering large lists and tabular data,1.0,1.0,1.0
32,2,"Kysely (pronounced “Key-Seh-Lee”) is a type-safe and autocompletion-friendly TypeScript SQL query builder. Inspired by others, it is mainly developed for but also runs on all other JavaScript environments.

Kysely ensures you only refer to tables and columns that are visible to the part of the query you're writing. The result type only has the selected columns with correct types and aliases. As an added bonus, you get autocompletion for all that.

Through the capabilities of modern TypeScript, Kysely can parse aliases given to columns and add those columns to the result row type. It can infer column names, aliases, and types from selected subqueries, joined subqueries, statements, and more.

There are cases where things cannot be typed at compile time, and Kysely offers escape hatches for these situations.

All API documentation is written in the typing files and can be viewed by hovering over modules, classes, or methods in your IDE.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Type-safe TypeScript SQL query builder with autocompletion,0.7999999999999999,0.7692307692307692,0.7999999999999999
32,3,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Ruby NLP Resources and Tools,0.26666666666666666,0.0,0.26666666666666666
32,4,"# Awesome NLP with Ruby

> Useful resources for text processing in Ruby

This curated list comprises resources, libraries, and information sources about computational processing of texts in human languages with Ruby. That field is often referred to as Natural Language Processing (NLP), Human Language Technology, and can be brought in conjunction with linguistics, machine learning, artificial intelligence, data science, and other related disciplines.

This list comes from our day-to-day work on Language Models and NLP Tools. Reading this list is awesome. Our motivation describes the important decisions and useful answers you may be interested in.

✨ Every contribution is welcome! Add links through pull requests or create an issue to start a discussion.

Follow us and please spread the word using the #nlp-with-ruby hashtag!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it as the description term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Ruby resources for Natural Language Processing (NLP),0.5882352941176471,0.26666666666666666,0.47058823529411764
32,5,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","International phone number parsing, validation, and formatting library",0.6666666666666666,0.18181818181818182,0.25
32,6,"# What is it?

Googles common Java, C++ and JavaScript library for parsing, formatting, and validating international phone numbers. The Java version is optimized for running on smartphones, and is used by the Android framework since 4.0 (Ice Cream Sandwich).

# Highlights of functionality

* Parsing, formatting, and validating phone numbers for all countries/regions of the world.  
* Gets the type of the number based on the number itself; able to distinguish Fixed-line, Mobile, Toll-free, Premium Rate, Shared Cost, VoIP, Personal Numbers, UAN, Pager, and Voicemail (whenever feasible).  
* Gets a confidence level on whether two numbers could be the same.  
* Provides valid example numbers for all countries/regions, with the option of specifying which type of example phone number is needed.  
* Quickly guesses whether a number is a possible phone number by using only the length information, much faster than a full validation.  
* Full validation of a phone number for a region using length and prefix information.  
* Formats phone numbers on-the-fly when users enter each digit.  
* Finds numbers in text.  
* Provides geographical information related to a phone number.  
* Provides carrier information related to a phone number.  
* Provides timezone information related to a phone number.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a functional description, tagline, or overview introducing the repository appears near the beginning of the extracted text, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.","International phone number parsing, formatting, and validation library",0.6666666666666666,0.4545454545454545,0.3333333333333333
32,7,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
32,8,"Tutorials, examples, collections, and everything else that falls into the categories: pattern classification, machine learning, and data mining.

### Introduction to Machine Learning and Pattern Classification

- Predictive modeling, supervised machine learning, and pattern classification - the big picture
- Entry Point: Data - Using Python's sci-packages to prepare data for Machine Learning tasks and other data analyses
- An Introduction to simple linear supervised classification

#### Applications

MusicMood - Machine Learning in Automatic Music Mood Prediction Based on Song Lyrics

This project is about building a music recommendation system for users who want to listen to happy songs. Such a system can not only be used to brighten up one's mood on a rainy weekend; especially in hospitals, other medical clinics, or public locations such as restaurants, the MusicMood classifier could be used to spread positive mood among people.

mlxtend - A library of extension and helper modules for Python's data analysis and machine learning libraries.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning and Pattern Classification Tutorials and Examples,0.6666666666666666,0.5454545454545455,0.4166666666666667
32,9,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and accurate multi-language static code analysis tool,0.23529411764705882,0.13333333333333333,0.23529411764705882
32,10,"# TscanCode

## A fast and accurate static analysis solution for C/C++, C#, Lua codes

Tencent is pleased to support the open source community by making TscanCode available.

Copyright (C) 2017-2022 Tencent company and TscanCode Team. All rights reserved.

## Introduction

TscanCode is devoted to help programmers to find out code defects at the very beginning.  
* TscanCode supports multi-language: C/C++, C#, and Lua codes;  
* TscanCode is fast and accurate, with performance up to 200K lines per minute and an accuracy rate of about 90%;  
* TscanCode is easy to use, requiring no strict compiling environment and can work with a single command;  
* TscanCode is extensible, allowing you to implement your own checks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.","Fast and accurate static code analysis tool for C/C++, C#, and Lua",0.5714285714285714,0.3157894736842105,0.5714285714285714
32,11,"# Spark2-H2O-R-Zeppelin  
A stack for data mining using Spark2, H2O, R and Zeppelin running on Cloudera Hadoop Distribution","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Data mining stack with Spark2, H2O, R, and Zeppelin on Cloudera Hadoop",0.7857142857142857,0.5384615384615385,0.7142857142857143
32,12,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Audio Thumbnailing Research Project,0.46153846153846156,0.18181818181818182,0.30769230769230765
32,13,"# audio-thumbnailing  
Repository for my scientific initiation project on audio thumbnailing.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the output. The output should include only a short term/phrase introducing the repository.",audio-thumbnailing: scientific initiation project on audio thumbnailing,0.7058823529411765,0.6666666666666666,0.7058823529411765
32,14,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
32,15,"# Awesome Data Science with Python

A curated list of awesome resources for practicing data science using Python, including not only libraries, but also links to tutorials, code snippets, blog posts and talks.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Curated Python Data Science Resources,0.7692307692307693,0.18181818181818182,0.6153846153846154
32,16,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Open source enterprise CMS built on Django with multilingual and multi-site support,0.32,0.08695652173913043,0.24000000000000002
32,17,"django CMS

Open source enterprise content management system based on the Django framework and backed by the non-profit django CMS Association.

Because django CMS is a community-driven project, we welcome everyone to contribute and collaborate for their contribution. Become part of a fantastic community and help us make django CMS the best open source CMS in the world.

Features

* hierarchical pages  
* extensive built-in support for multilingual websites  
* multi-site support  
* draft/publish workflows  
* version control  
* a sophisticated publishing architecture, that's also usable in your own applications  
* frontend content editing  
* a hierarchical content structure for nested plugins  
* an extensible navigation system that your own applications can hook into  
* SEO-friendly URLs  
* designed to integrate thoroughly into other applications  

Developing applications that integrate with and take advantage of django CMS features is easy and well-documented.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using or adapting it for the output. The output should include only a short term/phrase introducing the repository.",Open source enterprise content management system based on Django,0.1904761904761905,0.0,0.1904761904761905
32,18,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Character-level RNN language model in TensorFlow,0.6086956521739131,0.28571428571428575,0.5217391304347825
32,19,"char-rnn-tensorflow

Multi-layer Recurrent Neural Networks (LSTM, RNN) for character-level language models in Python using Tensorflow.

Inspired from Andrej Karpathy's work.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, purpose statement, or overview is present at the beginning of the extracted text, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Character-level RNN language models with TensorFlow,0.5217391304347825,0.19047619047619044,0.43478260869565216
32,20,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",OpenTelemetry PHP Core Components,0.5,0.3333333333333333,0.5
32,21,"# OpenTelemetry for PHP

This is the main components of OpenTelemetry for PHP.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description term/phrase. The output should include only a short term/phrase introducing the repository.",OpenTelemetry for PHP,0.5714285714285715,0.0,0.5714285714285715
32,22,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode build metrics and productivity monitoring tool,0.4761904761904762,0.3157894736842105,0.4761904761904762
32,23,"_XCMetrics is the easiest way to collect Xcode builds metrics and improve your developer productivity._

## Overview

- 📈 Keep your build times under control and monitor which targets are taking the longest to compile.  
- ⚠️ Collect warnings to improve your code health.  
- ❌ Collect errors to help and diagnose builds problems in real-time.  
- 🛠 Build custom plugins to collect an infinite amount of metadata to be attached to each build, such as version control information and thermal throttling.

XCMetrics is built on top of a tool that can parse Xcode and xcodebuild logs stored in the xcactivitylog format. This allows XCMetrics to collect accurate metrics for you to review and keep track during the lifetime of a codebase.  
XCMetrics has collected almost 1 million builds and over 10 billion steps from all Spotify iOS applications since its introduction. It has allowed us to make important and informed decisions regarding our project structure and architecture.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, or purpose statement at the beginning or in an overview section, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",XCMetrics: The easiest way to collect Xcode build metrics and improve developer productivity,0.962962962962963,0.8799999999999999,0.962962962962963
32,24,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Free Open-Source Machine Learning University,0.9090909090909091,0.4444444444444445,0.5454545454545454
32,25,"A Free Machine Learning University

Machine Learning Open Source University is an IDEA of free-learning of a ML enthusiast for all other ML enthusiast.

This list is continuously updated - And if you are a ML practitioner and have some good suggestions to improve this or have some good resources to share, you can create a pull request and contribute.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, project name, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term/phrase introducing the repository.",Machine Learning Open Source University,1.0,1.0,1.0
32,26,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
32,27,"Mousetrap

Mousetrap is a simple library for handling keyboard shortcuts in Javascript.

It is licensed under the Apache 2.0 license.

It is around 2kb minified and gzipped and 4.5kb minified, has no external dependencies, and has been tested in the following browsers:

- Internet Explorer 6+
- Safari
- Firefox
- Chrome

It has support for keydown, keyup, and keypress events on specific keys, keyboard combinations, or key sequences.

Why Mousetrap?

There are a number of other similar libraries out there so what makes this one different?

- There are no external dependencies, no framework is required
- You are not limited to keypress events (You can specify keydown, keyup, or keypress or let Mousetrap choose for you).
- You can bind key events directly to special keys such as command or option without having to specify shift or ctrl which are not consistent across all keyboards
- It works with international keyboard layouts
- You can bind Gmail like key sequences in addition to regular keys and key combinations
- You can programmatically trigger key events with the trigger method
- It works with the numeric keypad on your keyboard
- The code is well documented/commented","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a clear tagline, purpose statement, or functional description near the beginning, use it as the description. Otherwise, generate a concise term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Lightweight JavaScript library for handling keyboard shortcuts,0.7999999999999999,0.6153846153846153,0.6666666666666666
32,28,"# Welcome!

Welcome to Pipecat ... elegant, flexible data logging in Python for connected sensors and instruments. Use Pipecat to log data from battery chargers, GPS, automobiles, gyros, weather, and more!

Here are some devices supported by Pipecat and examples of how to log their data:

* Devices that generate NMEA data.  
* Vehicles that generate OBD-II data.  
* Motion (accelerometer) data from iOS devices.  
* METAR (aviation weather) data from the National Weather Service.  
* Any device that communicates over a serial port.  
* Any device that can handle HTTP GET requests.  
* Any device that can write to a socket using UDP.  
* Any device that can generate XML data.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Flexible Python data logging for connected sensors and instruments,0.9,0.5555555555555556,0.7999999999999999
32,29,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated MongoDB Resources and Tools,0.5882352941176471,0.13333333333333333,0.47058823529411764
32,30,"# Awesome MongoDB

> A curated list of awesome MongoDB resources, libraries, tools and applications

Inspired by the list thing. Feel free to improve this list!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly or closely paraphrasing it in the output. The output should include only a short term/phrase introducing the repository.",Curated list of awesome MongoDB resources and tools,0.8,0.5555555555555556,0.7000000000000001
32,31,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",R interface for scalable Apache Spark data analysis and machine learning,0.625,0.4285714285714285,0.625
32,32,"sparklyr: R interface for Apache Spark
================

- Install and connect to Apache Spark using YARN, Mesos, Livy or Kubernetes.
- Use dplyr to filter and aggregate Spark datasets and then bring them into R for analysis and visualization.
- Use ml_* functions to train models at scale in Spark.
- Create interoperable machine learning pipelines and productionize them with sparklyr.
- Create extensions that call the full Spark API or run custom code to support new functionality.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If there is a tagline, functional description, purpose statement, or overview at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",R interface for Apache Spark,1.0,1.0,1.0
32,33,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",CSS3 Special Effects Animations Library,0.8000000000000002,0.25,0.6
32,34,":tophat: magic  
---------------

CSS3 Animations with special effects. (→ 3.1 kB gzip)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description.

The output should include only a short term/phrase introducing the repository.",CSS3 Animations with special effects,1.0,1.0,1.0
32,35,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Fast and user-friendly data import for rectangular files in R,0.2105263157894737,0.0,0.2105263157894737
32,36,"# readr

## Overview

The goal of readr is to provide a fast and friendly way to read rectangular data from delimited files, such as comma-separated values (CSV) and tab-separated values (TSV). It is designed to parse many types of data found in the wild, while providing an informative problem report when parsing leads to unexpected results. If you are new to readr, the best place to start is the in R for Data Science.

To read a rectangular dataset with readr, you combine two pieces: a function that parses the lines of the file into individual fields and a column specification.

readr supports the following file formats with these functions:

- comma-separated values (CSV)  
- tab-separated values (TSV)  
- semicolon-separated values with as the decimal mark  
- delimited files (CSV and TSV are important special cases)  
- fixed-width files  
- whitespace-separated files  
- web log files  

A column specification describes how each column should be converted from a character vector to a specific data type (character, numeric, datetime, etc.). In the absence of a column specification, readr will guess column types from the data. Column type guessing is very handy, especially during data exploration, but it’s important to remember these are just guesses. As any data analysis project matures past the exploratory phase, the best strategy is to provide explicit column types.

readr prints the guessed column types, which is useful because it allows you to check that the columns have been read in as you expect. If they haven’t, that means you need to provide the column specification. readr affords a nice workflow for this by allowing you to retrieve the guessed column specification from your initial effort, which you can then copy, paste, and tweak to create a more explicit readr call that expresses the desired column types.

readr got a new parsing engine in version 2.0.0 (released July 2021). In this so-called second edition, readr calls by default. The parsing engine in readr versions prior to 2.0.0 is now called the first edition. If you’re using readr >= 2.0.0, you can still access first edition parsing via specific functions. The plan is to eventually deprecate and then remove the first edition code. New and actively-maintained code should use the second edition. Workarounds are offered as a pragmatic way to patch up legacy code or as a temporary solution for infelicities identified as the second edition matures.

There are two main alternatives to readr: base R and data.table’s fread. Compared to the corresponding base functions, readr functions use a consistent naming scheme for parameters, are generally much faster (up to 10x-100x depending on the dataset), leave strings as is by default, automatically parse common date/time formats, have a helpful progress bar if loading is going to take a while, and work the same way regardless of the current locale.

Compared to data.table’s fread, readr functions are sometimes slower, particularly on numeric heavy data, can automatically guess some parameters but encourage explicit specification of delimiter, skipped rows, and header row, and follow tidyverse-wide conventions such as returning a tibble, a standard approach for column name repair, and a common mini-language for column selection.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a clear tagline, purpose statement, or overview introducing the repository is present near the beginning of the extracted text, or a concise description of what the repository does, prioritize using that as the output. The output should include only a short term/phrase introducing the repository.",Fast and friendly R package for reading and parsing rectangular delimited data files,0.2857142857142857,0.0,0.1904761904761905
32,37,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust library for full-text search based on Apache Lucene,0.28571428571428575,0.0,0.28571428571428575
32,38,"Rucene - Rust implementation of Lucene  
=====================================================================================

## Introduction

Rucene is a Rust port of the popular Apache Lucene project. Rucene is not a complete application, but rather a code library and API that can easily be used to add full text search capabilities to applications.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, use it or its key phrase as the description. The output should include only a short term/phrase introducing the repository.",Rust implementation of Apache Lucene for full text search,0.46153846153846156,0.0,0.46153846153846156
32,39,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automatic CSS prefixer for seamless cross-browser compatibility,0.28571428571428575,0.16666666666666666,0.28571428571428575
32,40,"## Break free from CSS prefix hell!

A script that lets you use only unprefixed CSS properties everywhere.  
It works behind the scenes, adding the current browser’s prefix to any CSS code, only when it’s needed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that statement as the description. The output should include only a short term/phrase introducing the repository.",CSS prefix automation script,0.4,0.25,0.4
32,41,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",ODSC Hackathon Challenge 1 iPython Notebook,0.8571428571428571,0.5,0.28571428571428575
32,42,"odsc_hackathon  
iPython Notebook for Challenge 1 of ODSC Hackathon","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at the beginning, use it directly as the description. The output should include only a short term/phrase introducing the repository.",iPython Notebook for ODSC Hackathon Challenge 1,0.9333333333333333,0.6153846153846153,0.6666666666666666
32,43,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",In-browser real-time speech recognition library in JavaScript,0.375,0.28571428571428575,0.375
32,44,"JuliusJS

A speech recognition library for the web

JuliusJS is an opinionated port of Julius to JavaScript. It actively listens to the user to transcribe what they are saying through a callback.

Features:

- Real-time transcription
- Use the provided grammar, or write your own
- 100% JavaScript implementation
- All recognition is done in-browser
- Familiar event-inspired API
- No external server calls

JuliusJS is a port of the ""Large Vocabulary Continuous Speech Recognition Engine Julius"" to JavaScript","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",JuliusJS: In-browser real-time speech recognition library in JavaScript,0.3529411764705882,0.26666666666666666,0.3529411764705882
32,45,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hong Kong International Airport flight schedule and delay tracker,0.0,0.0,0.0
32,46,"# HKAiportSchedule  
HKAiportSchedule  

I am trying to write a show script to capture the arrival/departure schedule & actual delay for all the flights using HKIA (Hong Kong International Airport).  

This is still in progress and feel free to provide your comment. :)  

Libraries used are quite common  
* lxml (for html parsing)  
* requests (for making HTTP calls)  
* pandas (for data manipulation)","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, project name, or purpose statement appears at the beginning of the extracted text, prioritize using it as the output. The output should include only a short term/phrase introducing the repository.",HK Airport Flight Schedule Tracker,0.0,0.0,0.0
32,47,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Global state management for React using Hooks without Context API,0.6956521739130435,0.380952380952381,0.6956521739130435
32,48,"react-hooks-global-state

Simple global state for React with Hooks API without Context API

## Introduction

This is a library to provide a global state with React Hooks.  
It has the following characteristics:

* Optimization for shallow state getter and setter.  
  * The library cares about the state object only one-level deep.  
* TypeScript type definitions  
  * A creator function creates hooks with types inferred.  
* Redux middleware support to some extent  
  * Some libraries in the Redux ecosystem can be used.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Simple global state management for React using Hooks without Context API,0.7500000000000001,0.45454545454545453,0.7500000000000001
32,49,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Rust language modular compiler frontend and IDE support tool,0.375,0.0,0.375
32,50,rust-analyzer is a modular compiler frontend for the Rust language. It is a part of a larger rls-2.0 effort to create excellent IDE support for Rust.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Modular Rust language compiler frontend for IDE support,0.5333333333333333,0.15384615384615383,0.5333333333333333
32,51,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Pure PHP Bitcoin implementation library,0.6666666666666665,0.28571428571428575,0.4444444444444445
32,52,"## Bitcoin

This repository contains an implementation of Bitcoin using mostly pure PHP.

Warning: This library does not support 32-bit installs of PHP. Please also note that composer is the only supported installation method.

Presently supported:

- Blocks, headers, and merkle blocks and bloom filters  
- P2SH & Segregated witness scripts  
- An adaptable elliptic-curve library, using by default, or libsecp256k1 if the bindings are found  
- Support for building, parsing, signing/validating transactions  
- Deterministic signatures (RFC6979)  
- BIP32 and electrum (older type I) deterministic key algorithms  
- BIP39, and the older electrum seed format  
- ScriptFactory for common input/output types, parser, interpreter, and classifiers  
- Supports bindings to libbitcoinconsensus  
- Bindings to Stratum (electrum) servers","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Pure PHP Bitcoin implementation,0.75,0.3333333333333333,0.5
32,53,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
32,54,"# The Go Programming Language

Go is an open source programming language that makes it easy to build simple, reliable, and efficient software.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.","Open source programming language for simple, reliable, and efficient software development",0.26666666666666666,0.15384615384615383,0.26666666666666666
32,55,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Customizable Pull-to-Refresh UI Component,0.6,0.5,0.6
32,56,"# Phoenix Pull-to-Refresh

#### This project aims to provide a simple and customizable pull to refresh implementation. Made by Yalantis

We’d be really happy if you sent us links to your projects where you use our component. Just send an email to github@yalantis.com and do let us know if you have any questions or suggestions regarding the animation.

P.S. We’re going to publish more awesomeness wrapped in code and a tutorial on how to make UI for Android (iOS) better than better. Stay tuned!","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text already contains a project name, tagline, or purpose statement at the beginning, use it as the description. Otherwise, generate a short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Phoenix Pull-to-Refresh: Simple and customizable pull-to-refresh UI component,0.5,0.42857142857142855,0.5
32,57,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated web-based rich text editor framework,0.7058823529411764,0.4,0.588235294117647
32,58,"THIS PROJECT IS DEPRECATED - You can find more information about this in our blog post. In summary:

- We have no plans to add features to Scribe but may make critical updates throughout the period that we continue to use instances of Scribe internally
- We recommend forking the project in order to do any feature work as we will not be moving the Scribe repository out of the Guardian organisation
- In time we hope to be able to open source the new text editor we are working on

# Scribe

A rich text editor framework for the web platform, with patches for browser inconsistencies and sensible defaults.

## Description

For an introduction, you may want to read the blog post.

Please note: There is a lot of missing documentation for Scribe and many of its plugins. We plan to improve this, however in the meantime we encourage you to look at the code. Scribe is very small in comparison to other libraries of its kind.

You can join us on IRC at #scribejs on freenode, or via the community channels.

Scribe only actively supports a limited set of browsers.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview (for example, a sentence directly introducing what the repository is or does), prioritize using that wording for the output. The output should include only a short term/phrase introducing the repository.",Scribe - A rich text editor framework for the web platform,0.9,0.8888888888888888,0.9
32,59,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Windows command-line installer for portable apps,0.7692307692307692,0.5454545454545454,0.6153846153846153
32,60,"Scoop

Scoop is a command-line installer for Windows.

What does Scoop do?

Scoop installs programs from the command line with a minimal amount of friction. It:

- Eliminates permission popup windows  
- Hides GUI wizard-style installers  
- Prevents PATH pollution from installing lots of programs  
- Avoids unexpected side-effects from installing and uninstalling programs  
- Finds and installs dependencies automatically  
- Performs all the extra setup steps itself to get a working program  

Scoop is very scriptable, so you can run repeatable setups to get your environment just the way you like.

If you've built software that you'd like others to use, Scoop is an alternative to building an installer — you just need to zip your program and provide a JSON manifest that describes how to install it.

What sort of apps can Scoop install?

The apps that install best with Scoop are commonly called ""portable"" apps: i.e. compressed program files that run stand-alone when extracted and don't have side-effects like changing the registry or putting files outside the program directory.

Since installers are common, Scoop supports them too (and their uninstallers).

Scoop is also great at handling single-file programs and Powershell scripts. These don't even need to be compressed.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase introducing the repository. The output should include only a short term/phrase introducing the repository.",Scoop: A command-line installer for Windows,0.923076923076923,0.9090909090909091,0.923076923076923
32,61,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated Gulp resources and plugins collection,0.33333333333333337,0.07142857142857142,0.26666666666666666
32,62,"# Awesome Gulp

A curated list of awesome resources, plugins, and boilerplates for a better development workflow automation.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text begins with a tagline, functional description, purpose statement, or overview, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated Gulp resources and plugins for workflow automation,0.5,0.13333333333333333,0.43750000000000006
32,63,"#### DEPRECATED - This package is no longer supported or maintained.

Chromium-based cross-platform / cross-language application framework

Thrust is based on Chromium's Content Module and is supported on Linux, MacOSX, and Windows.

Thrust's binary distribution exposes its API on the standard IO and language-specific library packages automatically download the binary distribution at installation. Thrust uses web-pages as its GUI.

All Getting Started examples work as is on each major platform (MacOSX, Windows, Linux).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Deprecated Chromium-based cross-platform application framework,0.7999999999999999,0.6153846153846153,0.7999999999999999
32,64,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",All-in-one frontend build and package management tool (deprecated),0.6,0.1111111111111111,0.4000000000000001
32,65,"# THIS PROJECT IS DEPRECATED  
Component is not maintained anymore.

Component is a vertically integrated frontend solution, handling everything from package management to the build process, including HTML, JS, CSS, images, and fonts. Think of it as an opinionated tool all wrapped into one.

If you're confused about component, components, componentjs, please read the related documentation.

> Component 1.0.0: Several major new features have been added, some have been removed, and the project has been greatly reorganized. You may need to upgrade your version of node and/or npm to avoid breakage. Component 0.x will not be maintained anymore.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview at or near the beginning, use it directly or prioritize its key concepts in the output. The output should include only a short term/phrase introducing the repository.",Deprecated all-in-one frontend build and package management tool,0.6,0.1111111111111111,0.4000000000000001
32,66,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Hackable Python-based tiling window manager for X11 and Wayland,0.64,0.17391304347826086,0.48
32,67,"logo

A full-featured, hackable tiling window manager written and configured in Python

Features

* Simple, small and extensible. It's easy to write your own layouts, widgets and commands.  
* Configured in Python.  
* Runs as an X11 WM or a Wayland compositor.  
* Command shell that allows all aspects of Qtile to be managed and inspected.  
* Complete remote scriptability - write scripts to set up workspaces, manipulate windows, update status bar widgets and more.  
* Qtile's remote scriptability makes it one of the most thoroughly unit-tested window managers around.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, overview, or purpose statement at the beginning, prioritize using it directly or with minimal modification as the output. The output should include only a short term/phrase introducing the repository.",Hackable tiling window manager configurable in Python,0.6363636363636364,0.5,0.6363636363636364
32,68,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed Application Performance Monitoring and Transaction Tracing Tool,0.4444444444444445,0.125,0.33333333333333326
32,69,"Pinpoint is an APM (Application Performance Management) tool for large-scale distributed systems written in Java. Inspired by other tracing tools, Pinpoint provides a solution to help analyze the overall structure of the system and how components within them are interconnected by tracing transactions across distributed applications.

You should definitely check Pinpoint out if you want to:
* understand your system at a glance
* monitor your application in real-time
* gain code-level visibility to every transaction
* install APM Agents without changing a single line of code
* have minimal impact on performance (approximately 3% increase in resource usage)

Services nowadays often consist of many different components, communicating amongst themselves as well as making API calls to external services. How each and every transaction gets executed is often left as a black box. Pinpoint traces transaction flows between these components and provides a clear view to identify problem areas and potential bottlenecks.

Key features include:
* ServerMap - Understand the topology of any distributed system by visualizing how their components are interconnected. Clicking on a node reveals details about the component, such as its current status and transaction count.
* Realtime Active Thread Chart - Monitor active threads inside applications in real-time.
* Request/Response Scatter Chart - Visualize request count and response patterns over time to identify potential problems. Transactions can be selected for additional detail by dragging over the chart.
* CallStack - Gain code-level visibility to every transaction in a distributed environment, identifying bottlenecks and points of failure in a single view.
* Inspector - View additional details on the application such as CPU usage, Memory/Garbage Collection, TPS, and JVM arguments.
* URI-metric
* Infrastructure

Pinpoint also supports applications written in PHP and Python.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Pinpoint - APM tool for tracing and monitoring large-scale distributed systems,0.6666666666666666,0.4210526315789474,0.6666666666666666
32,70,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Distributed reliable key-value store with Raft consensus,0.45454545454545453,0.4,0.45454545454545453
32,71,"etcd

Note: The branch may be in an unstable or even broken state during development. For stable versions, see releases.

etcd is a distributed reliable key-value store for the most critical data of a distributed system, with a focus on being:

* Simple: well-defined, user-facing API (gRPC)  
* Secure: automatic TLS with optional client cert authentication  
* Fast: benchmarked 10,000 writes/sec  
* Reliable: properly distributed using Raft  

etcd is written in Go and uses the Raft consensus algorithm to manage a highly-available replicated log.

etcd is used in critical deployment scenarios, where it is frequently teamed with applications such as Kubernetes, locksmith, vulcand, Doorman, and many others. Reliability is further ensured by rigorous testing.

See etcdctl for a simple command line client.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If a tagline, functional description, or purpose statement is present near the beginning of the extracted text, prioritize using it for the output.

The output should include only a short term/phrase introducing the repository.",Distributed reliable key-value store for critical system data,0.782608695652174,0.4761904761904762,0.6956521739130435
32,72,"Editor.js is an open-source text editor offering a variety of features to help users create and format content efficiently. It has a modern, block-style interface that allows users to easily add and arrange different types of content, such as text, images, lists, quotes, etc. Each Block is provided via a separate plugin making Editor.js extremely flexible.

Editor.js outputs a clean JSON data instead of heavy HTML markup. Use it in Web, iOS, Android, AMP, Instant Articles, speech readers, AI chatbots — everywhere. Easy to sanitize, extend and integrate with your logic.

- 😍  Modern UI out of the box  
- 💎  Clean JSON output  
- ⚙️  Well-designed API  
- 🛍  Various Tools available  
- 💌  Free and open source","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Block-style open-source content editor with clean JSON output,0.7777777777777777,0.6250000000000001,0.7777777777777777
32,73,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Xcode Project Folder Organizer CLI,0.3,0.22222222222222224,0.3
32,74,A command-line tool that reorganizes your Xcode project folder to match your Xcode groups.,"Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Xcode Project Folder Organizer,0.31578947368421056,0.23529411764705882,0.31578947368421056
32,75,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Automated image cropping algorithm for optimal focus areas,0.3333333333333333,0.2,0.3333333333333333
32,76,"smartcrop.js

Smartcrop.js implements an algorithm to find good crops for images. It can be used in the browser, in node or via a CLI.

Smartcrop.js works using fairly dumb image processing. In short:

1. Find edges using laplace  
2. Find regions with a color like skin  
3. Find regions high in saturation  
4. Boost regions as specified by options (for example detected faces)  
5. Generate a set of candidate crops using a sliding window  
6. Rank them using an importance function to focus the detail in the center and avoid it in the edges  
7. Output the candidate crop with the highest rank

The smartcrop algorithm itself is designed to be simple, relatively fast, small and generic.

In many cases it makes sense to add face detection to it to ensure faces get the priority they deserve.

The algorithm can be integrated with multiple JavaScript face detection libraries.

On the client side, tracking.js is recommended because it's small and simple.

On the server side, node-opencv can be quicker but comes with some dependencies.

It's also worth noting that all of these libraries are based on the now dated object detection framework.

It would be interesting to see how more advanced techniques could be implemented in browser-friendly JavaScript.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes a tagline, functional description, purpose statement, or overview at the beginning, prioritize using that as the short term/phrase. The output should include only a short term/phrase introducing the repository.",Smart image cropping algorithm for browser and Node.js,0.30769230769230765,0.18181818181818182,0.30769230769230765
32,77,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Dingo API – Flexible Laravel API Development Toolkit,0.23529411764705882,0.0,0.23529411764705882
32,78,"Move repositories notice  
Unfortunately this package cannot be maintained at this location anymore due to broken CI integrations, and travis-ci likely can't be used much longer either due to their change to paid plans. This project is still being actively maintained, we ask you to please switch to the following repository: https://github.com/api-ecosystem-for-laravel/dingo-api

---

The Dingo API package is meant to provide you, the developer, with a set of tools to help you easily and quickly build your own API. While the goal of this package is to remain as flexible as possible it still won't cover all situations and solve all problems.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains a tagline, functional description, purpose statement, or overview introducing the repository, especially near the beginning, prioritize using it verbatim or closely paraphrased in your output.

The output should include only a short term/phrase introducing the repository.",Dingo API – Tools for building flexible APIs in Laravel,0.3157894736842105,0.0,0.3157894736842105
32,79,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Go language autocompletion daemon for editors,0.7142857142857143,0.3333333333333333,0.42857142857142855
32,80,"## An autocompletion daemon for the Go programming language

IMPORTANT: This project is not maintained anymore, consider using a tool which provides similar functionality and more, created and maintained by the Go team.

Gocode is a helper tool which is intended to be integrated with your source code editor, like vim, neovim, and emacs. It provides several advanced capabilities, which currently includes:

- Context-sensitive autocompletion

It is called a daemon because it uses client/server architecture for caching purposes. In particular, it makes autocompletions very fast. Typical autocompletion time with warm cache is 30ms, which is barely noticeable.","Summarize the following extracted text from a Github repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, overview, or purpose statement at the beginning, prioritize using that exact phrase as the description. The output should include only a short term or phrase introducing the repository.",An autocompletion daemon for the Go programming language,1.0,1.0,1.0
32,81,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Curated collection of IPFS projects and tools,0.5263157894736842,0.0,0.3157894736842105
32,82,"# Awesome IPFS

This is a community list of awesome projects, apps, tools, and services related to IPFS.

IPFS is an open-source project that encourages the development of multiple implementations of the protocol, each of which seeks to optimize for various use cases.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, functional description, purpose statement, or overview introducing the repository, prioritize using that as the description. The output should include only a short term/phrase introducing the repository.",Curated list of awesome IPFS projects and tools,0.7000000000000001,0.2222222222222222,0.5
32,83,"# Deep Hough Voting for 3D Object Detection in Point Clouds  
Created by Charles R. Qi, Or Litany, Kaiming He and Leonidas Guibas from Facebook AI Research and Stanford University.

## Introduction  
This repository is code release for our ICCV 2019 paper.

Current 3D object detection methods are heavily influenced by 2D detectors. In order to leverage architectures in 2D detectors, they often convert 3D point clouds to regular grids (i.e., to voxel grids or to bird’s eye view images), or rely on detection in 2D images to propose 3D boxes. Few works have attempted to directly detect objects in point clouds. In this work, we return to first principles to construct a 3D detection pipeline for point cloud data and as generic as possible. However, due to the sparse nature of the data – samples from 2D manifolds in 3D space – we face a major challenge when directly predicting bounding box parameters from scene points: a 3D object centroid can be far from any surface point thus hard to regress accurately in one step. To address the challenge, we propose VoteNet, an end-to-end 3D object detection network based on a synergy of deep point set networks and Hough voting. Our model achieves state-of-the-art 3D detection on two large datasets of real 3D scans, ScanNet and SUN RGB-D with a simple design, compact model size and high efficiency. Remarkably, VoteNet outperforms previous methods by using purely geometric information without relying on color images.

In this repository, we provide VoteNet model implementation (with Pytorch) as well as data preparation, training and evaluation scripts on SUN RGB-D and ScanNet.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",VoteNet: Deep Hough Voting for 3D Object Detection in Point Clouds,0.9523809523809523,0.9473684210526316,0.9523809523809523
32,84,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Retired Docker management platform foundational to Docker Universal Control Plane,0.30769230769230765,0.1818181818181818,0.30769230769230765
32,85,"Shipyard Project  
After a long time I have decided to retire this project. It formed the foundation for what became Docker Universal Control Plane and I no longer have time to manage this. I asked for new maintainers but there seemed to be no interest.  

WARNING: as the project retired I no longer maintained the domain. Someone else has setup a duplicate site that is not official and is carrying an invalid SSL certificate. PLEASE DO NOT GO TO THE DOMAIN shipyard-project.com. I cannot endorse it nor vouch for the security or content of the site.  

I want to thank all of the community for all of your help. Thank you.  

I will keep this repository open for a while to keep the source accessible for anyone that wants it.  

If you are looking for alternatives, here are a few open source Docker management applications available:  

Thank you.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text includes an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",Retired Docker management foundation project,0.5,0.3333333333333333,0.5
32,86,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
32,87,"# 

> Helping you select an MV* framework

Developers these days are spoiled with choice when it comes to selecting an MV* framework for structuring and organizing JavaScript web apps.

Backbone, Ember, AngularJS... the list of new and stable solutions goes on and on, but just how do you decide on which to use in a sea of so many options?

To help solve this problem, we created TodoMVC - a project which offers the same Todo application implemented using MV* concepts in most of the popular JavaScript MV* frameworks of today.","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an explicit tagline, purpose statement, or overview at the beginning, prioritize using it as the description. The output should include only a short term/phrase introducing the repository.",MV* Framework Comparison via TodoMVC Implementations,0.1739130434782609,0.09523809523809523,0.1739130434782609
32,88,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Delphi Open Source Client-Server ORM/SOA MVC Framework,0.380952380952381,0.3157894736842105,0.380952380952381
32,89,"Synopse mORMot 1 Framework

An Open Source Client-Server ORM/SOA framework  
(c) 2008-2023 Synopse Informatique

Synopse mORMot is an Open Source Client-Server ORM SOA MVC framework for Delphi 6 up to the latest Delphi and FPC revisions, targeting Windows/Linux for servers, and any platform for clients (including mobile or AJAX).

The main features of mORMot are therefore:

 - ORM/ODM: objects persistence on almost any database (SQL or NoSQL);
 - SOA: organize your business logic into REST services;
 - Clients: consume your data or services from any platform, via ORM/SOA APIs;
 - Web MVC: publish your ORM/SOA process as responsive Web Applications.

With local or remote access, via an auto-configuring Client-Server REST design.

Due to its modular design, switch from a Client-Server architecture over HTTP, named pipes or GDI messages into a stand-alone application is just a matter of mORMot classes initialization. For instance, the very same executable can even be running stand-alone, as a server, as a service, or a client, depending on some run-time parameters!

Emphasizing simplicity, speed and versatility, mORMot is a well documented Open Source project easy enough to add basic ORM or Client-Server features to simple applications for hobbyists, or let experienced users develop scaling and strong service-based projects for their customers, with the advantages of native code and easy-to-deploy solutions, reducing deployment cost and increasing ROI.

It provides an Open Source self-sufficient set of units (even Delphi starter edition is enough) for creating any application, from a stand-alone solution up to the most complex Domain-Driven Design (DDD):

 - Presentation layer featuring MVC UI generation with i18n and reporting (with pdf export) for rich Delphi clients, MVC web clients (with logic-less Mustache templates) or rich AJAX clients (via native JSON/REST access);
 - Application layer implementing Service Oriented Architecture via interface-based services (like WCF) and Client-Server ORM (including method-based services) - following a RESTful model using JSON over several communication protocols (e.g. HTTP/1.1);
 - Domain Model layer handling all the needed business logic in plain Delphi objects, including high-level managed types like dynamic arrays or records for Value Objects, dedicated classes for Entities or Aggregates, and variant storage with late-binding for dynamic documents;
 - Data persistence infrastructure layer with ORM operations on direct Oracle, MS SQL, OleDB, ODBC, ZEOS/ZDBC access or any TDataSet provider (e.g. FireDAC/AnyDAC, UniDAC, NexusDB, BDE...), with a powerful SQLite3 kernel, and optional SQL access if needed, with amazing performance and advanced features like Array DML, auto-generating SQL for SQLite3, Oracle, Jet/MSAccess, MS SQL, Firebird, DB2, PostgreSQL, MySQL and NexusDB - and alternative high-speed MongoDB NoSQL database access for ODM persistence;
 - Cross-Cutting infrastructure layers for handling data filtering and validation, security (e.g. Windows authentication or any custom model), caching, logging and testing (framework uses test-driven approach and features interface stubbing and mocking).

With mORMot, ORM/ODM is not used only for data persistence of objects (like in other implementations), but as part of a global n-Tier, Service Oriented Architecture (SOA), ready to implement Domain-Driven solutions. This framework is not an ORM on which a transmission layer has been added, like almost everything existing in Delphi, C# or Java: this is a full Client-Server ORM/SOA from the ground up. This really makes the difference.

The business logic of your applications will be easily exposed as Services, and will be accessible from light clients (written in Delphi or any other mean, including AJAX). The SpiderMonkey JavaScript engine has been integrated on the server side and can be used to define business rules or any process (including MVC web rendering) - just like node.js, but with a multi-threaded core, and the full power of our optimized Delphi libraries at hand.

The framework Core is non-visual: you will get everything you need in a consistent set of classes to be used from code. In order to let you focus on your business, using mORMots KISS/DRY/SOC/YAGNI/TDD and Convention Over Configuration patterns. But you have also some UI units available (including screen auto-generation, reporting and ribbon GUI), and you can use it from any RAD, web, or AJAX clients (via JavaScript or Smart Mobile Studio).

No dependency is needed on the client side (no DB driver, or third-party runtime): it is able to connect via standard HTTP, even through a corporate proxy or a VPN. Rich Delphi clients can be deployed just by copying and running a stand-alone small executable, with no installation process. Stream can be encrypted via HTTS or with proven SHA/AES-256. Endpoints are configured automatically for each published interface on both server and client sides, and creating a load-balancing proxy is a matter of one method call.

Speed and scalability has been implemented from the ground up: a genuine optimized multi-threaded core let a single server handle more than 50,000 concurrent clients, faster than DataSnap, WCF or node.js, and our rich SOA design is able to implement both vertical and horizontal scalable hosting, using recognized enterprise-level SQL or NoSQL databases for storage.

Even if mORMot will be more easily used in a project designed from scratch, it fits very well the purpose of evolving any existing Delphi project, or creating the server side part of an AJAX application.

Some units (e.g. SynPdf, SynGdiPlus, SynBigTable, SynCommons, SynCrypto, SynDB*, SynSQLite3, SynMongoDB, SynMustache, SynSM, mORMotReport) are used by mORMot, but do not require the whole framework to be linked. That is, you can use e.g. only PDF generation, SynDB fast database access, a static-linked SQLite3 engine, direct MongoDB access, Mustache templates, SpiderMonkey JavaScript engine, code-generated reports, or the TDocVariant, TDynArray, TSynLog classes of SynCommons, without using the main mORMot units and features (ORM, Client-Server, services, UI).

Some of those units can even be compiled with Delphi 5 (e.g. SynPdf, SynDB).","Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using it directly as the description. The output should include only a short term/phrase introducing the repository.",Open Source Client-Server ORM/SOA MVC Framework for Delphi and FPC,0.3333333333333333,0.2727272727272727,0.3333333333333333
32,90,"# Machine Learning Engineer Nanodegree  
## Specializations  
## Project: Capstone Proposal and Capstone Project  

Welcome to my Capstone Project. This README provides instructions about the documentation and code.  

The proposal I submitted is available in the proposal.pdf file. I have provided both reviews I had, named: Proposal Udacity Review First.pdf and Proposal Udacity Review Final.pdf.  

The capstone project report is available as capstone_report.pdf. The report does NOT contain any code and has been written to provide a complete guide to the steps I followed in order to complete my project. The report follows the suggested capstone project structure as of the provided template.  

A companion to the report is a Jupyter notebook capstone_report.ipynb that contains all Python code within a version of the report content to help understand the context in which the code was written. The Jupyter notebook is sufficient to access all results; running all cells loads the data and executes all code. The notebook is also available in exported HTML format for convenience.  

I used only standard libraries (Anaconda installation with Python 2.7), in particular: numpy, pandas, matplotlib, scipy.stats (for norm).  

The reference folder contains additional papers I read to document possible solutions, which are referenced inside the report.  

The data folder contains both JSON and CSV versions of the data samples used for the report.  

I proofread only the capstone PDF report. Please forgive any typos you may encounter in the Jupyter notebook.","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Machine Learning Engineer Nanodegree Capstone Project,0.8333333333333334,0.6,0.8333333333333334
32,91,"# slog-rs - The Logging for Rust

slog-rs is an ecosystem of reusable components for structured, extensible, composable, and contextual logging for Rust.

The ambition is to be The Logging Library for Rust. slog-rs should accommodate a variety of logging features and requirements. If there is a feature that you need and the standard Rust logging crate is missing, slog-rs should have it.

This power comes with a little steeper learning curve, so if you experience any problems, please seek community support. While the code is reliable, the documentation sometimes could use improvement. Please report all issues and ideas.

Reasons you might want to stick with slog-rs anyway:

* You do not benefit from alternative logging support
* You consider mature, stable code & API a plus
* It has some features that other logging libraries are missing
* Great performance (though no direct comparison has been done, its performance is very good)","
Summarize the following extracted text from a Github repository README into a short term/phrase introducing the repository:
<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>
 
The output should include only a short term/phrase introducing the repository.
",Structured and extensible logging library for Rust,0.7142857142857143,0.16666666666666666,0.7142857142857143
,,,,,,,,,,"Summarize the following extracted text from a GitHub repository README into a short term or phrase introducing the repository:

<EXTRACTED_README>
$extracted_text
</EXTRACTED_README>

If the extracted text contains an existing tagline, functional description, purpose statement, or overview at the beginning, prioritize using that exact phrase as the output.

The output should include only a short term or phrase introducing the repository."
